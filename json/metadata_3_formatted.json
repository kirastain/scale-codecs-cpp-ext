  {
    "V14": {
      "lookup": {
        "types": [
          {
            "id": 0,
            "type": {
              "path": [
                "sp_core",
                "crypto",
                "AccountId32"
              ],
              "params": [],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null,
                      "type": 1,
                      "typeName": "[u8; 32]",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 1,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "Array": {
                  "len": 32,
                  "type": 2
                }
              },
              "docs": []
            }
          },
          {
            "id": 2,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "Primitive": "U8"
              },
              "docs": []
            }
          },
          {
            "id": 3,
            "type": {
              "path": [
                "frame_system",
                "AccountInfo"
              ],
              "params": [
                {
                  "name": "Nonce",
                  "type": 4
                },
                {
                  "name": "AccountData",
                  "type": 5
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": "nonce",
                      "type": 4,
                      "typeName": "Nonce",
                      "docs": []
                    },
                    {
                      "name": "consumers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "providers",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "sufficients",
                      "type": 4,
                      "typeName": "RefCount",
                      "docs": []
                    },
                    {
                      "name": "data",
                      "type": 5,
                      "typeName": "AccountData",
                      "docs": []
                    }
                  ]
                }
              },
              "docs": []
            }
          },
          {
            "id": 4,
            "type": {
              "path": [],
              "params": [],
              "def": {
                "Primitive": "U32"
              },
              "docs": []
            }
          },
          {
            "id": 5,
            "type": {
              "path": [
                "pallet_balances",
                "types",
                "AccountData"
              ],
              "params": [
                {
                  "name": "Balance",
                  "type": 6
                }
              ],
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": free
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": reserved
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": frozen
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": flags
                      "type": 7
                      "typeName": ExtraFlags
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 6
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": U128
              }
              "docs": []
            }
          }
          {
            "id": 7
            "type": {
              "path": [
                pallet_balances
                types
                ExtraFlags
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 6
                      "typeName": u128
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 8
            "type": {
              "path": [
                frame_support
                dispatch
                PerDispatchClass
              ]
              "params": [
                {
                  "name": T
                  "type": 9
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": normal
                      "type": 9
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": operational
                      "type": 9
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": mandatory
                      "type": 9
                      "typeName": T
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 9
            "type": {
              "path": [
                sp_weights
                weight_v2
                Weight
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": ref_time
                      "type": 10
                      "typeName": u64
                      "docs": []
                    }
                    {
                      "name": proof_size
                      "type": 10
                      "typeName": u64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 10
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 11
                }
              }
              "docs": []
            }
          }
          {
            "id": 11
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": U64
              }
              "docs": []
            }
          }
          {
            "id": 12
            "type": {
              "path": [
                primitive_types
                H256
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 13
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 14
            "type": {
              "path": [
                sp_runtime
                generic
                digest
                Digest
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": logs
                      "type": 15
                      "typeName": Vec<DigestItem>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 15
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 16
                }
              }
              "docs": []
            }
          }
          {
            "id": 16
            "type": {
              "path": [
                sp_runtime
                generic
                digest
                DigestItem
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PreRuntime
                      "fields": [
                        {
                          "name": null
                          "type": 17
                          "typeName": ConsensusEngineId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Consensus
                      "fields": [
                        {
                          "name": null
                          "type": 17
                          "typeName": ConsensusEngineId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Seal
                      "fields": [
                        {
                          "name": null
                          "type": 17
                          "typeName": ConsensusEngineId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Other
                      "fields": [
                        {
                          "name": null
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": RuntimeEnvironmentUpdated
                      "fields": []
                      "index": 8
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 17
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 4
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 18
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 19
                }
              }
              "docs": []
            }
          }
          {
            "id": 19
            "type": {
              "path": [
                frame_system
                EventRecord
              ]
              "params": [
                {
                  "name": E
                  "type": 20
                }
                {
                  "name": T
                  "type": 12
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": phase
                      "type": 336
                      "typeName": Phase
                      "docs": []
                    }
                    {
                      "name": event
                      "type": 20
                      "typeName": E
                      "docs": []
                    }
                    {
                      "name": topics
                      "type": 139
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 20
            "type": {
              "path": [
                vara_runtime
                RuntimeEvent
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": System
                      "fields": [
                        {
                          "name": null
                          "type": 21
                          "typeName": "frame_system"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Grandpa
                      "fields": [
                        {
                          "name": null
                          "type": 30
                          "typeName": "pallet_grandpa"::Event
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Balances
                      "fields": [
                        {
                          "name": null
                          "type": 35
                          "typeName": "pallet_balances"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Vesting
                      "fields": [
                        {
                          "name": null
                          "type": 37
                          "typeName": "pallet_vesting"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": TransactionPayment
                      "fields": [
                        {
                          "name": null
                          "type": 38
                          "typeName": "pallet_transaction_payment"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": BagsList
                      "fields": [
                        {
                          "name": null
                          "type": 39
                          "typeName": "pallet_bags_list"::Event<Runtime, "pallet_bags_list"::Instance1>
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": ImOnline
                      "fields": [
                        {
                          "name": null
                          "type": 40
                          "typeName": "pallet_im_online"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": Staking
                      "fields": [
                        {
                          "name": null
                          "type": 49
                          "typeName": "pallet_staking"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": []
                    }
                    {
                      "name": Session
                      "fields": [
                        {
                          "name": null
                          "type": 56
                          "typeName": "pallet_session"::Event
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": Treasury
                      "fields": [
                        {
                          "name": null
                          "type": 57
                          "typeName": "pallet_treasury"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": []
                    }
                    {
                      "name": Utility
                      "fields": [
                        {
                          "name": null
                          "type": 59
                          "typeName": "pallet_utility"::Event
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": ConvictionVoting
                      "fields": [
                        {
                          "name": null
                          "type": 61
                          "typeName": "pallet_conviction_voting"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": []
                    }
                    {
                      "name": Referenda
                      "fields": [
                        {
                          "name": null
                          "type": 62
                          "typeName": "pallet_referenda"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": []
                    }
                    {
                      "name": FellowshipCollective
                      "fields": [
                        {
                          "name": null
                          "type": 281
                          "typeName": "pallet_ranked_collective"::Event<Runtime, "pallet_ranked_collective"::nInstance1>
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": []
                    }
                    {
                      "name": FellowshipReferenda
                      "fields": [
                        {
                          "name": null
                          "type": 284
                          "typeName": "pallet_referenda"::Event<Runtime, "pallet_referenda"::Instance2>
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": []
                    }
                    {
                      "name": Whitelist
                      "fields": [
                        {
                          "name": null
                          "type": 285
                          "typeName": "pallet_whitelist"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": []
                    }
                    {
                      "name": Scheduler
                      "fields": [
                        {
                          "name": null
                          "type": 290
                          "typeName": "pallet_scheduler"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 22
                      "docs": []
                    }
                    {
                      "name": Preimage
                      "fields": [
                        {
                          "name": null
                          "type": 292
                          "typeName": "pallet_preimage"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": []
                    }
                    {
                      "name": Identity
                      "fields": [
                        {
                          "name": null
                          "type": 293
                          "typeName": "pallet_identity"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 24
                      "docs": []
                    }
                    {
                      "name": Proxy
                      "fields": [
                        {
                          "name": null
                          "type": 294
                          "typeName": "pallet_proxy"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 25
                      "docs": []
                    }
                    {
                      "name": Multisig
                      "fields": [
                        {
                          "name": null
                          "type": 295
                          "typeName": "pallet_multisig"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 26
                      "docs": []
                    }
                    {
                      "name": ElectionProviderMultiPhase
                      "fields": [
                        {
                          "name": null
                          "type": 296
                          "typeName": "pallet_election_provider_multi_phase"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 27
                      "docs": []
                    }
                    {
                      "name": Offences
                      "fields": [
                        {
                          "name": null
                          "type": 300
                          "typeName": "pallet_offences"::Event
                          "docs": []
                        }
                      ]
                      "index": 28
                      "docs": []
                    }
                    {
                      "name": Bounties
                      "fields": [
                        {
                          "name": null
                          "type": 301
                          "typeName": "pallet_bounties"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 29
                      "docs": []
                    }
                    {
                      "name": ChildBounties
                      "fields": [
                        {
                          "name": null
                          "type": 302
                          "typeName": "pallet_child_bounties"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 30
                      "docs": []
                    }
                    {
                      "name": NominationPools
                      "fields": [
                        {
                          "name": null
                          "type": 303
                          "typeName": "pallet_nomination_pools"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 31
                      "docs": []
                    }
                    {
                      "name": Gear
                      "fields": [
                        {
                          "name": null
                          "type": 304
                          "typeName": "pallet_gear"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 104
                      "docs": []
                    }
                    {
                      "name": StakingRewards
                      "fields": [
                        {
                          "name": null
                          "type": 334
                          "typeName": "pallet_gear_staking_rewards"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 106
                      "docs": []
                    }
                    {
                      "name": GearVoucher
                      "fields": [
                        {
                          "name": null
                          "type": 335
                          "typeName": "pallet_gear_voucher"::Event<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 107
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 21
            "type": {
              "path": [
                frame_system
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ExtrinsicSuccess
                      "fields": [
                        {
                          "name": dispatch_info
                          "type": 22
                          "typeName": DispatchInfo
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        An extrinsic completed successfully.
                      ]
                    }
                    {
                      "name": ExtrinsicFailed
                      "fields": [
                        {
                          "name": dispatch_error
                          "type": 25
                          "typeName": DispatchError
                          "docs": []
                        }
                        {
                          "name": dispatch_info
                          "type": 22
                          "typeName": DispatchInfo
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        An extrinsic failed.
                      ]
                    }
                    {
                      "name": CodeUpdated
                      "fields": []
                      "index": 2
                      "docs": [
                        `:code` was updated.
                      ]
                    }
                    {
                      "name": NewAccount
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A new account was created.
                      ]
                    }
                    {
                      "name": KilledAccount
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        An account was reaped.
                      ]
                    }
                    {
                      "name": Remarked
                      "fields": [
                        {
                          "name": sender
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        On on-chain remark happened.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Event for the System pallet.
              ]
            }
          }
          {
            "id": 22
            "type": {
              "path": [
                frame_support
                dispatch
                DispatchInfo
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": weight
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": class
                      "type": 23
                      "typeName": DispatchClass
                      "docs": []
                    }
                    {
                      "name": pays_fee
                      "type": 24
                      "typeName": Pays
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 23
            "type": {
              "path": [
                frame_support
                dispatch
                DispatchClass
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Normal
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Operational
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Mandatory
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 24
            "type": {
              "path": [
                frame_support
                dispatch
                Pays
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Yes
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": No
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 25
            "type": {
              "path": [
                sp_runtime
                DispatchError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Other
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": CannotLookup
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": BadOrigin
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Module
                      "fields": [
                        {
                          "name": null
                          "type": 26
                          "typeName": ModuleError
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": ConsumerRemaining
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": NoProviders
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": TooManyConsumers
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Token
                      "fields": [
                        {
                          "name": null
                          "type": 27
                          "typeName": TokenError
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": Arithmetic
                      "fields": [
                        {
                          "name": null
                          "type": 28
                          "typeName": ArithmeticError
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": Transactional
                      "fields": [
                        {
                          "name": null
                          "type": 29
                          "typeName": TransactionalError
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": []
                    }
                    {
                      "name": Exhausted
                      "fields": []
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": Corruption
                      "fields": []
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": Unavailable
                      "fields": []
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": RootNotAllowed
                      "fields": []
                      "index": 13
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 26
            "type": {
              "path": [
                sp_runtime
                ModuleError
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": index
                      "type": 2
                      "typeName": u8
                      "docs": []
                    }
                    {
                      "name": error
                      "type": 17
                      "typeName": [u8; MAX_MODULE_ERROR_ENCODED_SIZE]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 27
            "type": {
              "path": [
                sp_runtime
                TokenError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": FundsUnavailable
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": OnlyProvider
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": BelowMinimum
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": CannotCreate
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": UnknownAsset
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Frozen
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": CannotCreateHold
                      "fields": []
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": NotExpendable
                      "fields": []
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": Blocked
                      "fields": []
                      "index": 9
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 28
            "type": {
              "path": [
                sp_arithmetic
                ArithmeticError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Underflow
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Overflow
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": DivisionByZero
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 29
            "type": {
              "path": [
                sp_runtime
                TransactionalError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": LimitReached
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": NoLayer
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 30
            "type": {
              "path": [
                pallet_grandpa
                pallet
                Event
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NewAuthorities
                      "fields": [
                        {
                          "name": authority_set
                          "type": 31
                          "typeName": AuthorityList
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        New authority set has been applied.
                      ]
                    }
                    {
                      "name": Paused
                      "fields": []
                      "index": 1
                      "docs": [
                        Current authority set has been paused.
                      ]
                    }
                    {
                      "name": Resumed
                      "fields": []
                      "index": 2
                      "docs": [
                        Current authority set has been resumed.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 31
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 32
                }
              }
              "docs": []
            }
          }
          {
            "id": 32
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  33
                  11
                ]
              }
              "docs": []
            }
          }
          {
            "id": 33
            "type": {
              "path": [
                sp_consensus_grandpa
                app
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 34
                      "typeName": "ed25519"::Public
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 34
            "type": {
              "path": [
                sp_core
                ed25519
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 35
            "type": {
              "path": [
                pallet_balances
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Endowed
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": free_balance
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        An account was created with some free balance.
                      ]
                    }
                    {
                      "name": DustLost
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        An account was removed whose balance was non-zero but below ExistentialDeposit,
                        resulting in an outright loss.
                      ]
                    }
                    {
                      "name": Transfer
                      "fields": [
                        {
                          "name": from
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": to
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        Transfer succeeded.
                      ]
                    }
                    {
                      "name": BalanceSet
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": free
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A balance was set by root.
                      ]
                    }
                    {
                      "name": Reserved
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        Some balance was reserved (moved from free to reserved).
                      ]
                    }
                    {
                      "name": Unreserved
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        Some balance was unreserved (moved from reserved to free).
                      ]
                    }
                    {
                      "name": ReserveRepatriated
                      "fields": [
                        {
                          "name": from
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": to
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                        {
                          "name": destination_status
                          "type": 36
                          "typeName": Status
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        Some balance was moved from the reserve of the first account to the second account.
                        Final argument indicates the destination balance type.
                      ]
                    }
                    {
                      "name": Deposit
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        Some amount was deposited (e.g. for transaction fees).
                      ]
                    }
                    {
                      "name": Withdraw
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        Some amount was withdrawn from the account (e.g. for transaction fees).
                      ]
                    }
                    {
                      "name": Slashed
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        Some amount was removed from the account (e.g. for misbehavior).
                      ]
                    }
                    {
                      "name": Minted
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        Some amount was minted into an account.
                      ]
                    }
                    {
                      "name": Burned
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        Some amount was burned from an account.
                      ]
                    }
                    {
                      "name": Suspended
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        Some amount was suspended from an account (it can be restored later).
                      ]
                    }
                    {
                      "name": Restored
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        Some amount was restored into an account.
                      ]
                    }
                    {
                      "name": Upgraded
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": [
                        An account was upgraded.
                      ]
                    }
                    {
                      "name": Issued
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": [
                        Total issuance was increased by `amount`, creating a credit to be balanced.
                      ]
                    }
                    {
                      "name": Rescinded
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": [
                        Total issuance was decreased by `amount`, creating a debt to be balanced.
                      ]
                    }
                    {
                      "name": Locked
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": [
                        Some balance was locked.
                      ]
                    }
                    {
                      "name": Unlocked
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": [
                        Some balance was unlocked.
                      ]
                    }
                    {
                      "name": Frozen
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": [
                        Some balance was frozen.
                      ]
                    }
                    {
                      "name": Thawed
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": [
                        Some balance was thawed.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 36
            "type": {
              "path": [
                frame_support
                traits
                tokens
                misc
                BalanceStatus
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Free
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Reserved
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 37
            "type": {
              "path": [
                pallet_vesting
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": VestingUpdated
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": unvested
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        The amount vested has been updated. This could indicate a change in funds available.
                        The balance given is the amount which is left unvested (and thus locked).
                      ]
                    }
                    {
                      "name": VestingCompleted
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        An [account] has become fully vested.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 38
            "type": {
              "path": [
                pallet_transaction_payment
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": TransactionFeePaid
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": actual_fee
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": tip
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,
                        has been paid by `who`.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 39
            "type": {
              "path": [
                pallet_bags_list
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Rebagged
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": from
                          "type": 11
                          "typeName": "T"::Score
                          "docs": []
                        }
                        {
                          "name": to
                          "type": 11
                          "typeName": "T"::Score
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        Moved an account from one bag to another.
                      ]
                    }
                    {
                      "name": ScoreUpdated
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": new_score
                          "type": 11
                          "typeName": "T"::Score
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        Updated the score of some account to the given amount.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 40
            "type": {
              "path": [
                pallet_im_online
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": HeartbeatReceived
                      "fields": [
                        {
                          "name": authority_id
                          "type": 41
                          "typeName": "T"::AuthorityId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A new heartbeat was received from `AuthorityId`.
                      ]
                    }
                    {
                      "name": AllGood
                      "fields": []
                      "index": 1
                      "docs": [
                        At the end of the session, no offence was committed.
                      ]
                    }
                    {
                      "name": SomeOffline
                      "fields": [
                        {
                          "name": offline
                          "type": 43
                          "typeName": Vec<IdentificationTuple<T>>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        At the end of the session, at least one validator was found to be offline.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 41
            "type": {
              "path": [
                pallet_im_online
                sr25519
                app_sr25519
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 42
                      "typeName": "sr25519"::Public
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 42
            "type": {
              "path": [
                sp_core
                sr25519
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 43
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 44
                }
              }
              "docs": []
            }
          }
          {
            "id": 44
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  45
                ]
              }
              "docs": []
            }
          }
          {
            "id": 45
            "type": {
              "path": [
                pallet_staking
                Exposure
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": total
                      "type": 46
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": own
                      "type": 46
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": others
                      "type": 47
                      "typeName": Vec<IndividualExposure<AccountId, Balance>>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 46
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 6
                }
              }
              "docs": []
            }
          }
          {
            "id": 47
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 48
                }
              }
              "docs": []
            }
          }
          {
            "id": 48
            "type": {
              "path": [
                pallet_staking
                IndividualExposure
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": who
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 46
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 49
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": EraPaid
                      "fields": [
                        {
                          "name": era_index
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                        {
                          "name": validator_payout
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": remainder
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        The era payout has been set; the first balance is the validator-payout; the second is
                        the remainder from the maximum amount of reward.
                      ]
                    }
                    {
                      "name": Rewarded
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": dest
                          "type": 50
                          "typeName": RewardDestination<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        The nominator has been rewarded by this amount to this destination.
                      ]
                    }
                    {
                      "name": Slashed
                      "fields": [
                        {
                          "name": staker
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A staker (validator or nominator) has been slashed by the given amount.
                      ]
                    }
                    {
                      "name": SlashReported
                      "fields": [
                        {
                          "name": validator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": fraction
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": slash_era
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A slash for the given validator, for the given percentage of their stake, at the given
                        era as been reported.
                      ]
                    }
                    {
                      "name": OldSlashingReportDiscarded
                      "fields": [
                        {
                          "name": session_index
                          "type": 4
                          "typeName": SessionIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        An old slashing report from a prior era was discarded because it could
                        not be processed.
                      ]
                    }
                    {
                      "name": StakersElected
                      "fields": []
                      "index": 5
                      "docs": [
                        A new set of stakers was elected.
                      ]
                    }
                    {
                      "name": Bonded
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        An account has bonded this amount. [stash, amount]
                        
                        "NOTE": This event is only emitted when funds are bonded via a dispatchable. Notably,
                        it will not be emitted for staking rewards when they are added to stake.
                      ]
                    }
                    {
                      "name": Unbonded
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        An account has unbonded this amount.
                      ]
                    }
                    {
                      "name": Withdrawn
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`
                        from the unlocking queue.
                      ]
                    }
                    {
                      "name": Kicked
                      "fields": [
                        {
                          "name": nominator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        A nominator has been kicked from a validator.
                      ]
                    }
                    {
                      "name": StakingElectionFailed
                      "fields": []
                      "index": 10
                      "docs": [
                        The election failed. No new era is planned.
                      ]
                    }
                    {
                      "name": Chilled
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        An account has stopped participating as either a validator or nominator.
                      ]
                    }
                    {
                      "name": PayoutStarted
                      "fields": [
                        {
                          "name": era_index
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                        {
                          "name": validator_stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        The stakers' rewards are getting paid.
                      ]
                    }
                    {
                      "name": ValidatorPrefsSet
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": prefs
                          "type": 52
                          "typeName": ValidatorPrefs
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        A validator has set their preferences.
                      ]
                    }
                    {
                      "name": SnapshotVotersSizeExceeded
                      "fields": [
                        {
                          "name": size
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": [
                        Voters size limit reached.
                      ]
                    }
                    {
                      "name": SnapshotTargetsSizeExceeded
                      "fields": [
                        {
                          "name": size
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": [
                        Targets size limit reached.
                      ]
                    }
                    {
                      "name": ForceEra
                      "fields": [
                        {
                          "name": mode
                          "type": 55
                          "typeName": Forcing
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": [
                        A new force era mode was set.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 50
            "type": {
              "path": [
                pallet_staking
                RewardDestination
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Staked
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Stash
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Controller
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Account
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": None
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 51
            "type": {
              "path": [
                sp_arithmetic
                per_things
                Perbill
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 52
            "type": {
              "path": [
                pallet_staking
                ValidatorPrefs
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": commission
                      "type": 53
                      "typeName": Perbill
                      "docs": []
                    }
                    {
                      "name": blocked
                      "type": 54
                      "typeName": bool
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 53
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 51
                }
              }
              "docs": []
            }
          }
          {
            "id": 54
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": Bool
              }
              "docs": []
            }
          }
          {
            "id": 55
            "type": {
              "path": [
                pallet_staking
                Forcing
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotForcing
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": ForceNew
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": ForceNone
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": ForceAlways
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 56
            "type": {
              "path": [
                pallet_session
                pallet
                Event
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NewSession
                      "fields": [
                        {
                          "name": session_index
                          "type": 4
                          "typeName": SessionIndex
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        New session has happened. Note that the argument is the session index, not the
                        block number as the type might suggest.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 57
            "type": {
              "path": [
                pallet_treasury
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Proposed
                      "fields": [
                        {
                          "name": proposal_index
                          "type": 4
                          "typeName": ProposalIndex
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        New proposal.
                      ]
                    }
                    {
                      "name": Spending
                      "fields": [
                        {
                          "name": budget_remaining
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        We have ended a spend period and will now allocate funds.
                      ]
                    }
                    {
                      "name": Awarded
                      "fields": [
                        {
                          "name": proposal_index
                          "type": 4
                          "typeName": ProposalIndex
                          "docs": []
                        }
                        {
                          "name": award
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": account
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        Some funds have been allocated.
                      ]
                    }
                    {
                      "name": Rejected
                      "fields": [
                        {
                          "name": proposal_index
                          "type": 4
                          "typeName": ProposalIndex
                          "docs": []
                        }
                        {
                          "name": slashed
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A proposal was rejected; funds were slashed.
                      ]
                    }
                    {
                      "name": Burnt
                      "fields": [
                        {
                          "name": burnt_funds
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        Some of our funds have been burnt.
                      ]
                    }
                    {
                      "name": Rollover
                      "fields": [
                        {
                          "name": rollover_balance
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        Spending has finished; this is the amount that rolls over until next spend.
                      ]
                    }
                    {
                      "name": Deposit
                      "fields": [
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        Some funds have been deposited.
                      ]
                    }
                    {
                      "name": SpendApproved
                      "fields": [
                        {
                          "name": proposal_index
                          "type": 4
                          "typeName": ProposalIndex
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        A new spend proposal has been approved.
                      ]
                    }
                    {
                      "name": UpdatedInactive
                      "fields": [
                        {
                          "name": reactivated
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": deactivated
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        The inactive funds of the pallet have been updated.
                      ]
                    }
                    {
                      "name": AssetSpendApproved
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                        {
                          "name": asset_kind
                          "type": 58
                          "typeName": "T"::AssetKind
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": AssetBalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::Beneficiary
                          "docs": []
                        }
                        {
                          "name": valid_from
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": expire_at
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        A new asset spend proposal has been approved.
                      ]
                    }
                    {
                      "name": AssetSpendVoided
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        An approved spend was voided.
                      ]
                    }
                    {
                      "name": Paid
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                        {
                          "name": payment_id
                          "type": 58
                          "typeName": <"T"::Paymaster as Pay>::Id
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        A payment happened.
                      ]
                    }
                    {
                      "name": PaymentFailed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                        {
                          "name": payment_id
                          "type": 58
                          "typeName": <"T"::Paymaster as Pay>::Id
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        A payment failed and can be retried.
                      ]
                    }
                    {
                      "name": SpendProcessed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        A spend was processed and removed from the storage. It might have been successfully
                        paid or it may have expired.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 58
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": []
              }
              "docs": []
            }
          }
          {
            "id": 59
            "type": {
              "path": [
                pallet_utility
                pallet
                Event
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": BatchInterrupted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                        {
                          "name": error
                          "type": 25
                          "typeName": DispatchError
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        Batch of dispatches did not complete fully. Index of first failing dispatch given, as
                        well as the error.
                      ]
                    }
                    {
                      "name": BatchCompleted
                      "fields": []
                      "index": 1
                      "docs": [
                        Batch of dispatches completed fully with no error.
                      ]
                    }
                    {
                      "name": BatchCompletedWithErrors
                      "fields": []
                      "index": 2
                      "docs": [
                        Batch of dispatches completed but has errors.
                      ]
                    }
                    {
                      "name": ItemCompleted
                      "fields": []
                      "index": 3
                      "docs": [
                        A single item within a Batch of dispatches has completed with no error.
                      ]
                    }
                    {
                      "name": ItemFailed
                      "fields": [
                        {
                          "name": error
                          "type": 25
                          "typeName": DispatchError
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        A single item within a Batch of dispatches has completed with error.
                      ]
                    }
                    {
                      "name": DispatchedAs
                      "fields": [
                        {
                          "name": result
                          "type": 60
                          "typeName": DispatchResult
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        A call was dispatched.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 60
            "type": {
              "path": [
                Result
              ]
              "params": [
                {
                  "name": T
                  "type": 58
                }
                {
                  "name": E
                  "type": 25
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Ok
                      "fields": [
                        {
                          "name": null
                          "type": 58
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Err
                      "fields": [
                        {
                          "name": null
                          "type": 25
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 61
            "type": {
              "path": [
                pallet_conviction_voting
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Delegated
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        An account has delegated their vote to another account. [who, target]
                      ]
                    }
                    {
                      "name": Undelegated
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        An [account] has cancelled a previous delegation operation.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 62
            "type": {
              "path": [
                pallet_referenda
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Submitted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": [
                            The track (and by extension proposal dispatch origin) of this referendum.
                          ]
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": [
                            The proposal for the referendum.
                          ]
                        }
                      ]
                      "index": 0
                      "docs": [
                        A referendum has been submitted.
                      ]
                    }
                    {
                      "name": DecisionDepositPlaced
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 1
                      "docs": [
                        The decision deposit has been placed.
                      ]
                    }
                    {
                      "name": DecisionDepositRefunded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 2
                      "docs": [
                        The decision deposit has been refunded.
                      ]
                    }
                    {
                      "name": DepositSlashed
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 3
                      "docs": [
                        A deposit has been slashaed.
                      ]
                    }
                    {
                      "name": DecisionStarted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": [
                            The track (and by extension proposal dispatch origin) of this referendum.
                          ]
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": [
                            The proposal for the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The current tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 4
                      "docs": [
                        A referendum has moved into the deciding phase.
                      ]
                    }
                    {
                      "name": ConfirmStarted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": ConfirmAborted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Confirmed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 7
                      "docs": [
                        A referendum has ended its confirmation phase and is ready for approval.
                      ]
                    }
                    {
                      "name": Approved
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 8
                      "docs": [
                        A referendum has been approved and its proposal has been scheduled.
                      ]
                    }
                    {
                      "name": Rejected
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 9
                      "docs": [
                        A proposal has been rejected by referendum.
                      ]
                    }
                    {
                      "name": TimedOut
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 10
                      "docs": [
                        A referendum has been timed out without being decided.
                      ]
                    }
                    {
                      "name": Cancelled
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 11
                      "docs": [
                        A referendum has been cancelled.
                      ]
                    }
                    {
                      "name": Killed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 280
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 12
                      "docs": [
                        A referendum has been killed.
                      ]
                    }
                    {
                      "name": SubmissionDepositRefunded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 13
                      "docs": [
                        The submission deposit has been refunded.
                      ]
                    }
                    {
                      "name": MetadataSet
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": [
                            Preimage hash.
                          ]
                        }
                      ]
                      "index": 14
                      "docs": [
                        Metadata for a referendum has been set.
                      ]
                    }
                    {
                      "name": MetadataCleared
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": [
                            Preimage hash.
                          ]
                        }
                      ]
                      "index": 15
                      "docs": [
                        Metadata for a referendum has been cleared.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 63
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": U16
              }
              "docs": []
            }
          }
          {
            "id": 64
            "type": {
              "path": [
                frame_support
                traits
                preimages
                Bounded
              ]
              "params": [
                {
                  "name": T
                  "type": 65
                }
                {
                  "name": H
                  "type": 278
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Legacy
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "H"::Output
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Inline
                      "fields": [
                        {
                          "name": null
                          "type": 279
                          "typeName": BoundedInline
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Lookup
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "H"::Output
                          "docs": []
                        }
                        {
                          "name": len
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 65
            "type": {
              "path": [
                vara_runtime
                RuntimeCall
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": System
                      "fields": [
                        {
                          "name": null
                          "type": 66
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<System, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Timestamp
                      "fields": [
                        {
                          "name": null
                          "type": 70
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Timestamp, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Babe
                      "fields": [
                        {
                          "name": null
                          "type": 71
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Babe, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Grandpa
                      "fields": [
                        {
                          "name": null
                          "type": 81
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Grandpa, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Balances
                      "fields": [
                        {
                          "name": null
                          "type": 93
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Balances, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Vesting
                      "fields": [
                        {
                          "name": null
                          "type": 98
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Vesting, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": BagsList
                      "fields": [
                        {
                          "name": null
                          "type": 100
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<BagsList, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": ImOnline
                      "fields": [
                        {
                          "name": null
                          "type": 101
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<ImOnline, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": Staking
                      "fields": [
                        {
                          "name": null
                          "type": 105
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Staking, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": []
                    }
                    {
                      "name": Session
                      "fields": [
                        {
                          "name": null
                          "type": 113
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Session, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": Treasury
                      "fields": [
                        {
                          "name": null
                          "type": 116
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Treasury, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": []
                    }
                    {
                      "name": Utility
                      "fields": [
                        {
                          "name": null
                          "type": 118
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Utility, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": ConvictionVoting
                      "fields": [
                        {
                          "name": null
                          "type": 124
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<ConvictionVoting, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": []
                    }
                    {
                      "name": Referenda
                      "fields": [
                        {
                          "name": null
                          "type": 129
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Referenda, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": []
                    }
                    {
                      "name": FellowshipCollective
                      "fields": [
                        {
                          "name": null
                          "type": 132
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<FellowshipCollective, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": []
                    }
                    {
                      "name": FellowshipReferenda
                      "fields": [
                        {
                          "name": null
                          "type": 133
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<FellowshipReferenda, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": []
                    }
                    {
                      "name": Whitelist
                      "fields": [
                        {
                          "name": null
                          "type": 134
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Whitelist, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": []
                    }
                    {
                      "name": Scheduler
                      "fields": [
                        {
                          "name": null
                          "type": 135
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Scheduler, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 22
                      "docs": []
                    }
                    {
                      "name": Preimage
                      "fields": [
                        {
                          "name": null
                          "type": 138
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Preimage, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": []
                    }
                    {
                      "name": Identity
                      "fields": [
                        {
                          "name": null
                          "type": 140
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Identity, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 24
                      "docs": []
                    }
                    {
                      "name": Proxy
                      "fields": [
                        {
                          "name": null
                          "type": 182
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Proxy, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 25
                      "docs": []
                    }
                    {
                      "name": Multisig
                      "fields": [
                        {
                          "name": null
                          "type": 185
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Multisig, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 26
                      "docs": []
                    }
                    {
                      "name": ElectionProviderMultiPhase
                      "fields": [
                        {
                          "name": null
                          "type": 188
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<ElectionProviderMultiPhase, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 27
                      "docs": []
                    }
                    {
                      "name": Bounties
                      "fields": [
                        {
                          "name": null
                          "type": 249
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Bounties, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 29
                      "docs": []
                    }
                    {
                      "name": ChildBounties
                      "fields": [
                        {
                          "name": null
                          "type": 250
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<ChildBounties, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 30
                      "docs": []
                    }
                    {
                      "name": NominationPools
                      "fields": [
                        {
                          "name": null
                          "type": 251
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<NominationPools, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 31
                      "docs": []
                    }
                    {
                      "name": Gear
                      "fields": [
                        {
                          "name": null
                          "type": 262
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<Gear, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 104
                      "docs": []
                    }
                    {
                      "name": StakingRewards
                      "fields": [
                        {
                          "name": null
                          "type": 267
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<StakingRewards, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 106
                      "docs": []
                    }
                    {
                      "name": GearVoucher
                      "fields": [
                        {
                          "name": null
                          "type": 268
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"dispatchn"::CallableCallFor<GearVoucher, Runtime>
                          "docs": []
                        }
                      ]
                      "index": 107
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 66
            "type": {
              "path": [
                frame_system
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": remark
                      "fields": [
                        {
                          "name": remark
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::remark`].
                      ]
                    }
                    {
                      "name": set_heap_pages
                      "fields": [
                        {
                          "name": pages
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::set_heap_pages`].
                      ]
                    }
                    {
                      "name": set_code
                      "fields": [
                        {
                          "name": code
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::set_code`].
                      ]
                    }
                    {
                      "name": set_code_without_checks
                      "fields": [
                        {
                          "name": code
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::set_code_without_checks`].
                      ]
                    }
                    {
                      "name": set_storage
                      "fields": [
                        {
                          "name": items
                          "type": 67
                          "typeName": Vec<KeyValue>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::set_storage`].
                      ]
                    }
                    {
                      "name": kill_storage
                      "fields": [
                        {
                          "name": keys
                          "type": 69
                          "typeName": Vec<Key>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::kill_storage`].
                      ]
                    }
                    {
                      "name": kill_prefix
                      "fields": [
                        {
                          "name": prefix
                          "type": 13
                          "typeName": Key
                          "docs": []
                        }
                        {
                          "name": subkeys
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::kill_prefix`].
                      ]
                    }
                    {
                      "name": remark_with_event
                      "fields": [
                        {
                          "name": remark
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::remark_with_event`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 67
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 68
                }
              }
              "docs": []
            }
          }
          {
            "id": 68
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  13
                  13
                ]
              }
              "docs": []
            }
          }
          {
            "id": 69
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 13
                }
              }
              "docs": []
            }
          }
          {
            "id": 70
            "type": {
              "path": [
                pallet_timestamp
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": set
                      "fields": [
                        {
                          "name": now
                          "type": 10
                          "typeName": "T"::Moment
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::set`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 71
            "type": {
              "path": [
                pallet_babe
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": report_equivocation
                      "fields": [
                        {
                          "name": equivocation_proof
                          "type": 72
                          "typeName": Box<EquivocationProof<HeaderFor<T>>>
                          "docs": []
                        }
                        {
                          "name": key_owner_proof
                          "type": 77
                          "typeName": "T"::KeyOwnerProof
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::report_equivocation`].
                      ]
                    }
                    {
                      "name": report_equivocation_unsigned
                      "fields": [
                        {
                          "name": equivocation_proof
                          "type": 72
                          "typeName": Box<EquivocationProof<HeaderFor<T>>>
                          "docs": []
                        }
                        {
                          "name": key_owner_proof
                          "type": 77
                          "typeName": "T"::KeyOwnerProof
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::report_equivocation_unsigned`].
                      ]
                    }
                    {
                      "name": plan_config_change
                      "fields": [
                        {
                          "name": config
                          "type": 78
                          "typeName": NextConfigDescriptor
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::plan_config_change`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 72
            "type": {
              "path": [
                sp_consensus_slots
                EquivocationProof
              ]
              "params": [
                {
                  "name": Header
                  "type": 73
                }
                {
                  "name": Id
                  "type": 75
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": offender
                      "type": 75
                      "typeName": Id
                      "docs": []
                    }
                    {
                      "name": slot
                      "type": 76
                      "typeName": Slot
                      "docs": []
                    }
                    {
                      "name": first_header
                      "type": 73
                      "typeName": Header
                      "docs": []
                    }
                    {
                      "name": second_header
                      "type": 73
                      "typeName": Header
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 73
            "type": {
              "path": [
                sp_runtime
                generic
                header
                Header
              ]
              "params": [
                {
                  "name": Number
                  "type": 4
                }
                {
                  "name": Hash
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": parent_hash
                      "type": 12
                      "typeName": "Hash"::Output
                      "docs": []
                    }
                    {
                      "name": number
                      "type": 74
                      "typeName": Number
                      "docs": []
                    }
                    {
                      "name": state_root
                      "type": 12
                      "typeName": "Hash"::Output
                      "docs": []
                    }
                    {
                      "name": extrinsics_root
                      "type": 12
                      "typeName": "Hash"::Output
                      "docs": []
                    }
                    {
                      "name": digest
                      "type": 14
                      "typeName": Digest
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 74
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 4
                }
              }
              "docs": []
            }
          }
          {
            "id": 75
            "type": {
              "path": [
                sp_consensus_babe
                app
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 42
                      "typeName": "sr25519"::Public
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 76
            "type": {
              "path": [
                sp_consensus_slots
                Slot
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 77
            "type": {
              "path": [
                sp_session
                MembershipProof
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": session
                      "type": 4
                      "typeName": SessionIndex
                      "docs": []
                    }
                    {
                      "name": trie_nodes
                      "type": 69
                      "typeName": Vec<Vec<u8>>
                      "docs": []
                    }
                    {
                      "name": validator_count
                      "type": 4
                      "typeName": ValidatorCount
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 78
            "type": {
              "path": [
                sp_consensus_babe
                digests
                NextConfigDescriptor
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": V1
                      "fields": [
                        {
                          "name": c
                          "type": 79
                          "typeName": (u64, u64)
                          "docs": []
                        }
                        {
                          "name": allowed_slots
                          "type": 80
                          "typeName": AllowedSlots
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 79
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  11
                  11
                ]
              }
              "docs": []
            }
          }
          {
            "id": 80
            "type": {
              "path": [
                sp_consensus_babe
                AllowedSlots
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PrimarySlots
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": PrimaryAndSecondaryPlainSlots
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": PrimaryAndSecondaryVRFSlots
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 81
            "type": {
              "path": [
                pallet_grandpa
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": report_equivocation
                      "fields": [
                        {
                          "name": equivocation_proof
                          "type": 82
                          "typeName": Box<EquivocationProof<"T"::Hash, BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": key_owner_proof
                          "type": 77
                          "typeName": "T"::KeyOwnerProof
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::report_equivocation`].
                      ]
                    }
                    {
                      "name": report_equivocation_unsigned
                      "fields": [
                        {
                          "name": equivocation_proof
                          "type": 82
                          "typeName": Box<EquivocationProof<"T"::Hash, BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": key_owner_proof
                          "type": 77
                          "typeName": "T"::KeyOwnerProof
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::report_equivocation_unsigned`].
                      ]
                    }
                    {
                      "name": note_stalled
                      "fields": [
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": best_finalized_block_number
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::note_stalled`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 82
            "type": {
              "path": [
                sp_consensus_grandpa
                EquivocationProof
              ]
              "params": [
                {
                  "name": H
                  "type": 12
                }
                {
                  "name": N
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": set_id
                      "type": 11
                      "typeName": SetId
                      "docs": []
                    }
                    {
                      "name": equivocation
                      "type": 83
                      "typeName": Equivocation<H, N>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 83
            "type": {
              "path": [
                sp_consensus_grandpa
                Equivocation
              ]
              "params": [
                {
                  "name": H
                  "type": 12
                }
                {
                  "name": N
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Prevote
                      "fields": [
                        {
                          "name": null
                          "type": 84
                          "typeName": "grandpa"::Equivocation<AuthorityId, "grandpa"::Prevote<H, N>,nAuthoritySignature>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Precommit
                      "fields": [
                        {
                          "name": null
                          "type": 90
                          "typeName": "grandpa"::Equivocation<AuthorityId, "grandpa"::Precommit<H, N>,nAuthoritySignature>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 84
            "type": {
              "path": [
                finality_grandpa
                Equivocation
              ]
              "params": [
                {
                  "name": Id
                  "type": 33
                }
                {
                  "name": V
                  "type": 85
                }
                {
                  "name": S
                  "type": 86
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": round_number
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                    {
                      "name": identity
                      "type": 33
                      "typeName": Id
                      "docs": []
                    }
                    {
                      "name": first
                      "type": 89
                      "typeName": (V, S)
                      "docs": []
                    }
                    {
                      "name": second
                      "type": 89
                      "typeName": (V, S)
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 85
            "type": {
              "path": [
                finality_grandpa
                Prevote
              ]
              "params": [
                {
                  "name": H
                  "type": 12
                }
                {
                  "name": N
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": target_hash
                      "type": 12
                      "typeName": H
                      "docs": []
                    }
                    {
                      "name": target_number
                      "type": 4
                      "typeName": N
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 86
            "type": {
              "path": [
                sp_consensus_grandpa
                app
                Signature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 87
                      "typeName": "ed25519"::Signature
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 87
            "type": {
              "path": [
                sp_core
                ed25519
                Signature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 88
                      "typeName": [u8; 64]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 88
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 64
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 89
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  85
                  86
                ]
              }
              "docs": []
            }
          }
          {
            "id": 90
            "type": {
              "path": [
                finality_grandpa
                Equivocation
              ]
              "params": [
                {
                  "name": Id
                  "type": 33
                }
                {
                  "name": V
                  "type": 91
                }
                {
                  "name": S
                  "type": 86
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": round_number
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                    {
                      "name": identity
                      "type": 33
                      "typeName": Id
                      "docs": []
                    }
                    {
                      "name": first
                      "type": 92
                      "typeName": (V, S)
                      "docs": []
                    }
                    {
                      "name": second
                      "type": 92
                      "typeName": (V, S)
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 91
            "type": {
              "path": [
                finality_grandpa
                Precommit
              ]
              "params": [
                {
                  "name": H
                  "type": 12
                }
                {
                  "name": N
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": target_hash
                      "type": 12
                      "typeName": H
                      "docs": []
                    }
                    {
                      "name": target_number
                      "type": 4
                      "typeName": N
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 92
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  91
                  86
                ]
              }
              "docs": []
            }
          }
          {
            "id": 93
            "type": {
              "path": [
                pallet_balances
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": transfer_allow_death
                      "fields": [
                        {
                          "name": dest
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 46
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::transfer_allow_death`].
                      ]
                    }
                    {
                      "name": force_transfer
                      "fields": [
                        {
                          "name": source
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": dest
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 46
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::force_transfer`].
                      ]
                    }
                    {
                      "name": transfer_keep_alive
                      "fields": [
                        {
                          "name": dest
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 46
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::transfer_keep_alive`].
                      ]
                    }
                    {
                      "name": transfer_all
                      "fields": [
                        {
                          "name": dest
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::transfer_all`].
                      ]
                    }
                    {
                      "name": force_unreserve
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::force_unreserve`].
                      ]
                    }
                    {
                      "name": upgrade_accounts
                      "fields": [
                        {
                          "name": who
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::upgrade_accounts`].
                      ]
                    }
                    {
                      "name": force_set_balance
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": new_free
                          "type": 46
                          "typeName": "T"::Balance
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::force_set_balance`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 94
            "type": {
              "path": [
                sp_runtime
                multiaddress
                MultiAddress
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": AccountIndex
                  "type": 58
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Id
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Index
                      "fields": [
                        {
                          "name": null
                          "type": 95
                          "typeName": AccountIndex
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Raw
                      "fields": [
                        {
                          "name": null
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Address32
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": [u8; 32]
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Address20
                      "fields": [
                        {
                          "name": null
                          "type": 96
                          "typeName": [u8; 20]
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 95
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 58
                }
              }
              "docs": []
            }
          }
          {
            "id": 96
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 20
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 97
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 0
                }
              }
              "docs": []
            }
          }
          {
            "id": 98
            "type": {
              "path": [
                pallet_vesting
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": vest
                      "fields": []
                      "index": 0
                      "docs": [
                        See [`"Pallet"::vest`].
                      ]
                    }
                    {
                      "name": vest_other
                      "fields": [
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::vest_other`].
                      ]
                    }
                    {
                      "name": vested_transfer
                      "fields": [
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": schedule
                          "type": 99
                          "typeName": VestingInfo<BalanceOf<T>, BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::vested_transfer`].
                      ]
                    }
                    {
                      "name": force_vested_transfer
                      "fields": [
                        {
                          "name": source
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": schedule
                          "type": 99
                          "typeName": VestingInfo<BalanceOf<T>, BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::force_vested_transfer`].
                      ]
                    }
                    {
                      "name": merge_schedules
                      "fields": [
                        {
                          "name": schedule1_index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                        {
                          "name": schedule2_index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::merge_schedules`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 99
            "type": {
              "path": [
                pallet_vesting
                vesting_info
                VestingInfo
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": locked
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": per_block
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": starting_block
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 100
            "type": {
              "path": [
                pallet_bags_list
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": rebag
                      "fields": [
                        {
                          "name": dislocated
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::rebag`].
                      ]
                    }
                    {
                      "name": put_in_front_of
                      "fields": [
                        {
                          "name": lighter
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::put_in_front_of`].
                      ]
                    }
                    {
                      "name": put_in_front_of_other
                      "fields": [
                        {
                          "name": heavier
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": lighter
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::put_in_front_of_other`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 101
            "type": {
              "path": [
                pallet_im_online
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": heartbeat
                      "fields": [
                        {
                          "name": heartbeat
                          "type": 102
                          "typeName": Heartbeat<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": signature
                          "type": 103
                          "typeName": <"T"::AuthorityId as RuntimeAppPublic>::Signature
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::heartbeat`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 102
            "type": {
              "path": [
                pallet_im_online
                Heartbeat
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": block_number
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": session_index
                      "type": 4
                      "typeName": SessionIndex
                      "docs": []
                    }
                    {
                      "name": authority_index
                      "type": 4
                      "typeName": AuthIndex
                      "docs": []
                    }
                    {
                      "name": validators_len
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 103
            "type": {
              "path": [
                pallet_im_online
                sr25519
                app_sr25519
                Signature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 104
                      "typeName": "sr25519"::Signature
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 104
            "type": {
              "path": [
                sp_core
                sr25519
                Signature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 88
                      "typeName": [u8; 64]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 105
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": bond
                      "fields": [
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": payee
                          "type": 50
                          "typeName": RewardDestination<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::bond`].
                      ]
                    }
                    {
                      "name": bond_extra
                      "fields": [
                        {
                          "name": max_additional
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::bond_extra`].
                      ]
                    }
                    {
                      "name": unbond
                      "fields": [
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::unbond`].
                      ]
                    }
                    {
                      "name": withdraw_unbonded
                      "fields": [
                        {
                          "name": num_slashing_spans
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::withdraw_unbonded`].
                      ]
                    }
                    {
                      "name": validate
                      "fields": [
                        {
                          "name": prefs
                          "type": 52
                          "typeName": ValidatorPrefs
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::validate`].
                      ]
                    }
                    {
                      "name": nominate
                      "fields": [
                        {
                          "name": targets
                          "type": 106
                          "typeName": Vec<AccountIdLookupOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::nominate`].
                      ]
                    }
                    {
                      "name": chill
                      "fields": []
                      "index": 6
                      "docs": [
                        See [`"Pallet"::chill`].
                      ]
                    }
                    {
                      "name": set_payee
                      "fields": [
                        {
                          "name": payee
                          "type": 50
                          "typeName": RewardDestination<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::set_payee`].
                      ]
                    }
                    {
                      "name": set_controller
                      "fields": []
                      "index": 8
                      "docs": [
                        See [`"Pallet"::set_controller`].
                      ]
                    }
                    {
                      "name": set_validator_count
                      "fields": [
                        {
                          "name": new
                          "type": 74
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        See [`"Pallet"::set_validator_count`].
                      ]
                    }
                    {
                      "name": increase_validator_count
                      "fields": [
                        {
                          "name": additional
                          "type": 74
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        See [`"Pallet"::increase_validator_count`].
                      ]
                    }
                    {
                      "name": scale_validator_count
                      "fields": [
                        {
                          "name": factor
                          "type": 107
                          "typeName": Percent
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        See [`"Pallet"::scale_validator_count`].
                      ]
                    }
                    {
                      "name": force_no_eras
                      "fields": []
                      "index": 12
                      "docs": [
                        See [`"Pallet"::force_no_eras`].
                      ]
                    }
                    {
                      "name": force_new_era
                      "fields": []
                      "index": 13
                      "docs": [
                        See [`"Pallet"::force_new_era`].
                      ]
                    }
                    {
                      "name": set_invulnerables
                      "fields": [
                        {
                          "name": invulnerables
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": [
                        See [`"Pallet"::set_invulnerables`].
                      ]
                    }
                    {
                      "name": force_unstake
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": num_slashing_spans
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": [
                        See [`"Pallet"::force_unstake`].
                      ]
                    }
                    {
                      "name": force_new_era_always
                      "fields": []
                      "index": 16
                      "docs": [
                        See [`"Pallet"::force_new_era_always`].
                      ]
                    }
                    {
                      "name": cancel_deferred_slash
                      "fields": [
                        {
                          "name": era
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                        {
                          "name": slash_indices
                          "type": 108
                          "typeName": Vec<u32>
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": [
                        See [`"Pallet"::cancel_deferred_slash`].
                      ]
                    }
                    {
                      "name": payout_stakers
                      "fields": [
                        {
                          "name": validator_stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": era
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": [
                        See [`"Pallet"::payout_stakers`].
                      ]
                    }
                    {
                      "name": rebond
                      "fields": [
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": [
                        See [`"Pallet"::rebond`].
                      ]
                    }
                    {
                      "name": reap_stash
                      "fields": [
                        {
                          "name": stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": num_slashing_spans
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": [
                        See [`"Pallet"::reap_stash`].
                      ]
                    }
                    {
                      "name": kick
                      "fields": [
                        {
                          "name": who
                          "type": 106
                          "typeName": Vec<AccountIdLookupOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": [
                        See [`"Pallet"::kick`].
                      ]
                    }
                    {
                      "name": set_staking_configs
                      "fields": [
                        {
                          "name": min_nominator_bond
                          "type": 109
                          "typeName": ConfigOp<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": min_validator_bond
                          "type": 109
                          "typeName": ConfigOp<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": max_nominator_count
                          "type": 110
                          "typeName": ConfigOp<u32>
                          "docs": []
                        }
                        {
                          "name": max_validator_count
                          "type": 110
                          "typeName": ConfigOp<u32>
                          "docs": []
                        }
                        {
                          "name": chill_threshold
                          "type": 111
                          "typeName": ConfigOp<Percent>
                          "docs": []
                        }
                        {
                          "name": min_commission
                          "type": 112
                          "typeName": ConfigOp<Perbill>
                          "docs": []
                        }
                      ]
                      "index": 22
                      "docs": [
                        See [`"Pallet"::set_staking_configs`].
                      ]
                    }
                    {
                      "name": chill_other
                      "fields": [
                        {
                          "name": controller
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": [
                        See [`"Pallet"::chill_other`].
                      ]
                    }
                    {
                      "name": force_apply_min_commission
                      "fields": [
                        {
                          "name": validator_stash
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 24
                      "docs": [
                        See [`"Pallet"::force_apply_min_commission`].
                      ]
                    }
                    {
                      "name": set_min_commission
                      "fields": [
                        {
                          "name": new
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                      ]
                      "index": 25
                      "docs": [
                        See [`"Pallet"::set_min_commission`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 106
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 94
                }
              }
              "docs": []
            }
          }
          {
            "id": 107
            "type": {
              "path": [
                sp_arithmetic
                per_things
                Percent
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 2
                      "typeName": u8
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 108
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 4
                }
              }
              "docs": []
            }
          }
          {
            "id": 109
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 110
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 111
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 107
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 107
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 112
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 51
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 51
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 113
            "type": {
              "path": [
                pallet_session
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": set_keys
                      "fields": [
                        {
                          "name": keys
                          "type": 114
                          "typeName": "T"::Keys
                          "docs": []
                        }
                        {
                          "name": proof
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::set_keys`].
                      ]
                    }
                    {
                      "name": purge_keys
                      "fields": []
                      "index": 1
                      "docs": [
                        See [`"Pallet"::purge_keys`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 114
            "type": {
              "path": [
                vara_runtime
                SessionKeys
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": babe
                      "type": 75
                      "typeName": <Babe as $"crate"::BoundToRuntimeAppPublic>::Public
                      "docs": []
                    }
                    {
                      "name": grandpa
                      "type": 33
                      "typeName": <Grandpa as $"crate"::BoundToRuntimeAppPublic>::Public
                      "docs": []
                    }
                    {
                      "name": im_online
                      "type": 41
                      "typeName": <ImOnline as $"crate"::BoundToRuntimeAppPublic>::Public
                      "docs": []
                    }
                    {
                      "name": authority_discovery
                      "type": 115
                      "typeName": <AuthorityDiscovery as $"crate"::BoundToRuntimeAppPublic>::Public
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 115
            "type": {
              "path": [
                sp_authority_discovery
                app
                Public
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 42
                      "typeName": "sr25519"::Public
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 116
            "type": {
              "path": [
                pallet_treasury
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": propose_spend
                      "fields": [
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::propose_spend`].
                      ]
                    }
                    {
                      "name": reject_proposal
                      "fields": [
                        {
                          "name": proposal_id
                          "type": 74
                          "typeName": ProposalIndex
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::reject_proposal`].
                      ]
                    }
                    {
                      "name": approve_proposal
                      "fields": [
                        {
                          "name": proposal_id
                          "type": 74
                          "typeName": ProposalIndex
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::approve_proposal`].
                      ]
                    }
                    {
                      "name": spend_local
                      "fields": [
                        {
                          "name": amount
                          "type": 46
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::spend_local`].
                      ]
                    }
                    {
                      "name": remove_approval
                      "fields": [
                        {
                          "name": proposal_id
                          "type": 74
                          "typeName": ProposalIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::remove_approval`].
                      ]
                    }
                    {
                      "name": spend
                      "fields": [
                        {
                          "name": asset_kind
                          "type": 58
                          "typeName": Box<"T"::AssetKind>
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 46
                          "typeName": AssetBalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": Box<BeneficiaryLookupOf<T, I>>
                          "docs": []
                        }
                        {
                          "name": valid_from
                          "type": 117
                          "typeName": Option<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::spend`].
                      ]
                    }
                    {
                      "name": payout
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::payout`].
                      ]
                    }
                    {
                      "name": check_status
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::check_status`].
                      ]
                    }
                    {
                      "name": void_spend
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": SpendIndex
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::void_spend`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 117
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 118
            "type": {
              "path": [
                pallet_utility
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": batch
                      "fields": [
                        {
                          "name": calls
                          "type": 119
                          "typeName": Vec<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::batch`].
                      ]
                    }
                    {
                      "name": as_derivative
                      "fields": [
                        {
                          "name": index
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::as_derivative`].
                      ]
                    }
                    {
                      "name": batch_all
                      "fields": [
                        {
                          "name": calls
                          "type": 119
                          "typeName": Vec<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::batch_all`].
                      ]
                    }
                    {
                      "name": dispatch_as
                      "fields": [
                        {
                          "name": as_origin
                          "type": 120
                          "typeName": Box<"T"::PalletsOrigin>
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::dispatch_as`].
                      ]
                    }
                    {
                      "name": force_batch
                      "fields": [
                        {
                          "name": calls
                          "type": 119
                          "typeName": Vec<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::force_batch`].
                      ]
                    }
                    {
                      "name": with_weight
                      "fields": [
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                        {
                          "name": weight
                          "type": 9
                          "typeName": Weight
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::with_weight`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 119
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 65
                }
              }
              "docs": []
            }
          }
          {
            "id": 120
            "type": {
              "path": [
                vara_runtime
                OriginCaller
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": system
                      "fields": [
                        {
                          "name": null
                          "type": 121
                          "typeName": "frame_system"::Origin<Runtime>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Origins
                      "fields": [
                        {
                          "name": null
                          "type": 122
                          "typeName": "pallet_custom_origins"::Origin
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": []
                    }
                    {
                      "name": Void
                      "fields": [
                        {
                          "name": null
                          "type": 123
                          "typeName": "self"::"sp_api_hidden_includes_construct_runtime"::"hidden_include"::"n__private"::Void
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 121
            "type": {
              "path": [
                frame_support
                dispatch
                RawOrigin
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Root
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Signed
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": None
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 122
            "type": {
              "path": [
                vara_runtime
                governance
                origins
                pallet_custom_origins
                Origin
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": StakingAdmin
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Treasurer
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": FellowshipAdmin
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": GeneralAdmin
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": ReferendumCanceller
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": ReferendumKiller
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": SmallTipper
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": BigTipper
                      "fields": []
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": SmallSpender
                      "fields": []
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": MediumSpender
                      "fields": []
                      "index": 9
                      "docs": []
                    }
                    {
                      "name": BigSpender
                      "fields": []
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": WhitelistedCaller
                      "fields": []
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": FellowshipInitiates
                      "fields": []
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": Fellows
                      "fields": []
                      "index": 13
                      "docs": []
                    }
                    {
                      "name": FellowshipExperts
                      "fields": []
                      "index": 14
                      "docs": []
                    }
                    {
                      "name": FellowshipMasters
                      "fields": []
                      "index": 15
                      "docs": []
                    }
                    {
                      "name": Fellowship1Dan
                      "fields": []
                      "index": 16
                      "docs": []
                    }
                    {
                      "name": Fellowship2Dan
                      "fields": []
                      "index": 17
                      "docs": []
                    }
                    {
                      "name": Fellowship3Dan
                      "fields": []
                      "index": 18
                      "docs": []
                    }
                    {
                      "name": Fellowship4Dan
                      "fields": []
                      "index": 19
                      "docs": []
                    }
                    {
                      "name": Fellowship5Dan
                      "fields": []
                      "index": 20
                      "docs": []
                    }
                    {
                      "name": Fellowship6Dan
                      "fields": []
                      "index": 21
                      "docs": []
                    }
                    {
                      "name": Fellowship7Dan
                      "fields": []
                      "index": 22
                      "docs": []
                    }
                    {
                      "name": Fellowship8Dan
                      "fields": []
                      "index": 23
                      "docs": []
                    }
                    {
                      "name": Fellowship9Dan
                      "fields": []
                      "index": 24
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 123
            "type": {
              "path": [
                sp_core
                Void
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 124
            "type": {
              "path": [
                pallet_conviction_voting
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": vote
                      "fields": [
                        {
                          "name": poll_index
                          "type": 74
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                        {
                          "name": vote
                          "type": 125
                          "typeName": AccountVote<BalanceOf<T, I>>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::vote`].
                      ]
                    }
                    {
                      "name": delegate
                      "fields": [
                        {
                          "name": class
                          "type": 63
                          "typeName": ClassOf<T, I>
                          "docs": []
                        }
                        {
                          "name": to
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": conviction
                          "type": 127
                          "typeName": Conviction
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::delegate`].
                      ]
                    }
                    {
                      "name": undelegate
                      "fields": [
                        {
                          "name": class
                          "type": 63
                          "typeName": ClassOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::undelegate`].
                      ]
                    }
                    {
                      "name": unlock
                      "fields": [
                        {
                          "name": class
                          "type": 63
                          "typeName": ClassOf<T, I>
                          "docs": []
                        }
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::unlock`].
                      ]
                    }
                    {
                      "name": remove_vote
                      "fields": [
                        {
                          "name": class
                          "type": 128
                          "typeName": Option<ClassOf<T, I>>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 4
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::remove_vote`].
                      ]
                    }
                    {
                      "name": remove_other_vote
                      "fields": [
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": class
                          "type": 63
                          "typeName": ClassOf<T, I>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 4
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::remove_other_vote`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 125
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                AccountVote
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Standard
                      "fields": [
                        {
                          "name": vote
                          "type": 126
                          "typeName": Vote
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Split
                      "fields": [
                        {
                          "name": aye
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": nay
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": SplitAbstain
                      "fields": [
                        {
                          "name": aye
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": nay
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": abstain
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 126
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                Vote
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 2
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 127
            "type": {
              "path": [
                pallet_conviction_voting
                conviction
                Conviction
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Locked1x
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Locked2x
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Locked3x
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Locked4x
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Locked5x
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Locked6x
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 128
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 63
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 63
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 129
            "type": {
              "path": [
                pallet_referenda
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": submit
                      "fields": [
                        {
                          "name": proposal_origin
                          "type": 120
                          "typeName": Box<PalletsOriginOf<T>>
                          "docs": []
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": []
                        }
                        {
                          "name": enactment_moment
                          "type": 130
                          "typeName": DispatchTime<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::submit`].
                      ]
                    }
                    {
                      "name": place_decision_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::place_decision_deposit`].
                      ]
                    }
                    {
                      "name": refund_decision_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::refund_decision_deposit`].
                      ]
                    }
                    {
                      "name": cancel
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::cancel`].
                      ]
                    }
                    {
                      "name": kill
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::kill`].
                      ]
                    }
                    {
                      "name": nudge_referendum
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::nudge_referendum`].
                      ]
                    }
                    {
                      "name": one_fewer_deciding
                      "fields": [
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::one_fewer_deciding`].
                      ]
                    }
                    {
                      "name": refund_submission_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::refund_submission_deposit`].
                      ]
                    }
                    {
                      "name": set_metadata
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                        {
                          "name": maybe_hash
                          "type": 131
                          "typeName": Option<"T"::Hash>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::set_metadata`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 130
            "type": {
              "path": [
                frame_support
                traits
                schedule
                DispatchTime
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": At
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": After
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 131
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 12
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 12
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 132
            "type": {
              "path": [
                pallet_ranked_collective
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": add_member
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::add_member`].
                      ]
                    }
                    {
                      "name": promote_member
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::promote_member`].
                      ]
                    }
                    {
                      "name": demote_member
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::demote_member`].
                      ]
                    }
                    {
                      "name": remove_member
                      "fields": [
                        {
                          "name": who
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": min_rank
                          "type": 63
                          "typeName": Rank
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::remove_member`].
                      ]
                    }
                    {
                      "name": vote
                      "fields": [
                        {
                          "name": poll
                          "type": 4
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                        {
                          "name": aye
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::vote`].
                      ]
                    }
                    {
                      "name": cleanup_poll
                      "fields": [
                        {
                          "name": poll_index
                          "type": 4
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                        {
                          "name": max
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::cleanup_poll`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 133
            "type": {
              "path": [
                pallet_referenda
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": submit
                      "fields": [
                        {
                          "name": proposal_origin
                          "type": 120
                          "typeName": Box<PalletsOriginOf<T>>
                          "docs": []
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": []
                        }
                        {
                          "name": enactment_moment
                          "type": 130
                          "typeName": DispatchTime<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::submit`].
                      ]
                    }
                    {
                      "name": place_decision_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::place_decision_deposit`].
                      ]
                    }
                    {
                      "name": refund_decision_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::refund_decision_deposit`].
                      ]
                    }
                    {
                      "name": cancel
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::cancel`].
                      ]
                    }
                    {
                      "name": kill
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::kill`].
                      ]
                    }
                    {
                      "name": nudge_referendum
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::nudge_referendum`].
                      ]
                    }
                    {
                      "name": one_fewer_deciding
                      "fields": [
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::one_fewer_deciding`].
                      ]
                    }
                    {
                      "name": refund_submission_deposit
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::refund_submission_deposit`].
                      ]
                    }
                    {
                      "name": set_metadata
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": []
                        }
                        {
                          "name": maybe_hash
                          "type": 131
                          "typeName": Option<"T"::Hash>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::set_metadata`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 134
            "type": {
              "path": [
                pallet_whitelist
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": whitelist_call
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::whitelist_call`].
                      ]
                    }
                    {
                      "name": remove_whitelisted_call
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::remove_whitelisted_call`].
                      ]
                    }
                    {
                      "name": dispatch_whitelisted_call
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                        {
                          "name": call_encoded_len
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                        {
                          "name": call_weight_witness
                          "type": 9
                          "typeName": Weight
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::dispatch_whitelisted_call`].
                      ]
                    }
                    {
                      "name": dispatch_whitelisted_call_with_preimage
                      "fields": [
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::dispatch_whitelisted_call_with_preimage`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 135
            "type": {
              "path": [
                pallet_scheduler
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": schedule
                      "fields": [
                        {
                          "name": when
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": maybe_periodic
                          "type": 136
                          "typeName": Option<"schedule"::Period<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": priority
                          "type": 2
                          "typeName": "schedule"::Priority
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::schedule`].
                      ]
                    }
                    {
                      "name": cancel
                      "fields": [
                        {
                          "name": when
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::cancel`].
                      ]
                    }
                    {
                      "name": schedule_named
                      "fields": [
                        {
                          "name": id
                          "type": 1
                          "typeName": TaskName
                          "docs": []
                        }
                        {
                          "name": when
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": maybe_periodic
                          "type": 136
                          "typeName": Option<"schedule"::Period<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": priority
                          "type": 2
                          "typeName": "schedule"::Priority
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::schedule_named`].
                      ]
                    }
                    {
                      "name": cancel_named
                      "fields": [
                        {
                          "name": id
                          "type": 1
                          "typeName": TaskName
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::cancel_named`].
                      ]
                    }
                    {
                      "name": schedule_after
                      "fields": [
                        {
                          "name": after
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": maybe_periodic
                          "type": 136
                          "typeName": Option<"schedule"::Period<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": priority
                          "type": 2
                          "typeName": "schedule"::Priority
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::schedule_after`].
                      ]
                    }
                    {
                      "name": schedule_named_after
                      "fields": [
                        {
                          "name": id
                          "type": 1
                          "typeName": TaskName
                          "docs": []
                        }
                        {
                          "name": after
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": maybe_periodic
                          "type": 136
                          "typeName": Option<"schedule"::Period<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": priority
                          "type": 2
                          "typeName": "schedule"::Priority
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::schedule_named_after`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 136
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 137
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 137
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 137
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 138
            "type": {
              "path": [
                pallet_preimage
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": note_preimage
                      "fields": [
                        {
                          "name": bytes
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::note_preimage`].
                      ]
                    }
                    {
                      "name": unnote_preimage
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::unnote_preimage`].
                      ]
                    }
                    {
                      "name": request_preimage
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::request_preimage`].
                      ]
                    }
                    {
                      "name": unrequest_preimage
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::unrequest_preimage`].
                      ]
                    }
                    {
                      "name": ensure_updated
                      "fields": [
                        {
                          "name": hashes
                          "type": 139
                          "typeName": Vec<"T"::Hash>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::ensure_updated`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 139
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 12
                }
              }
              "docs": []
            }
          }
          {
            "id": 140
            "type": {
              "path": [
                pallet_identity
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": add_registrar
                      "fields": [
                        {
                          "name": account
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::add_registrar`].
                      ]
                    }
                    {
                      "name": set_identity
                      "fields": [
                        {
                          "name": info
                          "type": 141
                          "typeName": Box<"T"::IdentityInformation>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::set_identity`].
                      ]
                    }
                    {
                      "name": set_subs
                      "fields": [
                        {
                          "name": subs
                          "type": 177
                          "typeName": Vec<("T"::AccountId, Data)>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::set_subs`].
                      ]
                    }
                    {
                      "name": clear_identity
                      "fields": []
                      "index": 3
                      "docs": [
                        See [`"Pallet"::clear_identity`].
                      ]
                    }
                    {
                      "name": request_judgement
                      "fields": [
                        {
                          "name": reg_index
                          "type": 74
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                        {
                          "name": max_fee
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::request_judgement`].
                      ]
                    }
                    {
                      "name": cancel_request
                      "fields": [
                        {
                          "name": reg_index
                          "type": 4
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::cancel_request`].
                      ]
                    }
                    {
                      "name": set_fee
                      "fields": [
                        {
                          "name": index
                          "type": 74
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                        {
                          "name": fee
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::set_fee`].
                      ]
                    }
                    {
                      "name": set_account_id
                      "fields": [
                        {
                          "name": index
                          "type": 74
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                        {
                          "name": new
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::set_account_id`].
                      ]
                    }
                    {
                      "name": set_fields
                      "fields": [
                        {
                          "name": index
                          "type": 74
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                        {
                          "name": fields
                          "type": 179
                          "typeName": IdentityFields<<"T"::IdentityInformation as IdentityInformationProvider>"n"::IdentityField,>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::set_fields`].
                      ]
                    }
                    {
                      "name": provide_judgement
                      "fields": [
                        {
                          "name": reg_index
                          "type": 74
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": judgement
                          "type": 181
                          "typeName": Judgement<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": identity
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        See [`"Pallet"::provide_judgement`].
                      ]
                    }
                    {
                      "name": kill_identity
                      "fields": [
                        {
                          "name": target
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        See [`"Pallet"::kill_identity`].
                      ]
                    }
                    {
                      "name": add_sub
                      "fields": [
                        {
                          "name": sub
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": data
                          "type": 144
                          "typeName": Data
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        See [`"Pallet"::add_sub`].
                      ]
                    }
                    {
                      "name": rename_sub
                      "fields": [
                        {
                          "name": sub
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": data
                          "type": 144
                          "typeName": Data
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        See [`"Pallet"::rename_sub`].
                      ]
                    }
                    {
                      "name": remove_sub
                      "fields": [
                        {
                          "name": sub
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        See [`"Pallet"::remove_sub`].
                      ]
                    }
                    {
                      "name": quit_sub
                      "fields": []
                      "index": 14
                      "docs": [
                        See [`"Pallet"::quit_sub`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Identity pallet declaration.
              ]
            }
          }
          {
            "id": 141
            "type": {
              "path": [
                pallet_identity
                simple
                IdentityInfo
              ]
              "params": [
                {
                  "name": FieldLimit
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": additional
                      "type": 142
                      "typeName": BoundedVec<(Data, Data), FieldLimit>
                      "docs": []
                    }
                    {
                      "name": display
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": legal
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": web
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": riot
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": email
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": pgp_fingerprint
                      "type": 176
                      "typeName": Option<[u8; 20]>
                      "docs": []
                    }
                    {
                      "name": image
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                    {
                      "name": twitter
                      "type": 144
                      "typeName": Data
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 142
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 143
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 175
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 143
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  144
                  144
                ]
              }
              "docs": []
            }
          }
          {
            "id": 144
            "type": {
              "path": [
                pallet_identity
                types
                Data
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Raw0
                      "fields": [
                        {
                          "name": null
                          "type": 145
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Raw1
                      "fields": [
                        {
                          "name": null
                          "type": 146
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Raw2
                      "fields": [
                        {
                          "name": null
                          "type": 147
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Raw3
                      "fields": [
                        {
                          "name": null
                          "type": 148
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Raw4
                      "fields": [
                        {
                          "name": null
                          "type": 17
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Raw5
                      "fields": [
                        {
                          "name": null
                          "type": 149
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Raw6
                      "fields": [
                        {
                          "name": null
                          "type": 150
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": Raw7
                      "fields": [
                        {
                          "name": null
                          "type": 151
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": Raw8
                      "fields": [
                        {
                          "name": null
                          "type": 152
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": []
                    }
                    {
                      "name": Raw9
                      "fields": [
                        {
                          "name": null
                          "type": 153
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": Raw10
                      "fields": [
                        {
                          "name": null
                          "type": 154
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": Raw11
                      "fields": [
                        {
                          "name": null
                          "type": 155
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": Raw12
                      "fields": [
                        {
                          "name": null
                          "type": 156
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": []
                    }
                    {
                      "name": Raw13
                      "fields": [
                        {
                          "name": null
                          "type": 157
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": []
                    }
                    {
                      "name": Raw14
                      "fields": [
                        {
                          "name": null
                          "type": 158
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": []
                    }
                    {
                      "name": Raw15
                      "fields": [
                        {
                          "name": null
                          "type": 159
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": []
                    }
                    {
                      "name": Raw16
                      "fields": [
                        {
                          "name": null
                          "type": 160
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": []
                    }
                    {
                      "name": Raw17
                      "fields": [
                        {
                          "name": null
                          "type": 161
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": []
                    }
                    {
                      "name": Raw18
                      "fields": [
                        {
                          "name": null
                          "type": 162
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": []
                    }
                    {
                      "name": Raw19
                      "fields": [
                        {
                          "name": null
                          "type": 163
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": []
                    }
                    {
                      "name": Raw20
                      "fields": [
                        {
                          "name": null
                          "type": 96
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": []
                    }
                    {
                      "name": Raw21
                      "fields": [
                        {
                          "name": null
                          "type": 164
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 22
                      "docs": []
                    }
                    {
                      "name": Raw22
                      "fields": [
                        {
                          "name": null
                          "type": 165
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": []
                    }
                    {
                      "name": Raw23
                      "fields": [
                        {
                          "name": null
                          "type": 166
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 24
                      "docs": []
                    }
                    {
                      "name": Raw24
                      "fields": [
                        {
                          "name": null
                          "type": 167
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 25
                      "docs": []
                    }
                    {
                      "name": Raw25
                      "fields": [
                        {
                          "name": null
                          "type": 168
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 26
                      "docs": []
                    }
                    {
                      "name": Raw26
                      "fields": [
                        {
                          "name": null
                          "type": 169
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 27
                      "docs": []
                    }
                    {
                      "name": Raw27
                      "fields": [
                        {
                          "name": null
                          "type": 170
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 28
                      "docs": []
                    }
                    {
                      "name": Raw28
                      "fields": [
                        {
                          "name": null
                          "type": 171
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 29
                      "docs": []
                    }
                    {
                      "name": Raw29
                      "fields": [
                        {
                          "name": null
                          "type": 172
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 30
                      "docs": []
                    }
                    {
                      "name": Raw30
                      "fields": [
                        {
                          "name": null
                          "type": 173
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 31
                      "docs": []
                    }
                    {
                      "name": Raw31
                      "fields": [
                        {
                          "name": null
                          "type": 174
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 32
                      "docs": []
                    }
                    {
                      "name": Raw32
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 33
                      "docs": []
                    }
                    {
                      "name": BlakeTwo256
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 34
                      "docs": []
                    }
                    {
                      "name": Sha256
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 35
                      "docs": []
                    }
                    {
                      "name": Keccak256
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 36
                      "docs": []
                    }
                    {
                      "name": ShaThree256
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 37
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 145
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 0
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 146
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 1
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 147
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 2
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 148
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 3
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 149
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 5
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 150
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 6
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 151
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 7
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 152
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 8
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 153
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 9
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 154
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 10
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 155
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 11
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 156
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 12
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 157
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 13
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 158
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 14
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 159
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 15
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 160
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 16
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 161
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 17
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 162
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 18
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 163
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 19
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 164
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 21
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 165
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 22
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 166
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 23
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 167
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 24
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 168
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 25
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 169
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 26
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 170
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 27
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 171
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 28
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 172
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 29
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 173
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 30
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 174
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 31
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 175
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 143
                }
              }
              "docs": []
            }
          }
          {
            "id": 176
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 96
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 96
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 177
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 178
                }
              }
              "docs": []
            }
          }
          {
            "id": 178
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  144
                ]
              }
              "docs": []
            }
          }
          {
            "id": 179
            "type": {
              "path": [
                pallet_identity
                types
                BitFlags
              ]
              "params": [
                {
                  "name": T
                  "type": 180
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 11
                      "typeName": IdentityField
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 180
            "type": {
              "path": [
                pallet_identity
                simple
                IdentityField
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Display
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Legal
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Web
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Riot
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Email
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": PgpFingerprint
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Image
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Twitter
                      "fields": []
                      "index": 7
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 181
            "type": {
              "path": [
                pallet_identity
                types
                Judgement
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Unknown
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": FeePaid
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reasonable
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": KnownGood
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": OutOfDate
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": LowQuality
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Erroneous
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 182
            "type": {
              "path": [
                pallet_proxy
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": proxy
                      "fields": [
                        {
                          "name": real
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": force_proxy_type
                          "type": 183
                          "typeName": Option<"T"::ProxyType>
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::proxy`].
                      ]
                    }
                    {
                      "name": add_proxy
                      "fields": [
                        {
                          "name": delegate
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::add_proxy`].
                      ]
                    }
                    {
                      "name": remove_proxy
                      "fields": [
                        {
                          "name": delegate
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::remove_proxy`].
                      ]
                    }
                    {
                      "name": remove_proxies
                      "fields": []
                      "index": 3
                      "docs": [
                        See [`"Pallet"::remove_proxies`].
                      ]
                    }
                    {
                      "name": create_pure
                      "fields": [
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::create_pure`].
                      ]
                    }
                    {
                      "name": kill_pure
                      "fields": [
                        {
                          "name": spawner
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                        {
                          "name": height
                          "type": 74
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": ext_index
                          "type": 74
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::kill_pure`].
                      ]
                    }
                    {
                      "name": announce
                      "fields": [
                        {
                          "name": real
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": CallHashOf<T>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::announce`].
                      ]
                    }
                    {
                      "name": remove_announcement
                      "fields": [
                        {
                          "name": real
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": CallHashOf<T>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::remove_announcement`].
                      ]
                    }
                    {
                      "name": reject_announcement
                      "fields": [
                        {
                          "name": delegate
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": CallHashOf<T>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::reject_announcement`].
                      ]
                    }
                    {
                      "name": proxy_announced
                      "fields": [
                        {
                          "name": delegate
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": real
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": force_proxy_type
                          "type": 183
                          "typeName": Option<"T"::ProxyType>
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        See [`"Pallet"::proxy_announced`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 183
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 184
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 184
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 184
            "type": {
              "path": [
                vara_runtime
                ProxyType
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Any
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": NonTransfer
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Governance
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Staking
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": IdentityJudgement
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": CancelProxy
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 185
            "type": {
              "path": [
                pallet_multisig
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": as_multi_threshold_1
                      "fields": [
                        {
                          "name": other_signatories
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::as_multi_threshold_1`].
                      ]
                    }
                    {
                      "name": as_multi
                      "fields": [
                        {
                          "name": threshold
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                        {
                          "name": other_signatories
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": maybe_timepoint
                          "type": 186
                          "typeName": Option<Timepoint<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 65
                          "typeName": Box<<T as Config>::RuntimeCall>
                          "docs": []
                        }
                        {
                          "name": max_weight
                          "type": 9
                          "typeName": Weight
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::as_multi`].
                      ]
                    }
                    {
                      "name": approve_as_multi
                      "fields": [
                        {
                          "name": threshold
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                        {
                          "name": other_signatories
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": maybe_timepoint
                          "type": 186
                          "typeName": Option<Timepoint<BlockNumberFor<T>>>
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": [u8; 32]
                          "docs": []
                        }
                        {
                          "name": max_weight
                          "type": 9
                          "typeName": Weight
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::approve_as_multi`].
                      ]
                    }
                    {
                      "name": cancel_as_multi
                      "fields": [
                        {
                          "name": threshold
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                        {
                          "name": other_signatories
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": timepoint
                          "type": 187
                          "typeName": Timepoint<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": [u8; 32]
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::cancel_as_multi`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 186
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 187
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 187
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 187
            "type": {
              "path": [
                pallet_multisig
                Timepoint
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": height
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": index
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 188
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": submit_unsigned
                      "fields": [
                        {
                          "name": raw_solution
                          "type": 189
                          "typeName": Box<RawSolution<SolutionOf<"T"::MinerConfig>>>
                          "docs": []
                        }
                        {
                          "name": witness
                          "type": 242
                          "typeName": SolutionOrSnapshotSize
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::submit_unsigned`].
                      ]
                    }
                    {
                      "name": set_minimum_untrusted_score
                      "fields": [
                        {
                          "name": maybe_next_score
                          "type": 243
                          "typeName": Option<ElectionScore>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::set_minimum_untrusted_score`].
                      ]
                    }
                    {
                      "name": set_emergency_election_result
                      "fields": [
                        {
                          "name": supports
                          "type": 244
                          "typeName": Supports<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::set_emergency_election_result`].
                      ]
                    }
                    {
                      "name": submit
                      "fields": [
                        {
                          "name": raw_solution
                          "type": 189
                          "typeName": Box<RawSolution<SolutionOf<"T"::MinerConfig>>>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::submit`].
                      ]
                    }
                    {
                      "name": governance_fallback
                      "fields": [
                        {
                          "name": maybe_max_voters
                          "type": 117
                          "typeName": Option<u32>
                          "docs": []
                        }
                        {
                          "name": maybe_max_targets
                          "type": 117
                          "typeName": Option<u32>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::governance_fallback`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 189
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                RawSolution
              ]
              "params": [
                {
                  "name": S
                  "type": 190
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": solution
                      "type": 190
                      "typeName": S
                      "docs": []
                    }
                    {
                      "name": score
                      "type": 241
                      "typeName": ElectionScore
                      "docs": []
                    }
                    {
                      "name": round
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 190
            "type": {
              "path": [
                vara_runtime
                NposSolution16
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": votes1
                      "type": 191
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes2
                      "type": 194
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes3
                      "type": 199
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes4
                      "type": 202
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes5
                      "type": 205
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes6
                      "type": 208
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes7
                      "type": 211
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes8
                      "type": 214
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes9
                      "type": 217
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes10
                      "type": 220
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes11
                      "type": 223
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes12
                      "type": 226
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes13
                      "type": 229
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes14
                      "type": 232
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes15
                      "type": 235
                      "typeName": null
                      "docs": []
                    }
                    {
                      "name": votes16
                      "type": 238
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 191
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 192
                }
              }
              "docs": []
            }
          }
          {
            "id": 192
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 193
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 63
                }
              }
              "docs": []
            }
          }
          {
            "id": 194
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 195
                }
              }
              "docs": []
            }
          }
          {
            "id": 195
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  196
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 196
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  193
                  197
                ]
              }
              "docs": []
            }
          }
          {
            "id": 197
            "type": {
              "path": []
              "params": []
              "def": {
                "Compact": {
                  "type": 198
                }
              }
              "docs": []
            }
          }
          {
            "id": 198
            "type": {
              "path": [
                sp_arithmetic
                per_things
                PerU16
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 63
                      "typeName": u16
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 199
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 200
                }
              }
              "docs": []
            }
          }
          {
            "id": 200
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  201
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 201
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 2
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 202
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 203
                }
              }
              "docs": []
            }
          }
          {
            "id": 203
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  204
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 204
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 3
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 205
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 206
                }
              }
              "docs": []
            }
          }
          {
            "id": 206
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  207
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 207
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 4
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 208
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 209
                }
              }
              "docs": []
            }
          }
          {
            "id": 209
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  210
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 210
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 5
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 211
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 212
                }
              }
              "docs": []
            }
          }
          {
            "id": 212
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  213
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 213
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 6
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 214
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 215
                }
              }
              "docs": []
            }
          }
          {
            "id": 215
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  216
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 216
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 7
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 217
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 218
                }
              }
              "docs": []
            }
          }
          {
            "id": 218
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  219
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 219
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 8
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 220
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 221
                }
              }
              "docs": []
            }
          }
          {
            "id": 221
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  222
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 222
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 9
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 223
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 224
                }
              }
              "docs": []
            }
          }
          {
            "id": 224
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  225
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 225
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 10
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 226
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 227
                }
              }
              "docs": []
            }
          }
          {
            "id": 227
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  228
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 228
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 11
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 229
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 230
                }
              }
              "docs": []
            }
          }
          {
            "id": 230
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  231
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 231
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 12
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 232
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 233
                }
              }
              "docs": []
            }
          }
          {
            "id": 233
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  234
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 234
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 13
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 235
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 236
                }
              }
              "docs": []
            }
          }
          {
            "id": 236
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  237
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 237
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 14
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 238
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 239
                }
              }
              "docs": []
            }
          }
          {
            "id": 239
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  74
                  240
                  193
                ]
              }
              "docs": []
            }
          }
          {
            "id": 240
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 15
                  "type": 196
                }
              }
              "docs": []
            }
          }
          {
            "id": 241
            "type": {
              "path": [
                sp_npos_elections
                ElectionScore
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": minimal_stake
                      "type": 6
                      "typeName": ExtendedBalance
                      "docs": []
                    }
                    {
                      "name": sum_stake
                      "type": 6
                      "typeName": ExtendedBalance
                      "docs": []
                    }
                    {
                      "name": sum_stake_squared
                      "type": 6
                      "typeName": ExtendedBalance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 242
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                SolutionOrSnapshotSize
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": voters
                      "type": 74
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": targets
                      "type": 74
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 243
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 241
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 241
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 244
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 245
                }
              }
              "docs": []
            }
          }
          {
            "id": 245
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  246
                ]
              }
              "docs": []
            }
          }
          {
            "id": 246
            "type": {
              "path": [
                sp_npos_elections
                Support
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": total
                      "type": 6
                      "typeName": ExtendedBalance
                      "docs": []
                    }
                    {
                      "name": voters
                      "type": 247
                      "typeName": Vec<(AccountId, ExtendedBalance)>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 247
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 248
                }
              }
              "docs": []
            }
          }
          {
            "id": 248
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 249
            "type": {
              "path": [
                pallet_bounties
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": propose_bounty
                      "fields": [
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": description
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::propose_bounty`].
                      ]
                    }
                    {
                      "name": approve_bounty
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::approve_bounty`].
                      ]
                    }
                    {
                      "name": propose_curator
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": curator
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": fee
                          "type": 46
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::propose_curator`].
                      ]
                    }
                    {
                      "name": unassign_curator
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::unassign_curator`].
                      ]
                    }
                    {
                      "name": accept_curator
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::accept_curator`].
                      ]
                    }
                    {
                      "name": award_bounty
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::award_bounty`].
                      ]
                    }
                    {
                      "name": claim_bounty
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::claim_bounty`].
                      ]
                    }
                    {
                      "name": close_bounty
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::close_bounty`].
                      ]
                    }
                    {
                      "name": extend_bounty_expiry
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": remark
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::extend_bounty_expiry`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 250
            "type": {
              "path": [
                pallet_child_bounties
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": add_child_bounty
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": description
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::add_child_bounty`].
                      ]
                    }
                    {
                      "name": propose_curator
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": curator
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": fee
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::propose_curator`].
                      ]
                    }
                    {
                      "name": accept_curator
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::accept_curator`].
                      ]
                    }
                    {
                      "name": unassign_curator
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::unassign_curator`].
                      ]
                    }
                    {
                      "name": award_child_bounty
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::award_child_bounty`].
                      ]
                    }
                    {
                      "name": claim_child_bounty
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::claim_child_bounty`].
                      ]
                    }
                    {
                      "name": close_child_bounty
                      "fields": [
                        {
                          "name": parent_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_bounty_id
                          "type": 74
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::close_child_bounty`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 251
            "type": {
              "path": [
                pallet_nomination_pools
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": join
                      "fields": [
                        {
                          "name": amount
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::join`].
                      ]
                    }
                    {
                      "name": bond_extra
                      "fields": [
                        {
                          "name": extra
                          "type": 252
                          "typeName": BondExtra<BalanceOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::bond_extra`].
                      ]
                    }
                    {
                      "name": claim_payout
                      "fields": []
                      "index": 2
                      "docs": [
                        See [`"Pallet"::claim_payout`].
                      ]
                    }
                    {
                      "name": unbond
                      "fields": [
                        {
                          "name": member_account
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": unbonding_points
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::unbond`].
                      ]
                    }
                    {
                      "name": pool_withdraw_unbonded
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": num_slashing_spans
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::pool_withdraw_unbonded`].
                      ]
                    }
                    {
                      "name": withdraw_unbonded
                      "fields": [
                        {
                          "name": member_account
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": num_slashing_spans
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::withdraw_unbonded`].
                      ]
                    }
                    {
                      "name": create
                      "fields": [
                        {
                          "name": amount
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": root
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": nominator
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": bouncer
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::create`].
                      ]
                    }
                    {
                      "name": create_with_pool_id
                      "fields": [
                        {
                          "name": amount
                          "type": 46
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": root
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": nominator
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": bouncer
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::create_with_pool_id`].
                      ]
                    }
                    {
                      "name": nominate
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": validators
                          "type": 97
                          "typeName": Vec<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        See [`"Pallet"::nominate`].
                      ]
                    }
                    {
                      "name": set_state
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": state
                          "type": 253
                          "typeName": PoolState
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        See [`"Pallet"::set_state`].
                      ]
                    }
                    {
                      "name": set_metadata
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": metadata
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        See [`"Pallet"::set_metadata`].
                      ]
                    }
                    {
                      "name": set_configs
                      "fields": [
                        {
                          "name": min_join_bond
                          "type": 254
                          "typeName": ConfigOp<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": min_create_bond
                          "type": 254
                          "typeName": ConfigOp<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": max_pools
                          "type": 255
                          "typeName": ConfigOp<u32>
                          "docs": []
                        }
                        {
                          "name": max_members
                          "type": 255
                          "typeName": ConfigOp<u32>
                          "docs": []
                        }
                        {
                          "name": max_members_per_pool
                          "type": 255
                          "typeName": ConfigOp<u32>
                          "docs": []
                        }
                        {
                          "name": global_max_commission
                          "type": 256
                          "typeName": ConfigOp<Perbill>
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        See [`"Pallet"::set_configs`].
                      ]
                    }
                    {
                      "name": update_roles
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": new_root
                          "type": 257
                          "typeName": ConfigOp<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": new_nominator
                          "type": 257
                          "typeName": ConfigOp<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": new_bouncer
                          "type": 257
                          "typeName": ConfigOp<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        See [`"Pallet"::update_roles`].
                      ]
                    }
                    {
                      "name": chill
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        See [`"Pallet"::chill`].
                      ]
                    }
                    {
                      "name": bond_extra_other
                      "fields": [
                        {
                          "name": member
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": extra
                          "type": 252
                          "typeName": BondExtra<BalanceOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": [
                        See [`"Pallet"::bond_extra_other`].
                      ]
                    }
                    {
                      "name": set_claim_permission
                      "fields": [
                        {
                          "name": permission
                          "type": 258
                          "typeName": ClaimPermission
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": [
                        See [`"Pallet"::set_claim_permission`].
                      ]
                    }
                    {
                      "name": claim_payout_other
                      "fields": [
                        {
                          "name": other
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": [
                        See [`"Pallet"::claim_payout_other`].
                      ]
                    }
                    {
                      "name": set_commission
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": new_commission
                          "type": 259
                          "typeName": Option<(Perbill, "T"::AccountId)>
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": [
                        See [`"Pallet"::set_commission`].
                      ]
                    }
                    {
                      "name": set_commission_max
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": max_commission
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": [
                        See [`"Pallet"::set_commission_max`].
                      ]
                    }
                    {
                      "name": set_commission_change_rate
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": change_rate
                          "type": 261
                          "typeName": CommissionChangeRate<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": [
                        See [`"Pallet"::set_commission_change_rate`].
                      ]
                    }
                    {
                      "name": claim_commission
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": [
                        See [`"Pallet"::claim_commission`].
                      ]
                    }
                    {
                      "name": adjust_pool_deposit
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": [
                        See [`"Pallet"::adjust_pool_deposit`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 252
            "type": {
              "path": [
                pallet_nomination_pools
                BondExtra
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": FreeBalance
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Rewards
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 253
            "type": {
              "path": [
                pallet_nomination_pools
                PoolState
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Open
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Blocked
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Destroying
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 254
            "type": {
              "path": [
                pallet_nomination_pools
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 255
            "type": {
              "path": [
                pallet_nomination_pools
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 256
            "type": {
              "path": [
                pallet_nomination_pools
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 51
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 51
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 257
            "type": {
              "path": [
                pallet_nomination_pools
                ConfigOp
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noop
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Set
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Remove
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 258
            "type": {
              "path": [
                pallet_nomination_pools
                ClaimPermission
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Permissioned
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": PermissionlessCompound
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": PermissionlessWithdraw
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": PermissionlessAll
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 259
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 260
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 260
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 260
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  51
                  0
                ]
              }
              "docs": []
            }
          }
          {
            "id": 261
            "type": {
              "path": [
                pallet_nomination_pools
                CommissionChangeRate
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": max_increase
                      "type": 51
                      "typeName": Perbill
                      "docs": []
                    }
                    {
                      "name": min_delay
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 262
            "type": {
              "path": [
                pallet_gear
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": upload_code
                      "fields": [
                        {
                          "name": code
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::upload_code`].
                      ]
                    }
                    {
                      "name": upload_program
                      "fields": [
                        {
                          "name": code
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": salt
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": init_payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::upload_program`].
                      ]
                    }
                    {
                      "name": create_program
                      "fields": [
                        {
                          "name": code_id
                          "type": 263
                          "typeName": CodeId
                          "docs": []
                        }
                        {
                          "name": salt
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": init_payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::create_program`].
                      ]
                    }
                    {
                      "name": send_message
                      "fields": [
                        {
                          "name": destination
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                        {
                          "name": payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::send_message`].
                      ]
                    }
                    {
                      "name": send_reply
                      "fields": [
                        {
                          "name": reply_to_id
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                        {
                          "name": payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::send_reply`].
                      ]
                    }
                    {
                      "name": claim_value
                      "fields": [
                        {
                          "name": message_id
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::claim_value`].
                      ]
                    }
                    {
                      "name": run
                      "fields": [
                        {
                          "name": max_gas
                          "type": 266
                          "typeName": Option<GasBalanceOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        See [`"Pallet"::run`].
                      ]
                    }
                    {
                      "name": set_execute_inherent
                      "fields": [
                        {
                          "name": value
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        See [`"Pallet"::set_execute_inherent`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 263
            "type": {
              "path": [
                gprimitives
                CodeId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 264
            "type": {
              "path": [
                gprimitives
                ActorId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 265
            "type": {
              "path": [
                gprimitives
                MessageId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 266
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 11
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 11
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 267
            "type": {
              "path": [
                pallet_gear_staking_rewards
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": refill
                      "fields": [
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::refill`].
                      ]
                    }
                    {
                      "name": force_refill
                      "fields": [
                        {
                          "name": from
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::force_refill`].
                      ]
                    }
                    {
                      "name": withdraw
                      "fields": [
                        {
                          "name": to
                          "type": 94
                          "typeName": AccountIdLookupOf<T>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::withdraw`].
                      ]
                    }
                    {
                      "name": align_supply
                      "fields": [
                        {
                          "name": target
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::align_supply`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 268
            "type": {
              "path": [
                pallet_gear_voucher
                pallet
                Call
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": issue
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": programs
                          "type": 269
                          "typeName": Option<BTreeSet<ProgramId>>
                          "docs": []
                        }
                        {
                          "name": code_uploading
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                        {
                          "name": duration
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        See [`"Pallet"::issue`].
                      ]
                    }
                    {
                      "name": call
                      "fields": [
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": []
                        }
                        {
                          "name": call
                          "type": 273
                          "typeName": PrepaidCall<BalanceOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        See [`"Pallet"::call`].
                      ]
                    }
                    {
                      "name": revoke
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": []
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        See [`"Pallet"::revoke`].
                      ]
                    }
                    {
                      "name": update
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": []
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": []
                        }
                        {
                          "name": move_ownership
                          "type": 274
                          "typeName": Option<AccountIdOf<T>>
                          "docs": []
                        }
                        {
                          "name": balance_top_up
                          "type": 275
                          "typeName": Option<BalanceOf<T>>
                          "docs": []
                        }
                        {
                          "name": append_programs
                          "type": 276
                          "typeName": Option<Option<BTreeSet<ProgramId>>>
                          "docs": []
                        }
                        {
                          "name": code_uploading
                          "type": 277
                          "typeName": Option<bool>
                          "docs": []
                        }
                        {
                          "name": prolong_duration
                          "type": 117
                          "typeName": Option<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        See [`"Pallet"::update`].
                      ]
                    }
                    {
                      "name": call_deprecated
                      "fields": [
                        {
                          "name": call
                          "type": 273
                          "typeName": PrepaidCall<BalanceOf<T>>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        See [`"Pallet"::call_deprecated`].
                      ]
                    }
                    {
                      "name": decline
                      "fields": [
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        See [`"Pallet"::decline`].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Contains a variant per dispatchable extrinsic that this pallet has.
              ]
            }
          }
          {
            "id": 269
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 270
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 270
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 270
            "type": {
              "path": [
                BTreeSet
              ]
              "params": [
                {
                  "name": T
                  "type": 264
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 271
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 271
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 264
                }
              }
              "docs": []
            }
          }
          {
            "id": 272
            "type": {
              "path": [
                pallet_gear_voucher
                internal
                VoucherId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 273
            "type": {
              "path": [
                pallet_gear_voucher
                internal
                PrepaidCall
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": SendMessage
                      "fields": [
                        {
                          "name": destination
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                        {
                          "name": payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": SendReply
                      "fields": [
                        {
                          "name": reply_to_id
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                        {
                          "name": payload
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                        {
                          "name": gas_limit
                          "type": 11
                          "typeName": u64
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": keep_alive
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": UploadCode
                      "fields": [
                        {
                          "name": code
                          "type": 13
                          "typeName": Vec<u8>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": DeclineVoucher
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 274
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 275
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 276
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 269
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 269
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 277
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 54
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 54
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 278
            "type": {
              "path": [
                sp_runtime
                traits
                BlakeTwo256
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 279
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 280
            "type": {
              "path": [
                pallet_conviction_voting
                types
                Tally
              ]
              "params": [
                {
                  "name": Votes
                  "type": 6
                }
                {
                  "name": Total
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": ayes
                      "type": 6
                      "typeName": Votes
                      "docs": []
                    }
                    {
                      "name": nays
                      "type": 6
                      "typeName": Votes
                      "docs": []
                    }
                    {
                      "name": support
                      "type": 6
                      "typeName": Votes
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 281
            "type": {
              "path": [
                pallet_ranked_collective
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": MemberAdded
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A member `who` has been added.
                      ]
                    }
                    {
                      "name": RankChanged
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": rank
                          "type": 63
                          "typeName": Rank
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        The member `who`se rank has been changed to the given `rank`.
                      ]
                    }
                    {
                      "name": MemberRemoved
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": rank
                          "type": 63
                          "typeName": Rank
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        The member `who` of given `rank` has been removed from the collective.
                      ]
                    }
                    {
                      "name": Voted
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": poll
                          "type": 4
                          "typeName": PollIndexOf<T, I>
                          "docs": []
                        }
                        {
                          "name": vote
                          "type": 282
                          "typeName": VoteRecord
                          "docs": []
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": TallyOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        The member `who` has voted for the `poll` with the given `vote` leading to an updated
                        `tally`.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 282
            "type": {
              "path": [
                pallet_ranked_collective
                VoteRecord
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Aye
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Votes
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Nay
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Votes
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 283
            "type": {
              "path": [
                pallet_ranked_collective
                Tally
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
                {
                  "name": M
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": bare_ayes
                      "type": 4
                      "typeName": MemberIndex
                      "docs": []
                    }
                    {
                      "name": ayes
                      "type": 4
                      "typeName": Votes
                      "docs": []
                    }
                    {
                      "name": nays
                      "type": 4
                      "typeName": Votes
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 284
            "type": {
              "path": [
                pallet_referenda
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Submitted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": [
                            The track (and by extension proposal dispatch origin) of this referendum.
                          ]
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": [
                            The proposal for the referendum.
                          ]
                        }
                      ]
                      "index": 0
                      "docs": [
                        A referendum has been submitted.
                      ]
                    }
                    {
                      "name": DecisionDepositPlaced
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 1
                      "docs": [
                        The decision deposit has been placed.
                      ]
                    }
                    {
                      "name": DecisionDepositRefunded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 2
                      "docs": [
                        The decision deposit has been refunded.
                      ]
                    }
                    {
                      "name": DepositSlashed
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 3
                      "docs": [
                        A deposit has been slashaed.
                      ]
                    }
                    {
                      "name": DecisionStarted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": track
                          "type": 63
                          "typeName": TrackIdOf<T, I>
                          "docs": [
                            The track (and by extension proposal dispatch origin) of this referendum.
                          ]
                        }
                        {
                          "name": proposal
                          "type": 64
                          "typeName": BoundedCallOf<T, I>
                          "docs": [
                            The proposal for the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The current tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 4
                      "docs": [
                        A referendum has moved into the deciding phase.
                      ]
                    }
                    {
                      "name": ConfirmStarted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": ConfirmAborted
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Confirmed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 7
                      "docs": [
                        A referendum has ended its confirmation phase and is ready for approval.
                      ]
                    }
                    {
                      "name": Approved
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                      ]
                      "index": 8
                      "docs": [
                        A referendum has been approved and its proposal has been scheduled.
                      ]
                    }
                    {
                      "name": Rejected
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 9
                      "docs": [
                        A proposal has been rejected by referendum.
                      ]
                    }
                    {
                      "name": TimedOut
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 10
                      "docs": [
                        A referendum has been timed out without being decided.
                      ]
                    }
                    {
                      "name": Cancelled
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 11
                      "docs": [
                        A referendum has been cancelled.
                      ]
                    }
                    {
                      "name": Killed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": tally
                          "type": 283
                          "typeName": "T"::Tally
                          "docs": [
                            The final tally of votes in this referendum.
                          ]
                        }
                      ]
                      "index": 12
                      "docs": [
                        A referendum has been killed.
                      ]
                    }
                    {
                      "name": SubmissionDepositRefunded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            The account who placed the deposit.
                          ]
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": [
                            The amount placed by the account.
                          ]
                        }
                      ]
                      "index": 13
                      "docs": [
                        The submission deposit has been refunded.
                      ]
                    }
                    {
                      "name": MetadataSet
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": [
                            Preimage hash.
                          ]
                        }
                      ]
                      "index": 14
                      "docs": [
                        Metadata for a referendum has been set.
                      ]
                    }
                    {
                      "name": MetadataCleared
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": ReferendumIndex
                          "docs": [
                            Index of the referendum.
                          ]
                        }
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": [
                            Preimage hash.
                          ]
                        }
                      ]
                      "index": 15
                      "docs": [
                        Metadata for a referendum has been cleared.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 285
            "type": {
              "path": [
                pallet_whitelist
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": CallWhitelisted
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": WhitelistedCallRemoved
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": WhitelistedCallDispatched
                      "fields": [
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                        {
                          "name": result
                          "type": 286
                          "typeName": DispatchResultWithPostInfo
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 286
            "type": {
              "path": [
                Result
              ]
              "params": [
                {
                  "name": T
                  "type": 287
                }
                {
                  "name": E
                  "type": 289
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Ok
                      "fields": [
                        {
                          "name": null
                          "type": 287
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Err
                      "fields": [
                        {
                          "name": null
                          "type": 289
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 287
            "type": {
              "path": [
                frame_support
                dispatch
                PostDispatchInfo
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": actual_weight
                      "type": 288
                      "typeName": Option<Weight>
                      "docs": []
                    }
                    {
                      "name": pays_fee
                      "type": 24
                      "typeName": Pays
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 288
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 9
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 9
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 289
            "type": {
              "path": [
                sp_runtime
                DispatchErrorWithPostInfo
              ]
              "params": [
                {
                  "name": Info
                  "type": 287
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": post_info
                      "type": 287
                      "typeName": Info
                      "docs": []
                    }
                    {
                      "name": error
                      "type": 25
                      "typeName": DispatchError
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 290
            "type": {
              "path": [
                pallet_scheduler
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Scheduled
                      "fields": [
                        {
                          "name": when
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        Scheduled some task.
                      ]
                    }
                    {
                      "name": Canceled
                      "fields": [
                        {
                          "name": when
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                        {
                          "name": index
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        Canceled some task.
                      ]
                    }
                    {
                      "name": Dispatched
                      "fields": [
                        {
                          "name": task
                          "type": 137
                          "typeName": TaskAddress<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": id
                          "type": 291
                          "typeName": Option<TaskName>
                          "docs": []
                        }
                        {
                          "name": result
                          "type": 60
                          "typeName": DispatchResult
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        Dispatched some task.
                      ]
                    }
                    {
                      "name": CallUnavailable
                      "fields": [
                        {
                          "name": task
                          "type": 137
                          "typeName": TaskAddress<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": id
                          "type": 291
                          "typeName": Option<TaskName>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        The call for the provided hash was not found so the task has been aborted.
                      ]
                    }
                    {
                      "name": PeriodicFailed
                      "fields": [
                        {
                          "name": task
                          "type": 137
                          "typeName": TaskAddress<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": id
                          "type": 291
                          "typeName": Option<TaskName>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        The given task was unable to be renewed since the agenda is full at that block.
                      ]
                    }
                    {
                      "name": PermanentlyOverweight
                      "fields": [
                        {
                          "name": task
                          "type": 137
                          "typeName": TaskAddress<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": id
                          "type": 291
                          "typeName": Option<TaskName>
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        The given task can never be executed since it is overweight.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Events type.
              ]
            }
          }
          {
            "id": 291
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 1
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 1
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 292
            "type": {
              "path": [
                pallet_preimage
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Noted
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A preimage has been noted.
                      ]
                    }
                    {
                      "name": Requested
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A preimage has been requested.
                      ]
                    }
                    {
                      "name": Cleared
                      "fields": [
                        {
                          "name": hash
                          "type": 12
                          "typeName": "T"::Hash
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A preimage has ben cleared.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 293
            "type": {
              "path": [
                pallet_identity
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": IdentitySet
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A name was set or reset (which will remove all judgements).
                      ]
                    }
                    {
                      "name": IdentityCleared
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A name was cleared, and the given balance returned.
                      ]
                    }
                    {
                      "name": IdentityKilled
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A name was removed and the given balance slashed.
                      ]
                    }
                    {
                      "name": JudgementRequested
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": registrar_index
                          "type": 4
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A judgement was asked from a registrar.
                      ]
                    }
                    {
                      "name": JudgementUnrequested
                      "fields": [
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": registrar_index
                          "type": 4
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        A judgement request was retracted.
                      ]
                    }
                    {
                      "name": JudgementGiven
                      "fields": [
                        {
                          "name": target
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": registrar_index
                          "type": 4
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        A judgement was given by a registrar.
                      ]
                    }
                    {
                      "name": RegistrarAdded
                      "fields": [
                        {
                          "name": registrar_index
                          "type": 4
                          "typeName": RegistrarIndex
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        A registrar was added.
                      ]
                    }
                    {
                      "name": SubIdentityAdded
                      "fields": [
                        {
                          "name": sub
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": main
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        A sub-identity was added to an identity and the deposit paid.
                      ]
                    }
                    {
                      "name": SubIdentityRemoved
                      "fields": [
                        {
                          "name": sub
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": main
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        A sub-identity was removed from an identity and the deposit freed.
                      ]
                    }
                    {
                      "name": SubIdentityRevoked
                      "fields": [
                        {
                          "name": sub
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": main
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        A sub-identity was cleared, and the given deposit repatriated from the
                        main identity account to the sub-identity account.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 294
            "type": {
              "path": [
                pallet_proxy
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ProxyExecuted
                      "fields": [
                        {
                          "name": result
                          "type": 60
                          "typeName": DispatchResult
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A proxy was executed correctly, with the given.
                      ]
                    }
                    {
                      "name": PureCreated
                      "fields": [
                        {
                          "name": pure
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": who
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": disambiguation_index
                          "type": 63
                          "typeName": u16
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A pure account has been created by new proxy with given
                        disambiguation index and proxy type.
                      ]
                    }
                    {
                      "name": Announced
                      "fields": [
                        {
                          "name": real
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": proxy
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 12
                          "typeName": CallHashOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        An announcement was placed to make a call in the future.
                      ]
                    }
                    {
                      "name": ProxyAdded
                      "fields": [
                        {
                          "name": delegator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": delegatee
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A proxy was added.
                      ]
                    }
                    {
                      "name": ProxyRemoved
                      "fields": [
                        {
                          "name": delegator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": delegatee
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": proxy_type
                          "type": 184
                          "typeName": "T"::ProxyType
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        A proxy was removed.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 295
            "type": {
              "path": [
                pallet_multisig
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NewMultisig
                      "fields": [
                        {
                          "name": approving
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": multisig
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": CallHash
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A new multisig operation has begun.
                      ]
                    }
                    {
                      "name": MultisigApproval
                      "fields": [
                        {
                          "name": approving
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": timepoint
                          "type": 187
                          "typeName": Timepoint<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": multisig
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": CallHash
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A multisig operation has been approved by someone.
                      ]
                    }
                    {
                      "name": MultisigExecuted
                      "fields": [
                        {
                          "name": approving
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": timepoint
                          "type": 187
                          "typeName": Timepoint<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": multisig
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": CallHash
                          "docs": []
                        }
                        {
                          "name": result
                          "type": 60
                          "typeName": DispatchResult
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A multisig operation has been executed.
                      ]
                    }
                    {
                      "name": MultisigCancelled
                      "fields": [
                        {
                          "name": cancelling
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": timepoint
                          "type": 187
                          "typeName": Timepoint<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": multisig
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": call_hash
                          "type": 1
                          "typeName": CallHash
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A multisig operation has been cancelled.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 296
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": SolutionStored
                      "fields": [
                        {
                          "name": compute
                          "type": 297
                          "typeName": ElectionCompute
                          "docs": []
                        }
                        {
                          "name": origin
                          "type": 274
                          "typeName": Option<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": prev_ejected
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A solution was stored with the given compute.
                        
                        The `origin` indicates the origin of the solution. If `origin` is `Some(AccountId)`,
                        the stored solution was submited in the signed phase by a miner with the `AccountId`.
                        Otherwise, the solution was stored either during the unsigned phase or by
                        `"T"::ForceOrigin`. The `bool` is `true` when a previous solution was ejected to make
                        room for this one.
                      ]
                    }
                    {
                      "name": ElectionFinalized
                      "fields": [
                        {
                          "name": compute
                          "type": 297
                          "typeName": ElectionCompute
                          "docs": []
                        }
                        {
                          "name": score
                          "type": 241
                          "typeName": ElectionScore
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        The election has been finalized, with the given computation and score.
                      ]
                    }
                    {
                      "name": ElectionFailed
                      "fields": []
                      "index": 2
                      "docs": [
                        An election failed.
                        
                        Not much can be said about which computes failed in the process.
                      ]
                    }
                    {
                      "name": Rewarded
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": <T as "frame_system"::Config>::AccountId
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        An account has been rewarded for their signed submission being finalized.
                      ]
                    }
                    {
                      "name": Slashed
                      "fields": [
                        {
                          "name": account
                          "type": 0
                          "typeName": <T as "frame_system"::Config>::AccountId
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        An account has been slashed for submitting an invalid signed submission.
                      ]
                    }
                    {
                      "name": PhaseTransitioned
                      "fields": [
                        {
                          "name": from
                          "type": 298
                          "typeName": Phase<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": to
                          "type": 298
                          "typeName": Phase<BlockNumberFor<T>>
                          "docs": []
                        }
                        {
                          "name": round
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        There was a phase transition in a given round.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 297
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                ElectionCompute
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": OnChain
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Signed
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Unsigned
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Fallback
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Emergency
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 298
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                Phase
              ]
              "params": [
                {
                  "name": Bn
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Off
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Signed
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Unsigned
                      "fields": [
                        {
                          "name": null
                          "type": 299
                          "typeName": (bool, Bn)
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Emergency
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 299
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  54
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 300
            "type": {
              "path": [
                pallet_offences
                pallet
                Event
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Offence
                      "fields": [
                        {
                          "name": kind
                          "type": 160
                          "typeName": Kind
                          "docs": []
                        }
                        {
                          "name": timeslot
                          "type": 13
                          "typeName": OpaqueTimeSlot
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        There is an offence reported of the given `kind` happened at the `session_index` and
                        (kind-specific) time slot. This event is not deposited for duplicate slashes.
                        [kind, timeslot].
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Events type.
              ]
            }
          }
          {
            "id": 301
            "type": {
              "path": [
                pallet_bounties
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": BountyProposed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        New bounty proposal.
                      ]
                    }
                    {
                      "name": BountyRejected
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": bond
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A bounty proposal was rejected; funds were slashed.
                      ]
                    }
                    {
                      "name": BountyBecameActive
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A bounty proposal is funded and became active.
                      ]
                    }
                    {
                      "name": BountyAwarded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A bounty is awarded to a beneficiary.
                      ]
                    }
                    {
                      "name": BountyClaimed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": payout
                          "type": 6
                          "typeName": BalanceOf<T, I>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        A bounty is claimed by beneficiary.
                      ]
                    }
                    {
                      "name": BountyCanceled
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        A bounty is cancelled.
                      ]
                    }
                    {
                      "name": BountyExtended
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        A bounty expiry is extended.
                      ]
                    }
                    {
                      "name": BountyApproved
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        A bounty is approved.
                      ]
                    }
                    {
                      "name": CuratorProposed
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": curator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        A bounty curator is proposed.
                      ]
                    }
                    {
                      "name": CuratorUnassigned
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        A bounty curator is unassigned.
                      ]
                    }
                    {
                      "name": CuratorAccepted
                      "fields": [
                        {
                          "name": bounty_id
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": curator
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        A bounty curator is accepted.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 302
            "type": {
              "path": [
                pallet_child_bounties
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Added
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A child-bounty is added.
                      ]
                    }
                    {
                      "name": Awarded
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A child-bounty is awarded to a beneficiary.
                      ]
                    }
                    {
                      "name": Claimed
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": payout
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A child-bounty is claimed by beneficiary.
                      ]
                    }
                    {
                      "name": Canceled
                      "fields": [
                        {
                          "name": index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                        {
                          "name": child_index
                          "type": 4
                          "typeName": BountyIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A child-bounty is cancelled.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 303
            "type": {
              "path": [
                pallet_nomination_pools
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Created
                      "fields": [
                        {
                          "name": depositor
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A pool has been created.
                      ]
                    }
                    {
                      "name": Bonded
                      "fields": [
                        {
                          "name": member
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": bonded
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": joined
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        A member has became bonded in a pool.
                      ]
                    }
                    {
                      "name": PaidOut
                      "fields": [
                        {
                          "name": member
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": payout
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        A payout has been made to a member.
                      ]
                    }
                    {
                      "name": Unbonded
                      "fields": [
                        {
                          "name": member
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": points
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": era
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        A member has unbonded from their pool.
                        
                        - `balance` is the corresponding balance of the number of points that has been
                          requested to be unbonded (the argument of the `unbond` transaction) from the bonded
                          pool.
                        - `points` is the number of points that are issued as a result of `balance` being
                        dissolved into the corresponding unbonding pool.
                        - `era` is the era in which the balance will be unbonded.
                        In the absence of slashing, these values will match. In the presence of slashing, the
                        number of points that are issued in the unbonding pool will be less than the amount
                        requested to be unbonded.
                      ]
                    }
                    {
                      "name": Withdrawn
                      "fields": [
                        {
                          "name": member
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                        {
                          "name": points
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": [
                        A member has withdrawn from their pool.
                        
                        The given number of `points` have been dissolved in return of `balance`.
                        
                        Similar to `Unbonded` event, in the absence of slashing, the ratio of point to balance
                        will be 1.
                      ]
                    }
                    {
                      "name": Destroyed
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": [
                        A pool has been destroyed.
                      ]
                    }
                    {
                      "name": StateChanged
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": new_state
                          "type": 253
                          "typeName": PoolState
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": [
                        The state of a pool has changed
                      ]
                    }
                    {
                      "name": MemberRemoved
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": member
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": [
                        A member has been removed from a pool.
                        
                        The removal can be voluntary (withdrawn all unbonded funds) or involuntary (kicked).
                      ]
                    }
                    {
                      "name": RolesUpdated
                      "fields": [
                        {
                          "name": root
                          "type": 274
                          "typeName": Option<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": bouncer
                          "type": 274
                          "typeName": Option<"T"::AccountId>
                          "docs": []
                        }
                        {
                          "name": nominator
                          "type": 274
                          "typeName": Option<"T"::AccountId>
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": [
                        The roles of a pool have been updated to the given new roles. Note that the depositor
                        can never change.
                      ]
                    }
                    {
                      "name": PoolSlashed
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": [
                        The active balance of pool `pool_id` has been slashed to `balance`.
                      ]
                    }
                    {
                      "name": UnbondingPoolSlashed
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": era
                          "type": 4
                          "typeName": EraIndex
                          "docs": []
                        }
                        {
                          "name": balance
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": [
                        The unbond pool at `era` of pool `pool_id` has been slashed to `balance`.
                      ]
                    }
                    {
                      "name": PoolCommissionUpdated
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": current
                          "type": 259
                          "typeName": Option<(Perbill, "T"::AccountId)>
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": [
                        A pool's commission setting has been changed.
                      ]
                    }
                    {
                      "name": PoolMaxCommissionUpdated
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": max_commission
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": [
                        A pool's maximum commission setting has been changed.
                      ]
                    }
                    {
                      "name": PoolCommissionChangeRateUpdated
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": change_rate
                          "type": 261
                          "typeName": CommissionChangeRate<BlockNumberFor<T>>
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": [
                        A pool's commission `change_rate` has been changed.
                      ]
                    }
                    {
                      "name": PoolCommissionClaimed
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": commission
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": [
                        Pool commission has been claimed.
                      ]
                    }
                    {
                      "name": MinBalanceDeficitAdjusted
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": [
                        Topped up deficit in frozen ED of the reward pool.
                      ]
                    }
                    {
                      "name": MinBalanceExcessAdjusted
                      "fields": [
                        {
                          "name": pool_id
                          "type": 4
                          "typeName": PoolId
                          "docs": []
                        }
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": [
                        Claimed excess frozen ED of af the reward pool.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Events of this pallet.
              ]
            }
          }
          {
            "id": 304
            "type": {
              "path": [
                pallet_gear
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": MessageQueued
                      "fields": [
                        {
                          "name": id
                          "type": 265
                          "typeName": MessageId
                          "docs": [
                            Generated id of the message.
                          ]
                        }
                        {
                          "name": source
                          "type": 0
                          "typeName": "T"::AccountId
                          "docs": [
                            Account id of the source of the message.
                          ]
                        }
                        {
                          "name": destination
                          "type": 264
                          "typeName": ProgramId
                          "docs": [
                            Program id, who is the message's destination.
                          ]
                        }
                        {
                          "name": entry
                          "type": 305
                          "typeName": MessageEntry
                          "docs": [
                            Entry point for processing of the message.
                            On the sending stage, the processing function
                            of the program is always known.
                          ]
                        }
                      ]
                      "index": 0
                      "docs": [
                        User sends message to program, which was successfully
                        added to the Gear message queue.
                      ]
                    }
                    {
                      "name": UserMessageSent
                      "fields": [
                        {
                          "name": message
                          "type": 306
                          "typeName": UserMessage
                          "docs": [
                            Message sent.
                          ]
                        }
                        {
                          "name": expiration
                          "type": 117
                          "typeName": Option<BlockNumberFor<T>>
                          "docs": [
                            Block number of expiration from `Mailbox`.
                            
                            Equals `Some(_)` with block number when message
                            will be removed from `Mailbox` due to some
                            reasons (see #642, #646 and #1010).
                            
                            Equals `None` if message wasn't inserted to
                            `Mailbox` and appears as only `Event`.
                          ]
                        }
                      ]
                      "index": 1
                      "docs": [
                        Somebody sent a message to the user.
                      ]
                    }
                    {
                      "name": UserMessageRead
                      "fields": [
                        {
                          "name": id
                          "type": 265
                          "typeName": MessageId
                          "docs": [
                            Id of the message read.
                          ]
                        }
                        {
                          "name": reason
                          "type": 316
                          "typeName": UserMessageReadReason
                          "docs": [
                            The reason for the reading (removal from `Mailbox`).
                            
                            "NOTE": See more docs about reasons at `"gear_common"::event`.
                          ]
                        }
                      ]
                      "index": 2
                      "docs": [
                        Message marked as read and removes it from `Mailbox`.
                        This event only affects messages that were
                        already inserted in `Mailbox`.
                      ]
                    }
                    {
                      "name": MessagesDispatched
                      "fields": [
                        {
                          "name": total
                          "type": 4
                          "typeName": MessengerCapacityOf<T>
                          "docs": [
                            Total amount of messages removed from message queue.
                          ]
                        }
                        {
                          "name": statuses
                          "type": 319
                          "typeName": BTreeMap<MessageId, DispatchStatus>
                          "docs": [
                            Execution statuses of the messages, which were already known
                            by `"Event"::MessageQueued` (sent from user to program).
                          ]
                        }
                        {
                          "name": state_changes
                          "type": 270
                          "typeName": BTreeSet<ProgramId>
                          "docs": [
                            Ids of programs, which state changed during queue processing.
                          ]
                        }
                      ]
                      "index": 3
                      "docs": [
                        The result of processing the messages within the block.
                      ]
                    }
                    {
                      "name": MessageWaited
                      "fields": [
                        {
                          "name": id
                          "type": 265
                          "typeName": MessageId
                          "docs": [
                            Id of the message waited.
                          ]
                        }
                        {
                          "name": origin
                          "type": 323
                          "typeName": Option<GasNodeId<MessageId, ReservationId>>
                          "docs": [
                            Origin message id, which started messaging chain with programs,
                            where currently waited message was created.
                            
                            Used to identify by the user that this message associated
                            with him and the concrete initial message.
                          ]
                        }
                        {
                          "name": reason
                          "type": 326
                          "typeName": MessageWaitedReason
                          "docs": [
                            The reason of the waiting (addition to `Waitlist`).
                            
                            "NOTE": See more docs about reasons at `"gear_common"::event`.
                          ]
                        }
                        {
                          "name": expiration
                          "type": 4
                          "typeName": BlockNumberFor<T>
                          "docs": [
                            Block number of expiration from `Waitlist`.
                            
                            Equals block number when message will be removed from `Waitlist`
                            due to some reasons (see #642, #646 and #1010).
                          ]
                        }
                      ]
                      "index": 4
                      "docs": [
                        Messages execution delayed (waited) and successfully
                        added to gear waitlist.
                      ]
                    }
                    {
                      "name": MessageWoken
                      "fields": [
                        {
                          "name": id
                          "type": 265
                          "typeName": MessageId
                          "docs": [
                            Id of the message woken.
                          ]
                        }
                        {
                          "name": reason
                          "type": 329
                          "typeName": MessageWokenReason
                          "docs": [
                            The reason of the waking (removal from `Waitlist`).
                            
                            "NOTE": See more docs about reasons at `"gear_common"::event`.
                          ]
                        }
                      ]
                      "index": 5
                      "docs": [
                        Message is ready to continue its execution
                        and was removed from `Waitlist`.
                      ]
                    }
                    {
                      "name": CodeChanged
                      "fields": [
                        {
                          "name": id
                          "type": 263
                          "typeName": CodeId
                          "docs": [
                            Id of the code affected.
                          ]
                        }
                        {
                          "name": change
                          "type": 332
                          "typeName": CodeChangeKind<BlockNumberFor<T>>
                          "docs": [
                            Change applied on code with current id.
                            
                            "NOTE": See more docs about change kinds at `"gear_common"::event`.
                          ]
                        }
                      ]
                      "index": 6
                      "docs": [
                        Any data related to program codes changed.
                      ]
                    }
                    {
                      "name": ProgramChanged
                      "fields": [
                        {
                          "name": id
                          "type": 264
                          "typeName": ProgramId
                          "docs": [
                            Id of the program affected.
                          ]
                        }
                        {
                          "name": change
                          "type": 333
                          "typeName": ProgramChangeKind<BlockNumberFor<T>>
                          "docs": [
                            Change applied on program with current id.
                            
                            "NOTE": See more docs about change kinds at `"gear_common"::event`.
                          ]
                        }
                      ]
                      "index": 7
                      "docs": [
                        Any data related to programs changed.
                      ]
                    }
                    {
                      "name": QueueNotProcessed
                      "fields": []
                      "index": 8
                      "docs": [
                        The pseudo-inherent extrinsic that runs queue processing rolled back or not executed.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 305
            "type": {
              "path": [
                gear_common
                event
                MessageEntry
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Init
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Handle
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reply
                      "fields": [
                        {
                          "name": null
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Signal
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 306
            "type": {
              "path": [
                gear_core
                message
                user
                UserMessage
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 265
                      "typeName": MessageId
                      "docs": []
                    }
                    {
                      "name": source
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": destination
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": payload
                      "type": 307
                      "typeName": Payload
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 46
                      "typeName": Value
                      "docs": []
                    }
                    {
                      "name": details
                      "type": 309
                      "typeName": Option<ReplyDetails>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 307
            "type": {
              "path": [
                gear_core
                buffer
                LimitedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": E
                  "type": 308
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 308
            "type": {
              "path": [
                gear_core
                message
                PayloadSizeError
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 309
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 310
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 310
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 310
            "type": {
              "path": [
                gear_core
                message
                common
                ReplyDetails
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": to
                      "type": 265
                      "typeName": MessageId
                      "docs": []
                    }
                    {
                      "name": code
                      "type": 311
                      "typeName": ReplyCode
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 311
            "type": {
              "path": [
                gear_core_errors
                simple
                ReplyCode
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Success
                      "fields": [
                        {
                          "name": null
                          "type": 312
                          "typeName": SuccessReplyReason
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Error
                      "fields": [
                        {
                          "name": null
                          "type": 313
                          "typeName": ErrorReplyReason
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 312
            "type": {
              "path": [
                gear_core_errors
                simple
                SuccessReplyReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Auto
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Manual
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 313
            "type": {
              "path": [
                gear_core_errors
                simple
                ErrorReplyReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Execution
                      "fields": [
                        {
                          "name": null
                          "type": 314
                          "typeName": SimpleExecutionError
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": FailedToCreateProgram
                      "fields": [
                        {
                          "name": null
                          "type": 315
                          "typeName": SimpleProgramCreationError
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": InactiveActor
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": RemovedFromWaitlist
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": ReinstrumentationFailure
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 314
            "type": {
              "path": [
                gear_core_errors
                simple
                SimpleExecutionError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": RanOutOfGas
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": MemoryOverflow
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": BackendError
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": UserspacePanic
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": UnreachableInstruction
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": StackLimitExceeded
                      "fields": []
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 315
            "type": {
              "path": [
                gear_core_errors
                simple
                SimpleProgramCreationError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": CodeNotExists
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Unsupported
                      "fields": []
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 316
            "type": {
              "path": [
                gear_common
                event
                Reason
              ]
              "params": [
                {
                  "name": R
                  "type": 317
                }
                {
                  "name": S
                  "type": 318
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Runtime
                      "fields": [
                        {
                          "name": null
                          "type": 317
                          "typeName": R
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": System
                      "fields": [
                        {
                          "name": null
                          "type": 318
                          "typeName": S
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 317
            "type": {
              "path": [
                gear_common
                event
                UserMessageReadRuntimeReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": MessageReplied
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": MessageClaimed
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 318
            "type": {
              "path": [
                gear_common
                event
                UserMessageReadSystemReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": OutOfRent
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 319
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 265
                }
                {
                  "name": V
                  "type": 320
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 321
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 320
            "type": {
              "path": [
                gear_common
                event
                DispatchStatus
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Success
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Failed
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": NotExecuted
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 321
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 322
                }
              }
              "docs": []
            }
          }
          {
            "id": 322
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  265
                  320
                ]
              }
              "docs": []
            }
          }
          {
            "id": 323
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 324
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 324
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 324
            "type": {
              "path": [
                gear_common
                gas_provider
                node
                GasNodeId
              ]
              "params": [
                {
                  "name": T
                  "type": 265
                }
                {
                  "name": U
                  "type": 325
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Node
                      "fields": [
                        {
                          "name": null
                          "type": 265
                          "typeName": T
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Reservation
                      "fields": [
                        {
                          "name": null
                          "type": 325
                          "typeName": U
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 325
            "type": {
              "path": [
                gprimitives
                ReservationId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 1
                      "typeName": [u8; 32]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 326
            "type": {
              "path": [
                gear_common
                event
                Reason
              ]
              "params": [
                {
                  "name": R
                  "type": 327
                }
                {
                  "name": S
                  "type": 328
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Runtime
                      "fields": [
                        {
                          "name": null
                          "type": 327
                          "typeName": R
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": System
                      "fields": [
                        {
                          "name": null
                          "type": 328
                          "typeName": S
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 327
            "type": {
              "path": [
                gear_common
                event
                MessageWaitedRuntimeReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": WaitCalled
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": WaitForCalled
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": WaitUpToCalled
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": WaitUpToCalledFull
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 328
            "type": {
              "path": [
                gear_common
                event
                MessageWaitedSystemReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 329
            "type": {
              "path": [
                gear_common
                event
                Reason
              ]
              "params": [
                {
                  "name": R
                  "type": 330
                }
                {
                  "name": S
                  "type": 331
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Runtime
                      "fields": [
                        {
                          "name": null
                          "type": 330
                          "typeName": R
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": System
                      "fields": [
                        {
                          "name": null
                          "type": 331
                          "typeName": S
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 330
            "type": {
              "path": [
                gear_common
                event
                MessageWokenRuntimeReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": WakeCalled
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 331
            "type": {
              "path": [
                gear_common
                event
                MessageWokenSystemReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ProgramGotInitialized
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": TimeoutHasCome
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": OutOfRent
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 332
            "type": {
              "path": [
                gear_common
                event
                CodeChangeKind
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Active
                      "fields": [
                        {
                          "name": expiration
                          "type": 117
                          "typeName": Option<BlockNumber>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Inactive
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reinstrumented
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 333
            "type": {
              "path": [
                gear_common
                event
                ProgramChangeKind
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Active
                      "fields": [
                        {
                          "name": expiration
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Inactive
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Paused
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Terminated
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": ExpirationChanged
                      "fields": [
                        {
                          "name": expiration
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": ProgramSet
                      "fields": [
                        {
                          "name": expiration
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 334
            "type": {
              "path": [
                pallet_gear_staking_rewards
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Deposited
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        Deposited to the pool.
                      ]
                    }
                    {
                      "name": Withdrawn
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": [
                        Transferred from the pool to an external account.
                      ]
                    }
                    {
                      "name": Burned
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": [
                        Burned from the pool.
                      ]
                    }
                    {
                      "name": Minted
                      "fields": [
                        {
                          "name": amount
                          "type": 6
                          "typeName": BalanceOf<T>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": [
                        Minted to the pool.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Event` enum of this pallet
              ]
            }
          }
          {
            "id": 335
            "type": {
              "path": [
                pallet_gear_voucher
                pallet
                Event
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": VoucherIssued
                      "fields": [
                        {
                          "name": owner
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": [
                            Account id of owner and manager of the voucher.
                          ]
                        }
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": [
                            Account id of user eligible to use the voucher.
                          ]
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": [
                            Voucher identifier.
                          ]
                        }
                      ]
                      "index": 0
                      "docs": [
                        Voucher has been issued.
                      ]
                    }
                    {
                      "name": VoucherRevoked
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": [
                            Account id of the user whose voucher was revoked.
                          ]
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": [
                            Voucher identifier.
                          ]
                        }
                      ]
                      "index": 1
                      "docs": [
                        Voucher has been revoked by owner.
                        
                        "NOTE": currently means only refunded.
                      ]
                    }
                    {
                      "name": VoucherUpdated
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": [
                            Account id of user whose voucher was updated.
                          ]
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": [
                            Voucher identifier.
                          ]
                        }
                        {
                          "name": new_owner
                          "type": 274
                          "typeName": Option<AccountIdOf<T>>
                          "docs": [
                            Optional field defining was the owner changed during update.
                          ]
                        }
                      ]
                      "index": 2
                      "docs": [
                        Voucher has been updated.
                      ]
                    }
                    {
                      "name": VoucherDeclined
                      "fields": [
                        {
                          "name": spender
                          "type": 0
                          "typeName": AccountIdOf<T>
                          "docs": [
                            Account id of user who declined its own voucher.
                          ]
                        }
                        {
                          "name": voucher_id
                          "type": 272
                          "typeName": VoucherId
                          "docs": [
                            Voucher identifier.
                          ]
                        }
                      ]
                      "index": 3
                      "docs": [
                        Voucher has been declined (set to expired state).
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Pallet Gear Voucher event.
              ]
            }
          }
          {
            "id": 336
            "type": {
              "path": [
                frame_system
                Phase
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ApplyExtrinsic
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Finalization
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Initialization
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 337
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 137
                }
              }
              "docs": []
            }
          }
          {
            "id": 338
            "type": {
              "path": [
                frame_system
                LastRuntimeUpgradeInfo
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": spec_version
                      "type": 74
                      "typeName": "codec"::Compact<u32>
                      "docs": []
                    }
                    {
                      "name": spec_name
                      "type": 339
                      "typeName": "sp_runtime"::RuntimeString
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 339
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": Str
              }
              "docs": []
            }
          }
          {
            "id": 340
            "type": {
              "path": [
                frame_system
                limits
                BlockWeights
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": base_block
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": max_block
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": per_class
                      "type": 341
                      "typeName": PerDispatchClass<WeightsPerClass>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 341
            "type": {
              "path": [
                frame_support
                dispatch
                PerDispatchClass
              ]
              "params": [
                {
                  "name": T
                  "type": 342
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": normal
                      "type": 342
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": operational
                      "type": 342
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": mandatory
                      "type": 342
                      "typeName": T
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 342
            "type": {
              "path": [
                frame_system
                limits
                WeightsPerClass
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": base_extrinsic
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": max_extrinsic
                      "type": 288
                      "typeName": Option<Weight>
                      "docs": []
                    }
                    {
                      "name": max_total
                      "type": 288
                      "typeName": Option<Weight>
                      "docs": []
                    }
                    {
                      "name": reserved
                      "type": 288
                      "typeName": Option<Weight>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 343
            "type": {
              "path": [
                frame_system
                limits
                BlockLength
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": max
                      "type": 344
                      "typeName": PerDispatchClass<u32>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 344
            "type": {
              "path": [
                frame_support
                dispatch
                PerDispatchClass
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": normal
                      "type": 4
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": operational
                      "type": 4
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": mandatory
                      "type": 4
                      "typeName": T
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 345
            "type": {
              "path": [
                sp_weights
                RuntimeDbWeight
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": read
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                    {
                      "name": write
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 346
            "type": {
              "path": [
                sp_version
                RuntimeVersion
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": spec_name
                      "type": 339
                      "typeName": RuntimeString
                      "docs": []
                    }
                    {
                      "name": impl_name
                      "type": 339
                      "typeName": RuntimeString
                      "docs": []
                    }
                    {
                      "name": authoring_version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": spec_version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": impl_version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": apis
                      "type": 347
                      "typeName": ApisVec
                      "docs": []
                    }
                    {
                      "name": transaction_version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": state_version
                      "type": 2
                      "typeName": u8
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 347
            "type": {
              "path": [
                Cow
              ]
              "params": [
                {
                  "name": T
                  "type": 348
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 348
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 348
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 349
                }
              }
              "docs": []
            }
          }
          {
            "id": 349
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  152
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 350
            "type": {
              "path": [
                frame_system
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InvalidSpecName
                      "fields": []
                      "index": 0
                      "docs": [
                        The name of specification does not match between the current runtime
                        and the new runtime.
                      ]
                    }
                    {
                      "name": SpecVersionNeedsToIncrease
                      "fields": []
                      "index": 1
                      "docs": [
                        The specification version is not allowed to decrease between the current runtime
                        and the new runtime.
                      ]
                    }
                    {
                      "name": FailedToExtractRuntimeVersion
                      "fields": []
                      "index": 2
                      "docs": [
                        Failed to extract the runtime version from the new runtime.
                        
                        Either calling `Core_version` or decoding `RuntimeVersion` failed.
                      ]
                    }
                    {
                      "name": NonDefaultComposite
                      "fields": []
                      "index": 3
                      "docs": [
                        Suicide called when the account has non-default composite data.
                      ]
                    }
                    {
                      "name": NonZeroRefCount
                      "fields": []
                      "index": 4
                      "docs": [
                        There is a non-zero reference count preventing the account from being purged.
                      ]
                    }
                    {
                      "name": CallFiltered
                      "fields": []
                      "index": 5
                      "docs": [
                        The origin filter prevent the call to be dispatched.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error for the System pallet
              ]
            }
          }
          {
            "id": 351
            "type": {
              "path": [
                bounded_collections
                weak_bounded_vec
                WeakBoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 115
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 352
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 352
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 115
                }
              }
              "docs": []
            }
          }
          {
            "id": 353
            "type": {
              "path": [
                bounded_collections
                weak_bounded_vec
                WeakBoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 354
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 355
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 354
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  75
                  11
                ]
              }
              "docs": []
            }
          }
          {
            "id": 355
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 354
                }
              }
              "docs": []
            }
          }
          {
            "id": 356
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 1
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 357
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 357
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 1
                }
              }
              "docs": []
            }
          }
          {
            "id": 358
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 359
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 359
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 359
            "type": {
              "path": [
                sp_consensus_babe
                digests
                PreDigest
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Primary
                      "fields": [
                        {
                          "name": null
                          "type": 360
                          "typeName": PrimaryPreDigest
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": SecondaryPlain
                      "fields": [
                        {
                          "name": null
                          "type": 362
                          "typeName": SecondaryPlainPreDigest
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": SecondaryVRF
                      "fields": [
                        {
                          "name": null
                          "type": 363
                          "typeName": SecondaryVRFPreDigest
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 360
            "type": {
              "path": [
                sp_consensus_babe
                digests
                PrimaryPreDigest
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": authority_index
                      "type": 4
                      "typeName": "super"::AuthorityIndex
                      "docs": []
                    }
                    {
                      "name": slot
                      "type": 76
                      "typeName": Slot
                      "docs": []
                    }
                    {
                      "name": vrf_signature
                      "type": 361
                      "typeName": VrfSignature
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 361
            "type": {
              "path": [
                sp_core
                sr25519
                vrf
                VrfSignature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": output
                      "type": 1
                      "typeName": VrfOutput
                      "docs": []
                    }
                    {
                      "name": proof
                      "type": 88
                      "typeName": VrfProof
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 362
            "type": {
              "path": [
                sp_consensus_babe
                digests
                SecondaryPlainPreDigest
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": authority_index
                      "type": 4
                      "typeName": "super"::AuthorityIndex
                      "docs": []
                    }
                    {
                      "name": slot
                      "type": 76
                      "typeName": Slot
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 363
            "type": {
              "path": [
                sp_consensus_babe
                digests
                SecondaryVRFPreDigest
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": authority_index
                      "type": 4
                      "typeName": "super"::AuthorityIndex
                      "docs": []
                    }
                    {
                      "name": slot
                      "type": 76
                      "typeName": Slot
                      "docs": []
                    }
                    {
                      "name": vrf_signature
                      "type": 361
                      "typeName": VrfSignature
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 364
            "type": {
              "path": [
                sp_consensus_babe
                BabeEpochConfiguration
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": c
                      "type": 79
                      "typeName": (u64, u64)
                      "docs": []
                    }
                    {
                      "name": allowed_slots
                      "type": 80
                      "typeName": AllowedSlots
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 365
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 366
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 367
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 366
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  11
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 367
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 366
                }
              }
              "docs": []
            }
          }
          {
            "id": 368
            "type": {
              "path": [
                pallet_babe
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InvalidEquivocationProof
                      "fields": []
                      "index": 0
                      "docs": [
                        An equivocation proof provided as part of an equivocation report is invalid.
                      ]
                    }
                    {
                      "name": InvalidKeyOwnershipProof
                      "fields": []
                      "index": 1
                      "docs": [
                        A key ownership proof provided as part of an equivocation report is invalid.
                      ]
                    }
                    {
                      "name": DuplicateOffenceReport
                      "fields": []
                      "index": 2
                      "docs": [
                        A given equivocation report is valid but already previously reported.
                      ]
                    }
                    {
                      "name": InvalidConfiguration
                      "fields": []
                      "index": 3
                      "docs": [
                        Submitted configuration is invalid.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 369
            "type": {
              "path": [
                pallet_grandpa
                StoredState
              ]
              "params": [
                {
                  "name": N
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Live
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": PendingPause
                      "fields": [
                        {
                          "name": scheduled_at
                          "type": 4
                          "typeName": N
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": N
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Paused
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": PendingResume
                      "fields": [
                        {
                          "name": scheduled_at
                          "type": 4
                          "typeName": N
                          "docs": []
                        }
                        {
                          "name": delay
                          "type": 4
                          "typeName": N
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 370
            "type": {
              "path": [
                pallet_grandpa
                StoredPendingChange
              ]
              "params": [
                {
                  "name": N
                  "type": 4
                }
                {
                  "name": Limit
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": scheduled_at
                      "type": 4
                      "typeName": N
                      "docs": []
                    }
                    {
                      "name": delay
                      "type": 4
                      "typeName": N
                      "docs": []
                    }
                    {
                      "name": next_authorities
                      "type": 371
                      "typeName": BoundedAuthorityList<Limit>
                      "docs": []
                    }
                    {
                      "name": forced
                      "type": 117
                      "typeName": Option<N>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 371
            "type": {
              "path": [
                bounded_collections
                weak_bounded_vec
                WeakBoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 32
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 31
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 372
            "type": {
              "path": [
                pallet_grandpa
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PauseFailed
                      "fields": []
                      "index": 0
                      "docs": [
                        Attempt to signal GRANDPA pause when the authority set isn't live
                        (either paused or already pending pause).
                      ]
                    }
                    {
                      "name": ResumeFailed
                      "fields": []
                      "index": 1
                      "docs": [
                        Attempt to signal GRANDPA resume when the authority set isn't paused
                        (either live or already pending resume).
                      ]
                    }
                    {
                      "name": ChangePending
                      "fields": []
                      "index": 2
                      "docs": [
                        Attempt to signal GRANDPA change with one already pending.
                      ]
                    }
                    {
                      "name": TooSoon
                      "fields": []
                      "index": 3
                      "docs": [
                        Cannot signal forced change so soon after last.
                      ]
                    }
                    {
                      "name": InvalidKeyOwnershipProof
                      "fields": []
                      "index": 4
                      "docs": [
                        A key ownership proof provided as part of an equivocation report is invalid.
                      ]
                    }
                    {
                      "name": InvalidEquivocationProof
                      "fields": []
                      "index": 5
                      "docs": [
                        An equivocation proof provided as part of an equivocation report is invalid.
                      ]
                    }
                    {
                      "name": DuplicateOffenceReport
                      "fields": []
                      "index": 6
                      "docs": [
                        A given equivocation report is valid but already previously reported.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 373
            "type": {
              "path": [
                bounded_collections
                weak_bounded_vec
                WeakBoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 374
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 376
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 374
            "type": {
              "path": [
                pallet_balances
                types
                BalanceLock
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 152
                      "typeName": LockIdentifier
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": reasons
                      "type": 375
                      "typeName": Reasons
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 375
            "type": {
              "path": [
                pallet_balances
                types
                Reasons
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Fee
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Misc
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": All
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 376
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 374
                }
              }
              "docs": []
            }
          }
          {
            "id": 377
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 378
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 379
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 378
            "type": {
              "path": [
                pallet_balances
                types
                ReserveData
              ]
              "params": [
                {
                  "name": ReserveIdentifier
                  "type": 152
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 152
                      "typeName": ReserveIdentifier
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 379
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 378
                }
              }
              "docs": []
            }
          }
          {
            "id": 380
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 381
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 384
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 381
            "type": {
              "path": [
                pallet_balances
                types
                IdAmount
              ]
              "params": [
                {
                  "name": Id
                  "type": 382
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 382
                      "typeName": Id
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 382
            "type": {
              "path": [
                vara_runtime
                RuntimeHoldReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Preimage
                      "fields": [
                        {
                          "name": null
                          "type": 383
                          "typeName": "pallet_preimage"::HoldReason
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 383
            "type": {
              "path": [
                pallet_preimage
                pallet
                HoldReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Preimage
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 384
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 381
                }
              }
              "docs": []
            }
          }
          {
            "id": 385
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 386
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 389
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 386
            "type": {
              "path": [
                pallet_balances
                types
                IdAmount
              ]
              "params": [
                {
                  "name": Id
                  "type": 387
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 387
                      "typeName": Id
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 387
            "type": {
              "path": [
                vara_runtime
                RuntimeFreezeReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NominationPools
                      "fields": [
                        {
                          "name": null
                          "type": 388
                          "typeName": "pallet_nomination_pools"::FreezeReason
                          "docs": []
                        }
                      ]
                      "index": 31
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 388
            "type": {
              "path": [
                pallet_nomination_pools
                pallet
                FreezeReason
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PoolMinBalance
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 389
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 386
                }
              }
              "docs": []
            }
          }
          {
            "id": 390
            "type": {
              "path": [
                pallet_balances
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": VestingBalance
                      "fields": []
                      "index": 0
                      "docs": [
                        Vesting balance too high to send value.
                      ]
                    }
                    {
                      "name": LiquidityRestrictions
                      "fields": []
                      "index": 1
                      "docs": [
                        Account liquidity restrictions prevent withdrawal.
                      ]
                    }
                    {
                      "name": InsufficientBalance
                      "fields": []
                      "index": 2
                      "docs": [
                        Balance too low to send value.
                      ]
                    }
                    {
                      "name": ExistentialDeposit
                      "fields": []
                      "index": 3
                      "docs": [
                        Value too low to create account due to existential deposit.
                      ]
                    }
                    {
                      "name": Expendability
                      "fields": []
                      "index": 4
                      "docs": [
                        Transfer/payment would kill account.
                      ]
                    }
                    {
                      "name": ExistingVestingSchedule
                      "fields": []
                      "index": 5
                      "docs": [
                        A vesting schedule already exists for this account.
                      ]
                    }
                    {
                      "name": DeadAccount
                      "fields": []
                      "index": 6
                      "docs": [
                        Beneficiary account must pre-exist.
                      ]
                    }
                    {
                      "name": TooManyReserves
                      "fields": []
                      "index": 7
                      "docs": [
                        Number of named reserves exceed `MaxReserves`.
                      ]
                    }
                    {
                      "name": TooManyHolds
                      "fields": []
                      "index": 8
                      "docs": [
                        Number of holds exceed `MaxHolds`.
                      ]
                    }
                    {
                      "name": TooManyFreezes
                      "fields": []
                      "index": 9
                      "docs": [
                        Number of freezes exceed `MaxFreezes`.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 391
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 99
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 392
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 392
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 99
                }
              }
              "docs": []
            }
          }
          {
            "id": 393
            "type": {
              "path": [
                pallet_vesting
                Releases
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": V0
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": V1
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 394
            "type": {
              "path": [
                pallet_vesting
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotVesting
                      "fields": []
                      "index": 0
                      "docs": [
                        The account given is not vesting.
                      ]
                    }
                    {
                      "name": AtMaxVestingSchedules
                      "fields": []
                      "index": 1
                      "docs": [
                        The account already has `MaxVestingSchedules` count of schedules and thus
                        cannot add another one. Consider merging existing schedules in order to add another.
                      ]
                    }
                    {
                      "name": AmountLow
                      "fields": []
                      "index": 2
                      "docs": [
                        Amount being transferred is too low to create a vesting schedule.
                      ]
                    }
                    {
                      "name": ScheduleIndexOutOfBounds
                      "fields": []
                      "index": 3
                      "docs": [
                        An index was out of bounds of the vesting schedules.
                      ]
                    }
                    {
                      "name": InvalidScheduleParams
                      "fields": []
                      "index": 4
                      "docs": [
                        Failed to create a new schedule because some parameter was invalid.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error for the vesting pallet.
              ]
            }
          }
          {
            "id": 395
            "type": {
              "path": [
                sp_arithmetic
                fixed_point
                FixedU128
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 6
                      "typeName": u128
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 396
            "type": {
              "path": [
                pallet_transaction_payment
                Releases
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": V1Ancient
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": V2
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 397
            "type": {
              "path": [
                pallet_bags_list
                list
                Node
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 0
                      "typeName": "T"::AccountId
                      "docs": []
                    }
                    {
                      "name": prev
                      "type": 274
                      "typeName": Option<"T"::AccountId>
                      "docs": []
                    }
                    {
                      "name": next
                      "type": 274
                      "typeName": Option<"T"::AccountId>
                      "docs": []
                    }
                    {
                      "name": bag_upper
                      "type": 11
                      "typeName": "T"::Score
                      "docs": []
                    }
                    {
                      "name": score
                      "type": 11
                      "typeName": "T"::Score
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 398
            "type": {
              "path": [
                pallet_bags_list
                list
                Bag
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": head
                      "type": 274
                      "typeName": Option<"T"::AccountId>
                      "docs": []
                    }
                    {
                      "name": tail
                      "type": 274
                      "typeName": Option<"T"::AccountId>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 399
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 11
                }
              }
              "docs": []
            }
          }
          {
            "id": 400
            "type": {
              "path": [
                pallet_bags_list
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": List
                      "fields": [
                        {
                          "name": null
                          "type": 401
                          "typeName": ListError
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": [
                        A error in the list interface implementation.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 401
            "type": {
              "path": [
                pallet_bags_list
                list
                ListError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Duplicate
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": NotHeavier
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": NotInSameBag
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": NodeNotFound
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 402
            "type": {
              "path": [
                bounded_collections
                weak_bounded_vec
                WeakBoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 41
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 403
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 403
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 41
                }
              }
              "docs": []
            }
          }
          {
            "id": 404
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  0
                ]
              }
              "docs": []
            }
          }
          {
            "id": 405
            "type": {
              "path": [
                pallet_im_online
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InvalidKey
                      "fields": []
                      "index": 0
                      "docs": [
                        Non existent public key.
                      ]
                    }
                    {
                      "name": DuplicatedHeartbeat
                      "fields": []
                      "index": 1
                      "docs": [
                        Duplicated heartbeat.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 406
            "type": {
              "path": [
                pallet_staking
                StakingLedger
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": stash
                      "type": 0
                      "typeName": "T"::AccountId
                      "docs": []
                    }
                    {
                      "name": total
                      "type": 46
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": active
                      "type": 46
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": unlocking
                      "type": 407
                      "typeName": BoundedVec<UnlockChunk<BalanceOf<T>>, "T"::MaxUnlockingChunks>
                      "docs": []
                    }
                    {
                      "name": claimed_rewards
                      "type": 410
                      "typeName": BoundedVec<EraIndex, "T"::HistoryDepth>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 407
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 408
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 409
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 408
            "type": {
              "path": [
                pallet_staking
                UnlockChunk
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": value
                      "type": 46
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": era
                      "type": 74
                      "typeName": EraIndex
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 409
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 408
                }
              }
              "docs": []
            }
          }
          {
            "id": 410
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 108
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 411
            "type": {
              "path": [
                pallet_staking
                Nominations
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": targets
                      "type": 412
                      "typeName": BoundedVec<"T"::AccountId, MaxNominationsOf<T>>
                      "docs": []
                    }
                    {
                      "name": submitted_in
                      "type": 4
                      "typeName": EraIndex
                      "docs": []
                    }
                    {
                      "name": suppressed
                      "type": 54
                      "typeName": bool
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 412
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 97
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 413
            "type": {
              "path": [
                pallet_staking
                ActiveEraInfo
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": index
                      "type": 4
                      "typeName": EraIndex
                      "docs": []
                    }
                    {
                      "name": start
                      "type": 266
                      "typeName": Option<u64>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 414
            "type": {
              "path": [
                pallet_staking
                EraRewardPoints
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": total
                      "type": 4
                      "typeName": RewardPoint
                      "docs": []
                    }
                    {
                      "name": individual
                      "type": 415
                      "typeName": BTreeMap<AccountId, RewardPoint>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 415
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 0
                }
                {
                  "name": V
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 416
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 416
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 417
                }
              }
              "docs": []
            }
          }
          {
            "id": 417
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 418
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 419
                }
              }
              "docs": []
            }
          }
          {
            "id": 419
            "type": {
              "path": [
                pallet_staking
                UnappliedSlash
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": validator
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": own
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": others
                      "type": 247
                      "typeName": Vec<(AccountId, Balance)>
                      "docs": []
                    }
                    {
                      "name": reporters
                      "type": 97
                      "typeName": Vec<AccountId>
                      "docs": []
                    }
                    {
                      "name": payout
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 420
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  51
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 421
            "type": {
              "path": [
                pallet_staking
                slashing
                SlashingSpans
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": span_index
                      "type": 4
                      "typeName": SpanIndex
                      "docs": []
                    }
                    {
                      "name": last_start
                      "type": 4
                      "typeName": EraIndex
                      "docs": []
                    }
                    {
                      "name": last_nonzero_slash
                      "type": 4
                      "typeName": EraIndex
                      "docs": []
                    }
                    {
                      "name": prior
                      "type": 108
                      "typeName": Vec<EraIndex>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 422
            "type": {
              "path": [
                pallet_staking
                slashing
                SpanRecord
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": slashed
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": paid_out
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 423
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 424
                }
              }
              "docs": []
            }
          }
          {
            "id": 424
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  54
                ]
              }
              "docs": []
            }
          }
          {
            "id": 425
            "type": {
              "path": [
                pallet_staking
                pallet
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotController
                      "fields": []
                      "index": 0
                      "docs": [
                        Not a controller account.
                      ]
                    }
                    {
                      "name": NotStash
                      "fields": []
                      "index": 1
                      "docs": [
                        Not a stash account.
                      ]
                    }
                    {
                      "name": AlreadyBonded
                      "fields": []
                      "index": 2
                      "docs": [
                        Stash is already bonded.
                      ]
                    }
                    {
                      "name": AlreadyPaired
                      "fields": []
                      "index": 3
                      "docs": [
                        Controller is already paired.
                      ]
                    }
                    {
                      "name": EmptyTargets
                      "fields": []
                      "index": 4
                      "docs": [
                        Targets cannot be empty.
                      ]
                    }
                    {
                      "name": DuplicateIndex
                      "fields": []
                      "index": 5
                      "docs": [
                        Duplicate index.
                      ]
                    }
                    {
                      "name": InvalidSlashIndex
                      "fields": []
                      "index": 6
                      "docs": [
                        Slash record index out of bounds.
                      ]
                    }
                    {
                      "name": InsufficientBond
                      "fields": []
                      "index": 7
                      "docs": [
                        Cannot have a validator or nominator role, with value less than the minimum defined by
                        governance (see `MinValidatorBond` and `MinNominatorBond`). If unbonding is the
                        intention, `chill` first to remove one's role as validator/nominator.
                      ]
                    }
                    {
                      "name": NoMoreChunks
                      "fields": []
                      "index": 8
                      "docs": [
                        Can not schedule more unlock chunks.
                      ]
                    }
                    {
                      "name": NoUnlockChunk
                      "fields": []
                      "index": 9
                      "docs": [
                        Can not rebond without unlocking chunks.
                      ]
                    }
                    {
                      "name": FundedTarget
                      "fields": []
                      "index": 10
                      "docs": [
                        Attempting to target a stash that still has funds.
                      ]
                    }
                    {
                      "name": InvalidEraToReward
                      "fields": []
                      "index": 11
                      "docs": [
                        Invalid era to reward.
                      ]
                    }
                    {
                      "name": InvalidNumberOfNominations
                      "fields": []
                      "index": 12
                      "docs": [
                        Invalid number of nominations.
                      ]
                    }
                    {
                      "name": NotSortedAndUnique
                      "fields": []
                      "index": 13
                      "docs": [
                        Items are not sorted and unique.
                      ]
                    }
                    {
                      "name": AlreadyClaimed
                      "fields": []
                      "index": 14
                      "docs": [
                        Rewards for this era have already been claimed for this validator.
                      ]
                    }
                    {
                      "name": IncorrectHistoryDepth
                      "fields": []
                      "index": 15
                      "docs": [
                        Incorrect previous history depth input provided.
                      ]
                    }
                    {
                      "name": IncorrectSlashingSpans
                      "fields": []
                      "index": 16
                      "docs": [
                        Incorrect number of slashing spans provided.
                      ]
                    }
                    {
                      "name": BadState
                      "fields": []
                      "index": 17
                      "docs": [
                        Internal state has become somehow corrupted and the operation cannot continue.
                      ]
                    }
                    {
                      "name": TooManyTargets
                      "fields": []
                      "index": 18
                      "docs": [
                        Too many nomination targets supplied.
                      ]
                    }
                    {
                      "name": BadTarget
                      "fields": []
                      "index": 19
                      "docs": [
                        A nomination target was supplied that was blocked or otherwise not a validator.
                      ]
                    }
                    {
                      "name": CannotChillOther
                      "fields": []
                      "index": 20
                      "docs": [
                        The user has enough bond and thus cannot be chilled forcefully by an external person.
                      ]
                    }
                    {
                      "name": TooManyNominators
                      "fields": []
                      "index": 21
                      "docs": [
                        There are too many nominators in the system. Governance needs to adjust the staking
                        settings to keep things safe for the runtime.
                      ]
                    }
                    {
                      "name": TooManyValidators
                      "fields": []
                      "index": 22
                      "docs": [
                        There are too many validator candidates in the system. Governance needs to adjust the
                        staking settings to keep things safe for the runtime.
                      ]
                    }
                    {
                      "name": CommissionTooLow
                      "fields": []
                      "index": 23
                      "docs": [
                        Commission is too low. Must be at least `MinCommission`.
                      ]
                    }
                    {
                      "name": BoundNotMet
                      "fields": []
                      "index": 24
                      "docs": [
                        Some bound is not met.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 426
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 427
                }
              }
              "docs": []
            }
          }
          {
            "id": 427
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  114
                ]
              }
              "docs": []
            }
          }
          {
            "id": 428
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  429
                  13
                ]
              }
              "docs": []
            }
          }
          {
            "id": 429
            "type": {
              "path": [
                sp_core
                crypto
                KeyTypeId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 17
                      "typeName": [u8; 4]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 430
            "type": {
              "path": [
                pallet_session
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InvalidProof
                      "fields": []
                      "index": 0
                      "docs": [
                        Invalid ownership proof.
                      ]
                    }
                    {
                      "name": NoAssociatedValidatorId
                      "fields": []
                      "index": 1
                      "docs": [
                        No associated validator ID for account.
                      ]
                    }
                    {
                      "name": DuplicatedKey
                      "fields": []
                      "index": 2
                      "docs": [
                        Registered duplicate key.
                      ]
                    }
                    {
                      "name": NoKeys
                      "fields": []
                      "index": 3
                      "docs": [
                        No keys are associated with this account.
                      ]
                    }
                    {
                      "name": NoAccount
                      "fields": []
                      "index": 4
                      "docs": [
                        Key setting account is not live, so it's impossible to associate keys.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error for the session pallet.
              ]
            }
          }
          {
            "id": 431
            "type": {
              "path": [
                pallet_treasury
                Proposal
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": proposer
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": beneficiary
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": bond
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 432
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 108
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 433
            "type": {
              "path": [
                pallet_treasury
                SpendStatus
              ]
              "params": [
                {
                  "name": AssetKind
                  "type": 58
                }
                {
                  "name": AssetBalance
                  "type": 6
                }
                {
                  "name": Beneficiary
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": PaymentId
                  "type": 58
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": asset_kind
                      "type": 58
                      "typeName": AssetKind
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": AssetBalance
                      "docs": []
                    }
                    {
                      "name": beneficiary
                      "type": 0
                      "typeName": Beneficiary
                      "docs": []
                    }
                    {
                      "name": valid_from
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": expire_at
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": status
                      "type": 434
                      "typeName": PaymentState<PaymentId>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 434
            "type": {
              "path": [
                pallet_treasury
                PaymentState
              ]
              "params": [
                {
                  "name": Id
                  "type": 58
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Pending
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Attempted
                      "fields": [
                        {
                          "name": id
                          "type": 58
                          "typeName": Id
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Failed
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 435
            "type": {
              "path": [
                sp_arithmetic
                per_things
                Permill
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 436
            "type": {
              "path": [
                frame_support
                PalletId
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 152
                      "typeName": [u8; 8]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 437
            "type": {
              "path": [
                pallet_treasury
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InsufficientProposersBalance
                      "fields": []
                      "index": 0
                      "docs": [
                        Proposer's balance is too low.
                      ]
                    }
                    {
                      "name": InvalidIndex
                      "fields": []
                      "index": 1
                      "docs": [
                        No proposal, bounty or spend at that index.
                      ]
                    }
                    {
                      "name": TooManyApprovals
                      "fields": []
                      "index": 2
                      "docs": [
                        Too many approvals in the queue.
                      ]
                    }
                    {
                      "name": InsufficientPermission
                      "fields": []
                      "index": 3
                      "docs": [
                        The spend origin is valid but the amount it is allowed to spend is lower than the
                        amount to be spent.
                      ]
                    }
                    {
                      "name": ProposalNotApproved
                      "fields": []
                      "index": 4
                      "docs": [
                        Proposal has not been approved.
                      ]
                    }
                    {
                      "name": FailedToConvertBalance
                      "fields": []
                      "index": 5
                      "docs": [
                        The balance of the asset kind is not convertible to the balance of the native asset.
                      ]
                    }
                    {
                      "name": SpendExpired
                      "fields": []
                      "index": 6
                      "docs": [
                        The spend has expired and cannot be claimed.
                      ]
                    }
                    {
                      "name": EarlyPayout
                      "fields": []
                      "index": 7
                      "docs": [
                        The spend is not yet eligible for payout.
                      ]
                    }
                    {
                      "name": AlreadyAttempted
                      "fields": []
                      "index": 8
                      "docs": [
                        The payment has already been attempted.
                      ]
                    }
                    {
                      "name": PayoutError
                      "fields": []
                      "index": 9
                      "docs": [
                        There was some issue with the mechanism of payment.
                      ]
                    }
                    {
                      "name": NotAttempted
                      "fields": []
                      "index": 10
                      "docs": [
                        The payout was not yet attempted/claimed.
                      ]
                    }
                    {
                      "name": Inconclusive
                      "fields": []
                      "index": 11
                      "docs": [
                        The payment has neither failed nor succeeded yet.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error for the treasury pallet.
              ]
            }
          }
          {
            "id": 438
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  12
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 439
            "type": {
              "path": [
                pallet_utility
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": TooManyCalls
                      "fields": []
                      "index": 0
                      "docs": [
                        Too many calls batched.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 440
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  63
                ]
              }
              "docs": []
            }
          }
          {
            "id": 441
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                Voting
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": PollIndex
                  "type": 4
                }
                {
                  "name": MaxVotes
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Casting
                      "fields": [
                        {
                          "name": null
                          "type": 442
                          "typeName": Casting<Balance, BlockNumber, PollIndex, MaxVotes>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Delegating
                      "fields": [
                        {
                          "name": null
                          "type": 448
                          "typeName": Delegating<Balance, AccountId, BlockNumber>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 442
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                Casting
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": PollIndex
                  "type": 4
                }
                {
                  "name": MaxVotes
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": votes
                      "type": 443
                      "typeName": BoundedVec<(PollIndex, AccountVote<Balance>), MaxVotes>
                      "docs": []
                    }
                    {
                      "name": delegations
                      "type": 446
                      "typeName": Delegations<Balance>
                      "docs": []
                    }
                    {
                      "name": prior
                      "type": 447
                      "typeName": PriorLock<BlockNumber, Balance>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 443
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 444
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 445
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 444
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  125
                ]
              }
              "docs": []
            }
          }
          {
            "id": 445
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 444
                }
              }
              "docs": []
            }
          }
          {
            "id": 446
            "type": {
              "path": [
                pallet_conviction_voting
                types
                Delegations
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": votes
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": capital
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 447
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                PriorLock
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": null
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 448
            "type": {
              "path": [
                pallet_conviction_voting
                vote
                Delegating
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": balance
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": target
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": conviction
                      "type": 127
                      "typeName": Conviction
                      "docs": []
                    }
                    {
                      "name": delegations
                      "type": 446
                      "typeName": Delegations<Balance>
                      "docs": []
                    }
                    {
                      "name": prior
                      "type": 447
                      "typeName": PriorLock<BlockNumber, Balance>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 449
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 450
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 451
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 450
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  63
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 451
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 450
                }
              }
              "docs": []
            }
          }
          {
            "id": 452
            "type": {
              "path": [
                pallet_conviction_voting
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotOngoing
                      "fields": []
                      "index": 0
                      "docs": [
                        Poll is not ongoing.
                      ]
                    }
                    {
                      "name": NotVoter
                      "fields": []
                      "index": 1
                      "docs": [
                        The given account did not vote on the poll.
                      ]
                    }
                    {
                      "name": NoPermission
                      "fields": []
                      "index": 2
                      "docs": [
                        The actor has no permission to conduct the action.
                      ]
                    }
                    {
                      "name": NoPermissionYet
                      "fields": []
                      "index": 3
                      "docs": [
                        The actor has no permission to conduct the action right now but will do in the future.
                      ]
                    }
                    {
                      "name": AlreadyDelegating
                      "fields": []
                      "index": 4
                      "docs": [
                        The account is already delegating.
                      ]
                    }
                    {
                      "name": AlreadyVoting
                      "fields": []
                      "index": 5
                      "docs": [
                        The account currently has votes attached to it and the operation cannot succeed until
                        these are removed, either through `unvote` or `reap_vote`.
                      ]
                    }
                    {
                      "name": InsufficientFunds
                      "fields": []
                      "index": 6
                      "docs": [
                        Too high a balance was provided that the account cannot afford.
                      ]
                    }
                    {
                      "name": NotDelegating
                      "fields": []
                      "index": 7
                      "docs": [
                        The account is not currently delegating.
                      ]
                    }
                    {
                      "name": Nonsense
                      "fields": []
                      "index": 8
                      "docs": [
                        Delegation to oneself makes no sense.
                      ]
                    }
                    {
                      "name": MaxVotesReached
                      "fields": []
                      "index": 9
                      "docs": [
                        Maximum number of votes reached.
                      ]
                    }
                    {
                      "name": ClassNeeded
                      "fields": []
                      "index": 10
                      "docs": [
                        The class must be supplied since it is not easily determinable from the state.
                      ]
                    }
                    {
                      "name": BadClass
                      "fields": []
                      "index": 11
                      "docs": [
                        The class ID supplied is invalid.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 453
            "type": {
              "path": [
                pallet_referenda
                types
                ReferendumInfo
              ]
              "params": [
                {
                  "name": TrackId
                  "type": 63
                }
                {
                  "name": RuntimeOrigin
                  "type": 120
                }
                {
                  "name": Moment
                  "type": 4
                }
                {
                  "name": Call
                  "type": 64
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Tally
                  "type": 280
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": ScheduleAddress
                  "type": 137
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Ongoing
                      "fields": [
                        {
                          "name": null
                          "type": 454
                          "typeName": ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,nAccountId, ScheduleAddress,>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Approved
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Rejected
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Cancelled
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": TimedOut
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Killed
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 454
            "type": {
              "path": [
                pallet_referenda
                types
                ReferendumStatus
              ]
              "params": [
                {
                  "name": TrackId
                  "type": 63
                }
                {
                  "name": RuntimeOrigin
                  "type": 120
                }
                {
                  "name": Moment
                  "type": 4
                }
                {
                  "name": Call
                  "type": 64
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Tally
                  "type": 280
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": ScheduleAddress
                  "type": 137
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": track
                      "type": 63
                      "typeName": TrackId
                      "docs": []
                    }
                    {
                      "name": origin
                      "type": 120
                      "typeName": RuntimeOrigin
                      "docs": []
                    }
                    {
                      "name": proposal
                      "type": 64
                      "typeName": Call
                      "docs": []
                    }
                    {
                      "name": enactment
                      "type": 130
                      "typeName": DispatchTime<Moment>
                      "docs": []
                    }
                    {
                      "name": submitted
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": submission_deposit
                      "type": 455
                      "typeName": Deposit<AccountId, Balance>
                      "docs": []
                    }
                    {
                      "name": decision_deposit
                      "type": 456
                      "typeName": Option<Deposit<AccountId, Balance>>
                      "docs": []
                    }
                    {
                      "name": deciding
                      "type": 457
                      "typeName": Option<DecidingStatus<Moment>>
                      "docs": []
                    }
                    {
                      "name": tally
                      "type": 280
                      "typeName": Tally
                      "docs": []
                    }
                    {
                      "name": in_queue
                      "type": 54
                      "typeName": bool
                      "docs": []
                    }
                    {
                      "name": alarm
                      "type": 459
                      "typeName": Option<(Moment, ScheduleAddress)>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 455
            "type": {
              "path": [
                pallet_referenda
                types
                Deposit
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": who
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": amount
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 456
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 455
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 455
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 457
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 458
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 458
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 458
            "type": {
              "path": [
                pallet_referenda
                types
                DecidingStatus
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": since
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                    {
                      "name": confirming
                      "type": 117
                      "typeName": Option<BlockNumber>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 459
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 460
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 460
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 460
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  137
                ]
              }
              "docs": []
            }
          }
          {
            "id": 461
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 462
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 463
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 462
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 463
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 462
                }
              }
              "docs": []
            }
          }
          {
            "id": 464
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 465
                }
              }
              "docs": []
            }
          }
          {
            "id": 465
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  63
                  466
                ]
              }
              "docs": []
            }
          }
          {
            "id": 466
            "type": {
              "path": [
                pallet_referenda
                types
                TrackInfo
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Moment
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": name
                      "type": 339
                      "typeName": &'static str
                      "docs": []
                    }
                    {
                      "name": max_deciding
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": decision_deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": prepare_period
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": decision_period
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": confirm_period
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": min_enactment_period
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": min_approval
                      "type": 467
                      "typeName": Curve
                      "docs": []
                    }
                    {
                      "name": min_support
                      "type": 467
                      "typeName": Curve
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 467
            "type": {
              "path": [
                pallet_referenda
                types
                Curve
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": LinearDecreasing
                      "fields": [
                        {
                          "name": length
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": floor
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": ceil
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": SteppedDecreasing
                      "fields": [
                        {
                          "name": begin
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": end
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": step
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                        {
                          "name": period
                          "type": 51
                          "typeName": Perbill
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reciprocal
                      "fields": [
                        {
                          "name": factor
                          "type": 468
                          "typeName": FixedI64
                          "docs": []
                        }
                        {
                          "name": x_offset
                          "type": 468
                          "typeName": FixedI64
                          "docs": []
                        }
                        {
                          "name": y_offset
                          "type": 468
                          "typeName": FixedI64
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 468
            "type": {
              "path": [
                sp_arithmetic
                fixed_point
                FixedI64
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 469
                      "typeName": i64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 469
            "type": {
              "path": []
              "params": []
              "def": {
                "Primitive": I64
              }
              "docs": []
            }
          }
          {
            "id": 470
            "type": {
              "path": [
                pallet_referenda
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotOngoing
                      "fields": []
                      "index": 0
                      "docs": [
                        Referendum is not ongoing.
                      ]
                    }
                    {
                      "name": HasDeposit
                      "fields": []
                      "index": 1
                      "docs": [
                        Referendum's decision deposit is already paid.
                      ]
                    }
                    {
                      "name": BadTrack
                      "fields": []
                      "index": 2
                      "docs": [
                        The track identifier given was invalid.
                      ]
                    }
                    {
                      "name": Full
                      "fields": []
                      "index": 3
                      "docs": [
                        There are already a full complement of referenda in progress for this track.
                      ]
                    }
                    {
                      "name": QueueEmpty
                      "fields": []
                      "index": 4
                      "docs": [
                        The queue of the track is empty.
                      ]
                    }
                    {
                      "name": BadReferendum
                      "fields": []
                      "index": 5
                      "docs": [
                        The referendum index provided is invalid in this context.
                      ]
                    }
                    {
                      "name": NothingToDo
                      "fields": []
                      "index": 6
                      "docs": [
                        There was nothing to do in the advancement.
                      ]
                    }
                    {
                      "name": NoTrack
                      "fields": []
                      "index": 7
                      "docs": [
                        No track exists for the proposal origin.
                      ]
                    }
                    {
                      "name": Unfinished
                      "fields": []
                      "index": 8
                      "docs": [
                        Any deposit cannot be refunded until after the decision is over.
                      ]
                    }
                    {
                      "name": NoPermission
                      "fields": []
                      "index": 9
                      "docs": [
                        The deposit refunder is not the depositor.
                      ]
                    }
                    {
                      "name": NoDeposit
                      "fields": []
                      "index": 10
                      "docs": [
                        The deposit cannot be refunded since none was made.
                      ]
                    }
                    {
                      "name": BadStatus
                      "fields": []
                      "index": 11
                      "docs": [
                        The referendum status is invalid for this operation.
                      ]
                    }
                    {
                      "name": PreimageNotExist
                      "fields": []
                      "index": 12
                      "docs": [
                        The preimage does not exist.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 471
            "type": {
              "path": [
                pallet_ranked_collective
                MemberRecord
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": rank
                      "type": 63
                      "typeName": Rank
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 472
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  63
                  0
                ]
              }
              "docs": []
            }
          }
          {
            "id": 473
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  63
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 474
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 475
            "type": {
              "path": [
                pallet_ranked_collective
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": AlreadyMember
                      "fields": []
                      "index": 0
                      "docs": [
                        Account is already a member.
                      ]
                    }
                    {
                      "name": NotMember
                      "fields": []
                      "index": 1
                      "docs": [
                        Account is not a member.
                      ]
                    }
                    {
                      "name": NotPolling
                      "fields": []
                      "index": 2
                      "docs": [
                        The given poll index is unknown or has closed.
                      ]
                    }
                    {
                      "name": Ongoing
                      "fields": []
                      "index": 3
                      "docs": [
                        The given poll is still ongoing.
                      ]
                    }
                    {
                      "name": NoneRemaining
                      "fields": []
                      "index": 4
                      "docs": [
                        There are no further records to be removed.
                      ]
                    }
                    {
                      "name": Corruption
                      "fields": []
                      "index": 5
                      "docs": [
                        Unexpected error in state.
                      ]
                    }
                    {
                      "name": RankTooLow
                      "fields": []
                      "index": 6
                      "docs": [
                        The member's rank is too low to vote.
                      ]
                    }
                    {
                      "name": InvalidWitness
                      "fields": []
                      "index": 7
                      "docs": [
                        The information provided is incorrect.
                      ]
                    }
                    {
                      "name": NoPermission
                      "fields": []
                      "index": 8
                      "docs": [
                        The origin is not sufficiently privileged to do the operation.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 476
            "type": {
              "path": [
                pallet_referenda
                types
                ReferendumInfo
              ]
              "params": [
                {
                  "name": TrackId
                  "type": 63
                }
                {
                  "name": RuntimeOrigin
                  "type": 120
                }
                {
                  "name": Moment
                  "type": 4
                }
                {
                  "name": Call
                  "type": 64
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Tally
                  "type": 283
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": ScheduleAddress
                  "type": 137
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Ongoing
                      "fields": [
                        {
                          "name": null
                          "type": 477
                          "typeName": ReferendumStatus<TrackId, RuntimeOrigin, Moment, Call, Balance, Tally,nAccountId, ScheduleAddress,>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Approved
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Rejected
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Cancelled
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": TimedOut
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 456
                          "typeName": Option<Deposit<AccountId, Balance>>
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Killed
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": Moment
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 477
            "type": {
              "path": [
                pallet_referenda
                types
                ReferendumStatus
              ]
              "params": [
                {
                  "name": TrackId
                  "type": 63
                }
                {
                  "name": RuntimeOrigin
                  "type": 120
                }
                {
                  "name": Moment
                  "type": 4
                }
                {
                  "name": Call
                  "type": 64
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Tally
                  "type": 283
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": ScheduleAddress
                  "type": 137
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": track
                      "type": 63
                      "typeName": TrackId
                      "docs": []
                    }
                    {
                      "name": origin
                      "type": 120
                      "typeName": RuntimeOrigin
                      "docs": []
                    }
                    {
                      "name": proposal
                      "type": 64
                      "typeName": Call
                      "docs": []
                    }
                    {
                      "name": enactment
                      "type": 130
                      "typeName": DispatchTime<Moment>
                      "docs": []
                    }
                    {
                      "name": submitted
                      "type": 4
                      "typeName": Moment
                      "docs": []
                    }
                    {
                      "name": submission_deposit
                      "type": 455
                      "typeName": Deposit<AccountId, Balance>
                      "docs": []
                    }
                    {
                      "name": decision_deposit
                      "type": 456
                      "typeName": Option<Deposit<AccountId, Balance>>
                      "docs": []
                    }
                    {
                      "name": deciding
                      "type": 457
                      "typeName": Option<DecidingStatus<Moment>>
                      "docs": []
                    }
                    {
                      "name": tally
                      "type": 283
                      "typeName": Tally
                      "docs": []
                    }
                    {
                      "name": in_queue
                      "type": 54
                      "typeName": bool
                      "docs": []
                    }
                    {
                      "name": alarm
                      "type": 459
                      "typeName": Option<(Moment, ScheduleAddress)>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 478
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 137
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 337
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 479
            "type": {
              "path": [
                pallet_referenda
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotOngoing
                      "fields": []
                      "index": 0
                      "docs": [
                        Referendum is not ongoing.
                      ]
                    }
                    {
                      "name": HasDeposit
                      "fields": []
                      "index": 1
                      "docs": [
                        Referendum's decision deposit is already paid.
                      ]
                    }
                    {
                      "name": BadTrack
                      "fields": []
                      "index": 2
                      "docs": [
                        The track identifier given was invalid.
                      ]
                    }
                    {
                      "name": Full
                      "fields": []
                      "index": 3
                      "docs": [
                        There are already a full complement of referenda in progress for this track.
                      ]
                    }
                    {
                      "name": QueueEmpty
                      "fields": []
                      "index": 4
                      "docs": [
                        The queue of the track is empty.
                      ]
                    }
                    {
                      "name": BadReferendum
                      "fields": []
                      "index": 5
                      "docs": [
                        The referendum index provided is invalid in this context.
                      ]
                    }
                    {
                      "name": NothingToDo
                      "fields": []
                      "index": 6
                      "docs": [
                        There was nothing to do in the advancement.
                      ]
                    }
                    {
                      "name": NoTrack
                      "fields": []
                      "index": 7
                      "docs": [
                        No track exists for the proposal origin.
                      ]
                    }
                    {
                      "name": Unfinished
                      "fields": []
                      "index": 8
                      "docs": [
                        Any deposit cannot be refunded until after the decision is over.
                      ]
                    }
                    {
                      "name": NoPermission
                      "fields": []
                      "index": 9
                      "docs": [
                        The deposit refunder is not the depositor.
                      ]
                    }
                    {
                      "name": NoDeposit
                      "fields": []
                      "index": 10
                      "docs": [
                        The deposit cannot be refunded since none was made.
                      ]
                    }
                    {
                      "name": BadStatus
                      "fields": []
                      "index": 11
                      "docs": [
                        The referendum status is invalid for this operation.
                      ]
                    }
                    {
                      "name": PreimageNotExist
                      "fields": []
                      "index": 12
                      "docs": [
                        The preimage does not exist.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 480
            "type": {
              "path": [
                pallet_whitelist
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": UnavailablePreImage
                      "fields": []
                      "index": 0
                      "docs": [
                        The preimage of the call hash could not be loaded.
                      ]
                    }
                    {
                      "name": UndecodableCall
                      "fields": []
                      "index": 1
                      "docs": [
                        The call could not be decoded.
                      ]
                    }
                    {
                      "name": InvalidCallWeightWitness
                      "fields": []
                      "index": 2
                      "docs": [
                        The weight of the decoded call was higher than the witness.
                      ]
                    }
                    {
                      "name": CallIsNotWhitelisted
                      "fields": []
                      "index": 3
                      "docs": [
                        The call was not whitelisted.
                      ]
                    }
                    {
                      "name": CallAlreadyWhitelisted
                      "fields": []
                      "index": 4
                      "docs": [
                        The call was already whitelisted; No-Op.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 481
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 482
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 484
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 482
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 483
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 483
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 483
            "type": {
              "path": [
                pallet_scheduler
                Scheduled
              ]
              "params": [
                {
                  "name": Name
                  "type": 1
                }
                {
                  "name": Call
                  "type": 64
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": PalletsOrigin
                  "type": 120
                }
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": maybe_id
                      "type": 291
                      "typeName": Option<Name>
                      "docs": []
                    }
                    {
                      "name": priority
                      "type": 2
                      "typeName": "schedule"::Priority
                      "docs": []
                    }
                    {
                      "name": call
                      "type": 64
                      "typeName": Call
                      "docs": []
                    }
                    {
                      "name": maybe_periodic
                      "type": 136
                      "typeName": Option<"schedule"::Period<BlockNumber>>
                      "docs": []
                    }
                    {
                      "name": origin
                      "type": 120
                      "typeName": PalletsOrigin
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 484
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 482
                }
              }
              "docs": []
            }
          }
          {
            "id": 485
            "type": {
              "path": [
                pallet_scheduler
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": FailedToSchedule
                      "fields": []
                      "index": 0
                      "docs": [
                        Failed to schedule a call
                      ]
                    }
                    {
                      "name": NotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        Cannot find the scheduled call.
                      ]
                    }
                    {
                      "name": TargetBlockNumberInPast
                      "fields": []
                      "index": 2
                      "docs": [
                        Given target block number is in the past.
                      ]
                    }
                    {
                      "name": RescheduleNoChange
                      "fields": []
                      "index": 3
                      "docs": [
                        Reschedule failed because it does not change scheduled time.
                      ]
                    }
                    {
                      "name": Named
                      "fields": []
                      "index": 4
                      "docs": [
                        Attempt to use a non-named function on a named task.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 486
            "type": {
              "path": [
                pallet_preimage
                OldRequestStatus
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Unrequested
                      "fields": [
                        {
                          "name": deposit
                          "type": 248
                          "typeName": (AccountId, Balance)
                          "docs": []
                        }
                        {
                          "name": len
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Requested
                      "fields": [
                        {
                          "name": deposit
                          "type": 487
                          "typeName": Option<(AccountId, Balance)>
                          "docs": []
                        }
                        {
                          "name": count
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                        {
                          "name": len
                          "type": 117
                          "typeName": Option<u32>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 487
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 248
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 248
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 488
            "type": {
              "path": [
                pallet_preimage
                RequestStatus
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Ticket
                  "type": 489
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Unrequested
                      "fields": [
                        {
                          "name": ticket
                          "type": 490
                          "typeName": (AccountId, Ticket)
                          "docs": []
                        }
                        {
                          "name": len
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Requested
                      "fields": [
                        {
                          "name": maybe_ticket
                          "type": 491
                          "typeName": Option<(AccountId, Ticket)>
                          "docs": []
                        }
                        {
                          "name": count
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                        {
                          "name": maybe_len
                          "type": 117
                          "typeName": Option<u32>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 489
            "type": {
              "path": [
                frame_support
                traits
                tokens
                fungible
                HoldConsideration
              ]
              "params": [
                {
                  "name": A
                  "type": null
                }
                {
                  "name": F
                  "type": null
                }
                {
                  "name": R
                  "type": null
                }
                {
                  "name": D
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 6
                      "typeName": "F"::Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 490
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  489
                ]
              }
              "docs": []
            }
          }
          {
            "id": 491
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 490
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 490
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 492
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 493
            "type": {
              "path": [
                pallet_preimage
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": TooBig
                      "fields": []
                      "index": 0
                      "docs": [
                        Preimage is too large to store on-chain.
                      ]
                    }
                    {
                      "name": AlreadyNoted
                      "fields": []
                      "index": 1
                      "docs": [
                        Preimage has already been noted on-chain.
                      ]
                    }
                    {
                      "name": NotAuthorized
                      "fields": []
                      "index": 2
                      "docs": [
                        The user is not authorized to perform this action.
                      ]
                    }
                    {
                      "name": NotNoted
                      "fields": []
                      "index": 3
                      "docs": [
                        The preimage cannot be removed since it has not yet been noted.
                      ]
                    }
                    {
                      "name": Requested
                      "fields": []
                      "index": 4
                      "docs": [
                        A preimage may not be removed when there are outstanding requests.
                      ]
                    }
                    {
                      "name": NotRequested
                      "fields": []
                      "index": 5
                      "docs": [
                        The preimage request cannot be removed since no outstanding requests exist.
                      ]
                    }
                    {
                      "name": TooMany
                      "fields": []
                      "index": 6
                      "docs": [
                        More than `MAX_HASH_UPGRADE_BULK_COUNT` hashes were requested to be upgraded at once.
                      ]
                    }
                    {
                      "name": TooFew
                      "fields": []
                      "index": 7
                      "docs": [
                        Too few hashes were requested to be upgraded (i.e. zero).
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 494
            "type": {
              "path": [
                pallet_identity
                types
                Registration
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": MaxJudgements
                  "type": null
                }
                {
                  "name": IdentityInfo
                  "type": 141
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": judgements
                      "type": 495
                      "typeName": BoundedVec<(RegistrarIndex, Judgement<Balance>), MaxJudgements>
                      "docs": []
                    }
                    {
                      "name": deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": info
                      "type": 141
                      "typeName": IdentityInfo
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 495
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 496
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 497
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 496
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  181
                ]
              }
              "docs": []
            }
          }
          {
            "id": 497
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 496
                }
              }
              "docs": []
            }
          }
          {
            "id": 498
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  6
                  499
                ]
              }
              "docs": []
            }
          }
          {
            "id": 499
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 97
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 500
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 501
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 503
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 501
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 502
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 502
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 502
            "type": {
              "path": [
                pallet_identity
                types
                RegistrarInfo
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": IdField
                  "type": 180
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": account
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": fee
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": fields
                      "type": 179
                      "typeName": IdentityFields<IdField>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 503
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 501
                }
              }
              "docs": []
            }
          }
          {
            "id": 504
            "type": {
              "path": [
                pallet_identity
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": TooManySubAccounts
                      "fields": []
                      "index": 0
                      "docs": [
                        Too many subs-accounts.
                      ]
                    }
                    {
                      "name": NotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        Account isn't found.
                      ]
                    }
                    {
                      "name": NotNamed
                      "fields": []
                      "index": 2
                      "docs": [
                        Account isn't named.
                      ]
                    }
                    {
                      "name": EmptyIndex
                      "fields": []
                      "index": 3
                      "docs": [
                        Empty index.
                      ]
                    }
                    {
                      "name": FeeChanged
                      "fields": []
                      "index": 4
                      "docs": [
                        Fee is changed.
                      ]
                    }
                    {
                      "name": NoIdentity
                      "fields": []
                      "index": 5
                      "docs": [
                        No identity found.
                      ]
                    }
                    {
                      "name": StickyJudgement
                      "fields": []
                      "index": 6
                      "docs": [
                        Sticky judgement.
                      ]
                    }
                    {
                      "name": JudgementGiven
                      "fields": []
                      "index": 7
                      "docs": [
                        Judgement given.
                      ]
                    }
                    {
                      "name": InvalidJudgement
                      "fields": []
                      "index": 8
                      "docs": [
                        Invalid judgement.
                      ]
                    }
                    {
                      "name": InvalidIndex
                      "fields": []
                      "index": 9
                      "docs": [
                        The index is invalid.
                      ]
                    }
                    {
                      "name": InvalidTarget
                      "fields": []
                      "index": 10
                      "docs": [
                        The target is invalid.
                      ]
                    }
                    {
                      "name": TooManyFields
                      "fields": []
                      "index": 11
                      "docs": [
                        Too many additional fields.
                      ]
                    }
                    {
                      "name": TooManyRegistrars
                      "fields": []
                      "index": 12
                      "docs": [
                        Maximum amount of registrars reached. Cannot add any more.
                      ]
                    }
                    {
                      "name": AlreadyClaimed
                      "fields": []
                      "index": 13
                      "docs": [
                        Account ID is already named.
                      ]
                    }
                    {
                      "name": NotSub
                      "fields": []
                      "index": 14
                      "docs": [
                        Sender is not a sub-account.
                      ]
                    }
                    {
                      "name": NotOwned
                      "fields": []
                      "index": 15
                      "docs": [
                        Sub-account isn't owned by sender.
                      ]
                    }
                    {
                      "name": JudgementForDifferentIdentity
                      "fields": []
                      "index": 16
                      "docs": [
                        The provided judgement was for a different identity.
                      ]
                    }
                    {
                      "name": JudgementPaymentFailed
                      "fields": []
                      "index": 17
                      "docs": [
                        Error that occurs when there is an issue paying for judgement.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 505
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  506
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 506
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 507
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 508
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 507
            "type": {
              "path": [
                pallet_proxy
                ProxyDefinition
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": ProxyType
                  "type": 184
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": delegate
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": proxy_type
                      "type": 184
                      "typeName": ProxyType
                      "docs": []
                    }
                    {
                      "name": delay
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 508
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 507
                }
              }
              "docs": []
            }
          }
          {
            "id": 509
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  510
                  6
                ]
              }
              "docs": []
            }
          }
          {
            "id": 510
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 511
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 512
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 511
            "type": {
              "path": [
                pallet_proxy
                Announcement
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Hash
                  "type": 12
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": real
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": call_hash
                      "type": 12
                      "typeName": Hash
                      "docs": []
                    }
                    {
                      "name": height
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 512
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 511
                }
              }
              "docs": []
            }
          }
          {
            "id": 513
            "type": {
              "path": [
                pallet_proxy
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": TooMany
                      "fields": []
                      "index": 0
                      "docs": [
                        There are too many proxies registered or too many announcements pending.
                      ]
                    }
                    {
                      "name": NotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        Proxy registration not found.
                      ]
                    }
                    {
                      "name": NotProxy
                      "fields": []
                      "index": 2
                      "docs": [
                        Sender is not a proxy of the account to be proxied.
                      ]
                    }
                    {
                      "name": Unproxyable
                      "fields": []
                      "index": 3
                      "docs": [
                        A call which is incompatible with the proxy type's filter was attempted.
                      ]
                    }
                    {
                      "name": Duplicate
                      "fields": []
                      "index": 4
                      "docs": [
                        Account is already a proxy.
                      ]
                    }
                    {
                      "name": NoPermission
                      "fields": []
                      "index": 5
                      "docs": [
                        Call may not be made by proxy because it may escalate its privileges.
                      ]
                    }
                    {
                      "name": Unannounced
                      "fields": []
                      "index": 6
                      "docs": [
                        Announcement, if made at all, was made too recently.
                      ]
                    }
                    {
                      "name": NoSelfProxy
                      "fields": []
                      "index": 7
                      "docs": [
                        Cannot add self as proxy.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 514
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  1
                ]
              }
              "docs": []
            }
          }
          {
            "id": 515
            "type": {
              "path": [
                pallet_multisig
                Multisig
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": MaxApprovals
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": when
                      "type": 187
                      "typeName": Timepoint<BlockNumber>
                      "docs": []
                    }
                    {
                      "name": deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": depositor
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": approvals
                      "type": 516
                      "typeName": BoundedVec<AccountId, MaxApprovals>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 516
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 97
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 517
            "type": {
              "path": [
                pallet_multisig
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": MinimumThreshold
                      "fields": []
                      "index": 0
                      "docs": [
                        Threshold must be 2 or greater.
                      ]
                    }
                    {
                      "name": AlreadyApproved
                      "fields": []
                      "index": 1
                      "docs": [
                        Call is already approved by this signatory.
                      ]
                    }
                    {
                      "name": NoApprovalsNeeded
                      "fields": []
                      "index": 2
                      "docs": [
                        Call doesn't need any (more) approvals.
                      ]
                    }
                    {
                      "name": TooFewSignatories
                      "fields": []
                      "index": 3
                      "docs": [
                        There are too few signatories in the list.
                      ]
                    }
                    {
                      "name": TooManySignatories
                      "fields": []
                      "index": 4
                      "docs": [
                        There are too many signatories in the list.
                      ]
                    }
                    {
                      "name": SignatoriesOutOfOrder
                      "fields": []
                      "index": 5
                      "docs": [
                        The signatories were provided out of order; they should be ordered.
                      ]
                    }
                    {
                      "name": SenderInSignatories
                      "fields": []
                      "index": 6
                      "docs": [
                        The sender was contained in the other signatories; it shouldn't be.
                      ]
                    }
                    {
                      "name": NotFound
                      "fields": []
                      "index": 7
                      "docs": [
                        Multisig operation not found when attempting to cancel.
                      ]
                    }
                    {
                      "name": NotOwner
                      "fields": []
                      "index": 8
                      "docs": [
                        Only the account that originally created the multisig is able to cancel it.
                      ]
                    }
                    {
                      "name": NoTimepoint
                      "fields": []
                      "index": 9
                      "docs": [
                        No timepoint was given, yet the multisig operation is already underway.
                      ]
                    }
                    {
                      "name": WrongTimepoint
                      "fields": []
                      "index": 10
                      "docs": [
                        A different timepoint was given to the multisig operation that is underway.
                      ]
                    }
                    {
                      "name": UnexpectedTimepoint
                      "fields": []
                      "index": 11
                      "docs": [
                        A timepoint was given, yet no multisig operation is underway.
                      ]
                    }
                    {
                      "name": MaxWeightTooLow
                      "fields": []
                      "index": 12
                      "docs": [
                        The maximum weight information provided was too low.
                      ]
                    }
                    {
                      "name": AlreadyStored
                      "fields": []
                      "index": 13
                      "docs": [
                        The data to be stored is already stored.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 518
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                ReadySolution
              ]
              "params": [
                {
                  "name": AccountId
                  "type": null
                }
                {
                  "name": MaxWinners
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": supports
                      "type": 519
                      "typeName": BoundedSupports<AccountId, MaxWinners>
                      "docs": []
                    }
                    {
                      "name": score
                      "type": 241
                      "typeName": ElectionScore
                      "docs": []
                    }
                    {
                      "name": compute
                      "type": 297
                      "typeName": ElectionCompute
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 519
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 245
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 244
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 520
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                RoundSnapshot
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": DataProvider
                  "type": 521
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": voters
                      "type": 522
                      "typeName": Vec<DataProvider>
                      "docs": []
                    }
                    {
                      "name": targets
                      "type": 97
                      "typeName": Vec<AccountId>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 521
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  11
                  412
                ]
              }
              "docs": []
            }
          }
          {
            "id": 522
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 521
                }
              }
              "docs": []
            }
          }
          {
            "id": 523
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 524
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 525
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 524
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  241
                  4
                  4
                ]
              }
              "docs": []
            }
          }
          {
            "id": 525
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 524
                }
              }
              "docs": []
            }
          }
          {
            "id": 526
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                signed
                SignedSubmission
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Solution
                  "type": 190
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": who
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": raw_solution
                      "type": 189
                      "typeName": RawSolution<Solution>
                      "docs": []
                    }
                    {
                      "name": call_fee
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 527
            "type": {
              "path": [
                pallet_election_provider_multi_phase
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PreDispatchEarlySubmission
                      "fields": []
                      "index": 0
                      "docs": [
                        Submission was too early.
                      ]
                    }
                    {
                      "name": PreDispatchWrongWinnerCount
                      "fields": []
                      "index": 1
                      "docs": [
                        Wrong number of winners presented.
                      ]
                    }
                    {
                      "name": PreDispatchWeakSubmission
                      "fields": []
                      "index": 2
                      "docs": [
                        Submission was too weak, score-wise.
                      ]
                    }
                    {
                      "name": SignedQueueFull
                      "fields": []
                      "index": 3
                      "docs": [
                        The queue was full, and the solution was not better than any of the existing ones.
                      ]
                    }
                    {
                      "name": SignedCannotPayDeposit
                      "fields": []
                      "index": 4
                      "docs": [
                        The origin failed to pay the deposit.
                      ]
                    }
                    {
                      "name": SignedInvalidWitness
                      "fields": []
                      "index": 5
                      "docs": [
                        Witness data to dispatchable is invalid.
                      ]
                    }
                    {
                      "name": SignedTooMuchWeight
                      "fields": []
                      "index": 6
                      "docs": [
                        The signed submission consumes too much weight
                      ]
                    }
                    {
                      "name": OcwCallWrongEra
                      "fields": []
                      "index": 7
                      "docs": [
                        OCW submitted solution for wrong round
                      ]
                    }
                    {
                      "name": MissingSnapshotMetadata
                      "fields": []
                      "index": 8
                      "docs": [
                        Snapshot metadata should exist but didn't.
                      ]
                    }
                    {
                      "name": InvalidSubmissionIndex
                      "fields": []
                      "index": 9
                      "docs": [
                        `"Self"::insert_submission` returned an invalid index.
                      ]
                    }
                    {
                      "name": CallNotAllowed
                      "fields": []
                      "index": 10
                      "docs": [
                        The call is not allowed at this point.
                      ]
                    }
                    {
                      "name": FallbackFailed
                      "fields": []
                      "index": 11
                      "docs": [
                        The fallback failed
                      ]
                    }
                    {
                      "name": BoundNotMet
                      "fields": []
                      "index": 12
                      "docs": [
                        Some bound not met
                      ]
                    }
                    {
                      "name": TooManyWinners
                      "fields": []
                      "index": 13
                      "docs": [
                        Submitted solution has too many winners
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error of the pallet that can be returned in response to dispatches.
              ]
            }
          }
          {
            "id": 528
            "type": {
              "path": [
                sp_staking
                offence
                OffenceDetails
              ]
              "params": [
                {
                  "name": Reporter
                  "type": 0
                }
                {
                  "name": Offender
                  "type": 44
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": offender
                      "type": 44
                      "typeName": Offender
                      "docs": []
                    }
                    {
                      "name": reporters
                      "type": 97
                      "typeName": Vec<Reporter>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 529
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  160
                  13
                ]
              }
              "docs": []
            }
          }
          {
            "id": 530
            "type": {
              "path": [
                pallet_bounties
                Bounty
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": proposer
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": fee
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": curator_deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": bond
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": status
                      "type": 531
                      "typeName": BountyStatus<AccountId, BlockNumber>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 531
            "type": {
              "path": [
                pallet_bounties
                BountyStatus
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Proposed
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Approved
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Funded
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": CuratorProposed
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Active
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": update_due
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": PendingPayout
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": unlock_at
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 532
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 533
            "type": {
              "path": [
                pallet_bounties
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
                {
                  "name": I
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InsufficientProposersBalance
                      "fields": []
                      "index": 0
                      "docs": [
                        Proposer's balance is too low.
                      ]
                    }
                    {
                      "name": InvalidIndex
                      "fields": []
                      "index": 1
                      "docs": [
                        No proposal or bounty at that index.
                      ]
                    }
                    {
                      "name": ReasonTooBig
                      "fields": []
                      "index": 2
                      "docs": [
                        The reason given is just too big.
                      ]
                    }
                    {
                      "name": UnexpectedStatus
                      "fields": []
                      "index": 3
                      "docs": [
                        The bounty status is unexpected.
                      ]
                    }
                    {
                      "name": RequireCurator
                      "fields": []
                      "index": 4
                      "docs": [
                        Require bounty curator.
                      ]
                    }
                    {
                      "name": InvalidValue
                      "fields": []
                      "index": 5
                      "docs": [
                        Invalid bounty value.
                      ]
                    }
                    {
                      "name": InvalidFee
                      "fields": []
                      "index": 6
                      "docs": [
                        Invalid bounty fee.
                      ]
                    }
                    {
                      "name": PendingPayout
                      "fields": []
                      "index": 7
                      "docs": [
                        A bounty payout is pending.
                        To cancel the bounty, you must unassign and slash the curator.
                      ]
                    }
                    {
                      "name": Premature
                      "fields": []
                      "index": 8
                      "docs": [
                        The bounties cannot be claimed/closed because it's still in the countdown period.
                      ]
                    }
                    {
                      "name": HasActiveChildBounty
                      "fields": []
                      "index": 9
                      "docs": [
                        The bounty cannot be closed because it has active child bounties.
                      ]
                    }
                    {
                      "name": TooManyQueued
                      "fields": []
                      "index": 10
                      "docs": [
                        Too many approvals are already queued.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 534
            "type": {
              "path": [
                pallet_child_bounties
                ChildBounty
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": parent_bounty
                      "type": 4
                      "typeName": BountyIndex
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": fee
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": curator_deposit
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": status
                      "type": 535
                      "typeName": ChildBountyStatus<AccountId, BlockNumber>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 535
            "type": {
              "path": [
                pallet_child_bounties
                ChildBountyStatus
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Added
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": CuratorProposed
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Active
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": PendingPayout
                      "fields": [
                        {
                          "name": curator
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": beneficiary
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": unlock_at
                          "type": 4
                          "typeName": BlockNumber
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 536
            "type": {
              "path": [
                pallet_child_bounties
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ParentBountyNotActive
                      "fields": []
                      "index": 0
                      "docs": [
                        The parent bounty is not in active state.
                      ]
                    }
                    {
                      "name": InsufficientBountyBalance
                      "fields": []
                      "index": 1
                      "docs": [
                        The bounty balance is not enough to add new child-bounty.
                      ]
                    }
                    {
                      "name": TooManyChildBounties
                      "fields": []
                      "index": 2
                      "docs": [
                        Number of child bounties exceeds limit `MaxActiveChildBountyCount`.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 537
            "type": {
              "path": [
                pallet_nomination_pools
                PoolMember
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": pool_id
                      "type": 4
                      "typeName": PoolId
                      "docs": []
                    }
                    {
                      "name": points
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": last_recorded_reward_counter
                      "type": 395
                      "typeName": "T"::RewardCounter
                      "docs": []
                    }
                    {
                      "name": unbonding_eras
                      "type": 538
                      "typeName": BoundedBTreeMap<EraIndex, BalanceOf<T>, "T"::MaxUnbonding>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 538
            "type": {
              "path": [
                bounded_collections
                bounded_btree_map
                BoundedBTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 4
                }
                {
                  "name": V
                  "type": 6
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 539
                      "typeName": BTreeMap<K, V>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 539
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 4
                }
                {
                  "name": V
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 463
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 540
            "type": {
              "path": [
                pallet_nomination_pools
                BondedPoolInner
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": commission
                      "type": 541
                      "typeName": Commission<T>
                      "docs": []
                    }
                    {
                      "name": member_counter
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": points
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": roles
                      "type": 544
                      "typeName": PoolRoles<"T"::AccountId>
                      "docs": []
                    }
                    {
                      "name": state
                      "type": 253
                      "typeName": PoolState
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 541
            "type": {
              "path": [
                pallet_nomination_pools
                Commission
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": current
                      "type": 259
                      "typeName": Option<(Perbill, "T"::AccountId)>
                      "docs": []
                    }
                    {
                      "name": max
                      "type": 542
                      "typeName": Option<Perbill>
                      "docs": []
                    }
                    {
                      "name": change_rate
                      "type": 543
                      "typeName": Option<CommissionChangeRate<BlockNumberFor<T>>>
                      "docs": []
                    }
                    {
                      "name": throttle_from
                      "type": 117
                      "typeName": Option<BlockNumberFor<T>>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 542
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 51
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 51
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 543
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 261
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 261
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 544
            "type": {
              "path": [
                pallet_nomination_pools
                PoolRoles
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": depositor
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": root
                      "type": 274
                      "typeName": Option<AccountId>
                      "docs": []
                    }
                    {
                      "name": nominator
                      "type": 274
                      "typeName": Option<AccountId>
                      "docs": []
                    }
                    {
                      "name": bouncer
                      "type": 274
                      "typeName": Option<AccountId>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 545
            "type": {
              "path": [
                pallet_nomination_pools
                RewardPool
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": last_recorded_reward_counter
                      "type": 395
                      "typeName": "T"::RewardCounter
                      "docs": []
                    }
                    {
                      "name": last_recorded_total_payouts
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": total_rewards_claimed
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": total_commission_pending
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": total_commission_claimed
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 546
            "type": {
              "path": [
                pallet_nomination_pools
                SubPools
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": no_era
                      "type": 547
                      "typeName": UnbondPool<T>
                      "docs": []
                    }
                    {
                      "name": with_era
                      "type": 548
                      "typeName": BoundedBTreeMap<EraIndex, UnbondPool<T>, TotalUnbondingPools<T>>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 547
            "type": {
              "path": [
                pallet_nomination_pools
                UnbondPool
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": points
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                    {
                      "name": balance
                      "type": 6
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 548
            "type": {
              "path": [
                bounded_collections
                bounded_btree_map
                BoundedBTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 4
                }
                {
                  "name": V
                  "type": 547
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 549
                      "typeName": BTreeMap<K, V>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 549
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 4
                }
                {
                  "name": V
                  "type": 547
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 550
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 550
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 551
                }
              }
              "docs": []
            }
          }
          {
            "id": 551
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  547
                ]
              }
              "docs": []
            }
          }
          {
            "id": 552
            "type": {
              "path": [
                bounded_collections
                bounded_vec
                BoundedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": S
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 553
            "type": {
              "path": [
                pallet_nomination_pools
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PoolNotFound
                      "fields": []
                      "index": 0
                      "docs": [
                        A (bonded) pool id does not exist.
                      ]
                    }
                    {
                      "name": PoolMemberNotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        An account is not a member.
                      ]
                    }
                    {
                      "name": RewardPoolNotFound
                      "fields": []
                      "index": 2
                      "docs": [
                        A reward pool does not exist. In all cases this is a system logic error.
                      ]
                    }
                    {
                      "name": SubPoolsNotFound
                      "fields": []
                      "index": 3
                      "docs": [
                        A sub pool does not exist.
                      ]
                    }
                    {
                      "name": AccountBelongsToOtherPool
                      "fields": []
                      "index": 4
                      "docs": [
                        An account is already delegating in another pool. An account may only belong to one
                        pool at a time.
                      ]
                    }
                    {
                      "name": FullyUnbonding
                      "fields": []
                      "index": 5
                      "docs": [
                        The member is fully unbonded (and thus cannot access the bonded and reward pool
                        anymore to, for example, collect rewards).
                      ]
                    }
                    {
                      "name": MaxUnbondingLimit
                      "fields": []
                      "index": 6
                      "docs": [
                        The member cannot unbond further chunks due to reaching the limit.
                      ]
                    }
                    {
                      "name": CannotWithdrawAny
                      "fields": []
                      "index": 7
                      "docs": [
                        None of the funds can be withdrawn yet because the bonding duration has not passed.
                      ]
                    }
                    {
                      "name": MinimumBondNotMet
                      "fields": []
                      "index": 8
                      "docs": [
                        The amount does not meet the minimum bond to either join or create a pool.
                        
                        The depositor can never unbond to a value less than `"Pallet"::depositor_min_bond`. The
                        caller does not have nominating permissions for the pool. Members can never unbond to a
                        value below `MinJoinBond`.
                      ]
                    }
                    {
                      "name": OverflowRisk
                      "fields": []
                      "index": 9
                      "docs": [
                        The transaction could not be executed due to overflow risk for the pool.
                      ]
                    }
                    {
                      "name": NotDestroying
                      "fields": []
                      "index": 10
                      "docs": [
                        A pool must be in [`"PoolState"::Destroying`] in order for the depositor to unbond or for
                        other members to be permissionlessly unbonded.
                      ]
                    }
                    {
                      "name": NotNominator
                      "fields": []
                      "index": 11
                      "docs": [
                        The caller does not have nominating permissions for the pool.
                      ]
                    }
                    {
                      "name": NotKickerOrDestroying
                      "fields": []
                      "index": 12
                      "docs": [
                        Either a) the caller cannot make a valid kick or b) the pool is not destroying.
                      ]
                    }
                    {
                      "name": NotOpen
                      "fields": []
                      "index": 13
                      "docs": [
                        The pool is not open to join
                      ]
                    }
                    {
                      "name": MaxPools
                      "fields": []
                      "index": 14
                      "docs": [
                        The system is maxed out on pools.
                      ]
                    }
                    {
                      "name": MaxPoolMembers
                      "fields": []
                      "index": 15
                      "docs": [
                        Too many members in the pool or system.
                      ]
                    }
                    {
                      "name": CanNotChangeState
                      "fields": []
                      "index": 16
                      "docs": [
                        The pools state cannot be changed.
                      ]
                    }
                    {
                      "name": DoesNotHavePermission
                      "fields": []
                      "index": 17
                      "docs": [
                        The caller does not have adequate permissions.
                      ]
                    }
                    {
                      "name": MetadataExceedsMaxLen
                      "fields": []
                      "index": 18
                      "docs": [
                        Metadata exceeds [`"Config"::MaxMetadataLen`]
                      ]
                    }
                    {
                      "name": Defensive
                      "fields": [
                        {
                          "name": null
                          "type": 554
                          "typeName": DefensiveError
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": [
                        Some error occurred that should never happen. This should be reported to the
                        maintainers.
                      ]
                    }
                    {
                      "name": PartialUnbondNotAllowedPermissionlessly
                      "fields": []
                      "index": 20
                      "docs": [
                        Partial unbonding now allowed permissionlessly.
                      ]
                    }
                    {
                      "name": MaxCommissionRestricted
                      "fields": []
                      "index": 21
                      "docs": [
                        The pool's max commission cannot be set higher than the existing value.
                      ]
                    }
                    {
                      "name": CommissionExceedsMaximum
                      "fields": []
                      "index": 22
                      "docs": [
                        The supplied commission exceeds the max allowed commission.
                      ]
                    }
                    {
                      "name": CommissionExceedsGlobalMaximum
                      "fields": []
                      "index": 23
                      "docs": [
                        The supplied commission exceeds global maximum commission.
                      ]
                    }
                    {
                      "name": CommissionChangeThrottled
                      "fields": []
                      "index": 24
                      "docs": [
                        Not enough blocks have surpassed since the last commission update.
                      ]
                    }
                    {
                      "name": CommissionChangeRateNotAllowed
                      "fields": []
                      "index": 25
                      "docs": [
                        The submitted changes to commission change rate are not allowed.
                      ]
                    }
                    {
                      "name": NoPendingCommission
                      "fields": []
                      "index": 26
                      "docs": [
                        There is no pending commission to claim.
                      ]
                    }
                    {
                      "name": NoCommissionCurrentSet
                      "fields": []
                      "index": 27
                      "docs": [
                        No commission current has been set.
                      ]
                    }
                    {
                      "name": PoolIdInUse
                      "fields": []
                      "index": 28
                      "docs": [
                        Pool id currently in use.
                      ]
                    }
                    {
                      "name": InvalidPoolId
                      "fields": []
                      "index": 29
                      "docs": [
                        Pool id provided is not correct/usable.
                      ]
                    }
                    {
                      "name": BondExtraRestricted
                      "fields": []
                      "index": 30
                      "docs": [
                        Bonding extra is restricted to the exact pending reward amount.
                      ]
                    }
                    {
                      "name": NothingToAdjust
                      "fields": []
                      "index": 31
                      "docs": [
                        No imbalance in the ED deposit for the pool.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 554
            "type": {
              "path": [
                pallet_nomination_pools
                pallet
                DefensiveError
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": NotEnoughSpaceInUnbondPool
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": PoolNotFound
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": RewardPoolNotFound
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": SubPoolsNotFound
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": BondedStashKilledPrematurely
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 555
            "type": {
              "path": [
                gear_core
                code
                instrumented
                InstrumentedCode
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": code
                      "type": 13
                      "typeName": Vec<u8>
                      "docs": []
                    }
                    {
                      "name": original_code_len
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": exports
                      "type": 556
                      "typeName": BTreeSet<DispatchKind>
                      "docs": []
                    }
                    {
                      "name": static_pages
                      "type": 559
                      "typeName": WasmPagesAmount
                      "docs": []
                    }
                    {
                      "name": stack_end
                      "type": 560
                      "typeName": Option<WasmPage>
                      "docs": []
                    }
                    {
                      "name": version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 556
            "type": {
              "path": [
                BTreeSet
              ]
              "params": [
                {
                  "name": T
                  "type": 557
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 558
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 557
            "type": {
              "path": [
                gear_core
                message
                DispatchKind
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Init
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Handle
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reply
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Signal
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 558
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 557
                }
              }
              "docs": []
            }
          }
          {
            "id": 559
            "type": {
              "path": [
                gear_core
                pages
                PagesAmount
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 560
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 561
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 561
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 561
            "type": {
              "path": [
                gear_core
                pages
                Page
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 562
            "type": {
              "path": [
                gear_common
                CodeMetadata
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": author
                      "type": 12
                      "typeName": H256
                      "docs": []
                    }
                    {
                      "name": block_number
                      "type": 74
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 563
            "type": {
              "path": [
                gear_core
                program
                Program
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Active
                      "fields": [
                        {
                          "name": null
                          "type": 564
                          "typeName": ActiveProgram<BlockNumber>
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Exited
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Terminated
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 564
            "type": {
              "path": [
                gear_core
                program
                ActiveProgram
              ]
              "params": [
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": allocations
                      "type": 565
                      "typeName": IntervalsTree<WasmPage>
                      "docs": []
                    }
                    {
                      "name": pages_with_data
                      "type": 569
                      "typeName": IntervalsTree<GearPage>
                      "docs": []
                    }
                    {
                      "name": memory_infix
                      "type": 574
                      "typeName": MemoryInfix
                      "docs": []
                    }
                    {
                      "name": gas_reservation_map
                      "type": 575
                      "typeName": GasReservationMap
                      "docs": []
                    }
                    {
                      "name": code_hash
                      "type": 12
                      "typeName": H256
                      "docs": []
                    }
                    {
                      "name": code_exports
                      "type": 556
                      "typeName": BTreeSet<DispatchKind>
                      "docs": []
                    }
                    {
                      "name": static_pages
                      "type": 559
                      "typeName": WasmPagesAmount
                      "docs": []
                    }
                    {
                      "name": state
                      "type": 579
                      "typeName": ProgramState
                      "docs": []
                    }
                    {
                      "name": expiration_block
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 565
            "type": {
              "path": [
                numerated
                tree
                IntervalsTree
              ]
              "params": [
                {
                  "name": T
                  "type": 561
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": inner
                      "type": 566
                      "typeName": BTreeMap<T, T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 566
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 561
                }
                {
                  "name": V
                  "type": 561
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 567
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 567
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 568
                }
              }
              "docs": []
            }
          }
          {
            "id": 568
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  561
                  561
                ]
              }
              "docs": []
            }
          }
          {
            "id": 569
            "type": {
              "path": [
                numerated
                tree
                IntervalsTree
              ]
              "params": [
                {
                  "name": T
                  "type": 570
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": inner
                      "type": 571
                      "typeName": BTreeMap<T, T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 570
            "type": {
              "path": [
                gear_core
                pages
                Page
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 571
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 570
                }
                {
                  "name": V
                  "type": 570
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 572
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 572
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 573
                }
              }
              "docs": []
            }
          }
          {
            "id": 573
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  570
                  570
                ]
              }
              "docs": []
            }
          }
          {
            "id": 574
            "type": {
              "path": [
                gear_core
                program
                MemoryInfix
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 575
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 325
                }
                {
                  "name": V
                  "type": 576
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 577
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 576
            "type": {
              "path": [
                gear_core
                reservation
                GasReservationSlot
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": amount
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                    {
                      "name": start
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": finish
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 577
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 578
                }
              }
              "docs": []
            }
          }
          {
            "id": 578
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  325
                  576
                ]
              }
              "docs": []
            }
          }
          {
            "id": 579
            "type": {
              "path": [
                gear_core
                program
                ProgramState
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Uninitialized
                      "fields": [
                        {
                          "name": message_id
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Initialized
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 580
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  264
                  574
                  570
                ]
              }
              "docs": []
            }
          }
          {
            "id": 581
            "type": {
              "path": [
                gear_core
                memory
                PageBuf
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 582
                      "typeName": PageBufInner
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 582
            "type": {
              "path": [
                gear_core
                buffer
                LimitedVec
              ]
              "params": [
                {
                  "name": T
                  "type": 2
                }
                {
                  "name": E
                  "type": 58
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": Vec<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 583
            "type": {
              "path": [
                pallet_gear_program
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": DuplicateItem
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": ProgramNotFound
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": NotActiveProgram
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": CannotFindDataForPage
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": ProgramCodeNotFound
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 584
            "type": {
              "path": [
                gear_common
                storage
                complicated
                dequeue
                LinkedNode
              ]
              "params": [
                {
                  "name": K
                  "type": 265
                }
                {
                  "name": V
                  "type": 585
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": next
                      "type": 598
                      "typeName": Option<K>
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 585
                      "typeName": V
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 585
            "type": {
              "path": [
                gear_core
                message
                stored
                StoredDispatch
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": kind
                      "type": 557
                      "typeName": DispatchKind
                      "docs": []
                    }
                    {
                      "name": message
                      "type": 586
                      "typeName": StoredMessage
                      "docs": []
                    }
                    {
                      "name": context
                      "type": 591
                      "typeName": Option<ContextStore>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 586
            "type": {
              "path": [
                gear_core
                message
                stored
                StoredMessage
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 265
                      "typeName": MessageId
                      "docs": []
                    }
                    {
                      "name": source
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": destination
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": payload
                      "type": 307
                      "typeName": Payload
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 46
                      "typeName": Value
                      "docs": []
                    }
                    {
                      "name": details
                      "type": 587
                      "typeName": Option<MessageDetails>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 587
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 588
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 588
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 588
            "type": {
              "path": [
                gear_core
                message
                common
                MessageDetails
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Reply
                      "fields": [
                        {
                          "name": null
                          "type": 310
                          "typeName": ReplyDetails
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Signal
                      "fields": [
                        {
                          "name": null
                          "type": 589
                          "typeName": SignalDetails
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 589
            "type": {
              "path": [
                gear_core
                message
                common
                SignalDetails
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": to
                      "type": 265
                      "typeName": MessageId
                      "docs": []
                    }
                    {
                      "name": code
                      "type": 590
                      "typeName": SignalCode
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 590
            "type": {
              "path": [
                gear_core_errors
                simple
                SignalCode
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Execution
                      "fields": [
                        {
                          "name": null
                          "type": 314
                          "typeName": SimpleExecutionError
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": RemovedFromWaitlist
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 591
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 592
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 592
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 592
            "type": {
              "path": [
                gear_core
                message
                context
                ContextStore
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": outgoing
                      "type": 593
                      "typeName": BTreeMap<u32, Option<Payload>>
                      "docs": []
                    }
                    {
                      "name": reply
                      "type": 594
                      "typeName": Option<Payload>
                      "docs": []
                    }
                    {
                      "name": initialized
                      "type": 270
                      "typeName": BTreeSet<ProgramId>
                      "docs": []
                    }
                    {
                      "name": reservation_nonce
                      "type": 597
                      "typeName": ReservationNonce
                      "docs": []
                    }
                    {
                      "name": system_reservation
                      "type": 266
                      "typeName": Option<u64>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 593
            "type": {
              "path": [
                BTreeMap
              ]
              "params": [
                {
                  "name": K
                  "type": 4
                }
                {
                  "name": V
                  "type": 594
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 595
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 594
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 307
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 307
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 595
            "type": {
              "path": []
              "params": []
              "def": {
                "Sequence": {
                  "type": 596
                }
              }
              "docs": []
            }
          }
          {
            "id": 596
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  594
                ]
              }
              "docs": []
            }
          }
          {
            "id": 597
            "type": {
              "path": [
                gear_core
                reservation
                ReservationNonce
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 598
            "type": {
              "path": [
                Option
              ]
              "params": [
                {
                  "name": T
                  "type": 265
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": None
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Some
                      "fields": [
                        {
                          "name": null
                          "type": 265
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 599
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  265
                ]
              }
              "docs": []
            }
          }
          {
            "id": 600
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  601
                  602
                ]
              }
              "docs": []
            }
          }
          {
            "id": 601
            "type": {
              "path": [
                gear_core
                message
                user
                UserStoredMessage
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": id
                      "type": 265
                      "typeName": MessageId
                      "docs": []
                    }
                    {
                      "name": source
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": destination
                      "type": 264
                      "typeName": ProgramId
                      "docs": []
                    }
                    {
                      "name": payload
                      "type": 307
                      "typeName": Payload
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 46
                      "typeName": Value
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 602
            "type": {
              "path": [
                gear_common
                storage
                primitives
                Interval
              ]
              "params": [
                {
                  "name": T
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": start
                      "type": 4
                      "typeName": T
                      "docs": []
                    }
                    {
                      "name": finish
                      "type": 4
                      "typeName": T
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 603
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  264
                  265
                ]
              }
              "docs": []
            }
          }
          {
            "id": 604
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  585
                  602
                ]
              }
              "docs": []
            }
          }
          {
            "id": 605
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  606
                  602
                ]
              }
              "docs": []
            }
          }
          {
            "id": 606
            "type": {
              "path": [
                gear_core
                message
                stored
                StoredDelayedDispatch
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": kind
                      "type": 557
                      "typeName": DispatchKind
                      "docs": []
                    }
                    {
                      "name": message
                      "type": 586
                      "typeName": StoredMessage
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 607
            "type": {
              "path": [
                pallet_gear_messenger
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": QueueDuplicateKey
                      "fields": []
                      "index": 0
                      "docs": [
                        Occurs when given key already exists in queue.
                      ]
                    }
                    {
                      "name": QueueElementNotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        Occurs when queue's element wasn't found in storage.
                      ]
                    }
                    {
                      "name": QueueHeadShouldBeSet
                      "fields": []
                      "index": 2
                      "docs": [
                        Occurs when queue's head should contain value,
                        but it's empty for some reason.
                      ]
                    }
                    {
                      "name": QueueHeadShouldNotBeSet
                      "fields": []
                      "index": 3
                      "docs": [
                        Occurs when queue's head should be empty,
                        but it contains value for some reason.
                      ]
                    }
                    {
                      "name": QueueTailHasNextKey
                      "fields": []
                      "index": 4
                      "docs": [
                        Occurs when queue's tail element contains link
                        to the next element.
                      ]
                    }
                    {
                      "name": QueueTailParentNotFound
                      "fields": []
                      "index": 5
                      "docs": [
                        Occurs when while searching queue's pre-tail,
                        element wasn't found.
                      ]
                    }
                    {
                      "name": QueueTailShouldBeSet
                      "fields": []
                      "index": 6
                      "docs": [
                        Occurs when queue's tail should contain value,
                        but it's empty for some reason.
                      ]
                    }
                    {
                      "name": QueueTailShouldNotBeSet
                      "fields": []
                      "index": 7
                      "docs": [
                        Occurs when queue's tail should be empty,
                        but it contains value for some reason.
                      ]
                    }
                    {
                      "name": MailboxDuplicateKey
                      "fields": []
                      "index": 8
                      "docs": [
                        Occurs when given value already exists in mailbox.
                      ]
                    }
                    {
                      "name": MailboxElementNotFound
                      "fields": []
                      "index": 9
                      "docs": [
                        Occurs when mailbox's element wasn't found in storage.
                      ]
                    }
                    {
                      "name": WaitlistDuplicateKey
                      "fields": []
                      "index": 10
                      "docs": [
                        Occurs when given value already exists in waitlist.
                      ]
                    }
                    {
                      "name": WaitlistElementNotFound
                      "fields": []
                      "index": 11
                      "docs": [
                        Occurs when waitlist's element wasn't found in storage.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 608
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  4
                  609
                ]
              }
              "docs": []
            }
          }
          {
            "id": 609
            "type": {
              "path": [
                gear_common
                scheduler
                task
                ScheduledTask
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": PauseProgram
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": RemoveCode
                      "fields": [
                        {
                          "name": null
                          "type": 263
                          "typeName": CodeId
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": RemoveFromMailbox
                      "fields": [
                        {
                          "name": null
                          "type": 0
                          "typeName": AccountId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": RemoveFromWaitlist
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": RemovePausedProgram
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": WakeMessage
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": SendDispatch
                      "fields": [
                        {
                          "name": null
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": SendUserMessage
                      "fields": [
                        {
                          "name": message_id
                          "type": 265
                          "typeName": MessageId
                          "docs": []
                        }
                        {
                          "name": to_mailbox
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": RemoveGasReservation
                      "fields": [
                        {
                          "name": null
                          "type": 264
                          "typeName": ProgramId
                          "docs": []
                        }
                        {
                          "name": null
                          "type": 325
                          "typeName": ReservationId
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": RemoveResumeSession
                      "fields": [
                        {
                          "name": null
                          "type": 4
                          "typeName": u32
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 610
            "type": {
              "path": [
                pallet_gear_scheduler
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": DuplicateTask
                      "fields": []
                      "index": 0
                      "docs": [
                        Occurs when given task already exists in task pool.
                      ]
                    }
                    {
                      "name": TaskNotFound
                      "fields": []
                      "index": 1
                      "docs": [
                        Occurs when task wasn't found in storage.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 611
            "type": {
              "path": [
                gear_common
                gas_provider
                node
                GasNode
              ]
              "params": [
                {
                  "name": ExternalId
                  "type": 0
                }
                {
                  "name": Id
                  "type": 324
                }
                {
                  "name": Balance
                  "type": 11
                }
                {
                  "name": Funds
                  "type": 6
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": External
                      "fields": [
                        {
                          "name": id
                          "type": 0
                          "typeName": ExternalId
                          "docs": []
                        }
                        {
                          "name": multiplier
                          "type": 612
                          "typeName": GasMultiplier<Funds, Balance>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": lock
                          "type": 613
                          "typeName": NodeLock<Balance>
                          "docs": []
                        }
                        {
                          "name": system_reserve
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": refs
                          "type": 615
                          "typeName": ChildrenRefs
                          "docs": []
                        }
                        {
                          "name": consumed
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                        {
                          "name": deposit
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Cut
                      "fields": [
                        {
                          "name": id
                          "type": 0
                          "typeName": ExternalId
                          "docs": []
                        }
                        {
                          "name": multiplier
                          "type": 612
                          "typeName": GasMultiplier<Funds, Balance>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": lock
                          "type": 613
                          "typeName": NodeLock<Balance>
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Reserved
                      "fields": [
                        {
                          "name": id
                          "type": 0
                          "typeName": ExternalId
                          "docs": []
                        }
                        {
                          "name": multiplier
                          "type": 612
                          "typeName": GasMultiplier<Funds, Balance>
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": lock
                          "type": 613
                          "typeName": NodeLock<Balance>
                          "docs": []
                        }
                        {
                          "name": refs
                          "type": 615
                          "typeName": ChildrenRefs
                          "docs": []
                        }
                        {
                          "name": consumed
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": SpecifiedLocal
                      "fields": [
                        {
                          "name": parent
                          "type": 324
                          "typeName": Id
                          "docs": []
                        }
                        {
                          "name": root
                          "type": 324
                          "typeName": Id
                          "docs": []
                        }
                        {
                          "name": value
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": lock
                          "type": 613
                          "typeName": NodeLock<Balance>
                          "docs": []
                        }
                        {
                          "name": system_reserve
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                        {
                          "name": refs
                          "type": 615
                          "typeName": ChildrenRefs
                          "docs": []
                        }
                        {
                          "name": consumed
                          "type": 54
                          "typeName": bool
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": UnspecifiedLocal
                      "fields": [
                        {
                          "name": parent
                          "type": 324
                          "typeName": Id
                          "docs": []
                        }
                        {
                          "name": root
                          "type": 324
                          "typeName": Id
                          "docs": []
                        }
                        {
                          "name": lock
                          "type": 613
                          "typeName": NodeLock<Balance>
                          "docs": []
                        }
                        {
                          "name": system_reserve
                          "type": 11
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 612
            "type": {
              "path": [
                gear_common
                GasMultiplier
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
                {
                  "name": Gas
                  "type": 11
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": ValuePerGas
                      "fields": [
                        {
                          "name": null
                          "type": 6
                          "typeName": Balance
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": GasPerValue
                      "fields": [
                        {
                          "name": null
                          "type": 11
                          "typeName": Gas
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 613
            "type": {
              "path": [
                gear_common
                gas_provider
                node
                NodeLock
              ]
              "params": [
                {
                  "name": Balance
                  "type": 11
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 614
                      "typeName": [Balance; "cardinality"::<LockId>()]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 614
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 4
                  "type": 11
                }
              }
              "docs": []
            }
          }
          {
            "id": 615
            "type": {
              "path": [
                gear_common
                gas_provider
                node
                ChildrenRefs
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": spec_refs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": unspec_refs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 616
            "type": {
              "path": [
                pallet_gear_gas
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Forbidden
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": NodeAlreadyExists
                      "fields": []
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": InsufficientBalance
                      "fields": []
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": NodeNotFound
                      "fields": []
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": NodeWasConsumed
                      "fields": []
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": ParentIsLost
                      "fields": []
                      "index": 5
                      "docs": [
                        Errors stating that gas tree has been invalidated
                      ]
                    }
                    {
                      "name": ParentHasNoChildren
                      "fields": []
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": UnexpectedConsumeOutput
                      "fields": []
                      "index": 7
                      "docs": [
                        Output of `"Tree"::consume` procedure that wasn't expected.
                        
                        Outputs of consumption procedure are determined. The error is returned
                        when unexpected one occurred. That signals, that algorithm works wrong
                        and expected invariants are not correct.
                      ]
                    }
                    {
                      "name": UnexpectedNodeType
                      "fields": []
                      "index": 8
                      "docs": [
                        Node type that can't occur if algorithm work well
                      ]
                    }
                    {
                      "name": ValueIsNotCaught
                      "fields": []
                      "index": 9
                      "docs": [
                        Value must have been caught, but was missed or blocked (for more info see `"ValueNode"::catch_value`).
                      ]
                    }
                    {
                      "name": ValueIsBlocked
                      "fields": []
                      "index": 10
                      "docs": [
                        Value must have been caught or moved upstream, but was blocked (for more info see `"ValueNode"::catch_value`).
                      ]
                    }
                    {
                      "name": ValueIsNotBlocked
                      "fields": []
                      "index": 11
                      "docs": [
                        Value must have been blocked, but was either moved or caught (for more info see `"ValueNode"::catch_value`).
                      ]
                    }
                    {
                      "name": ConsumedWithLock
                      "fields": []
                      "index": 12
                      "docs": [
                        `"GasTree"::consume` called on node, which has some balance locked.
                      ]
                    }
                    {
                      "name": ConsumedWithSystemReservation
                      "fields": []
                      "index": 13
                      "docs": [
                        `"GasTree"::consume` called on node, which has some system reservation.
                      ]
                    }
                    {
                      "name": TotalValueIsOverflowed
                      "fields": []
                      "index": 14
                      "docs": [
                        `"GasTree"::create` called with some value amount leading to
                        the total value overflow.
                      ]
                    }
                    {
                      "name": TotalValueIsUnderflowed
                      "fields": []
                      "index": 15
                      "docs": [
                        Either `"GasTree"::consume` or `"GasTree"::spent` called on a node creating
                        negative imbalance which leads to the total value drop below 0.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 617
            "type": {
              "path": [
                pallet_gear
                schedule
                Schedule
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": limits
                      "type": 618
                      "typeName": Limits
                      "docs": []
                    }
                    {
                      "name": instruction_weights
                      "type": 619
                      "typeName": InstructionWeights<T>
                      "docs": []
                    }
                    {
                      "name": syscall_weights
                      "type": 620
                      "typeName": SyscallWeights<T>
                      "docs": []
                    }
                    {
                      "name": memory_weights
                      "type": 621
                      "typeName": MemoryWeights<T>
                      "docs": []
                    }
                    {
                      "name": module_instantiation_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": db_write_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": db_read_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": code_instrumentation_cost
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": code_instrumentation_byte_cost
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 618
            "type": {
              "path": [
                pallet_gear
                schedule
                Limits
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": stack_height
                      "type": 117
                      "typeName": Option<u32>
                      "docs": []
                    }
                    {
                      "name": globals
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": locals
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": parameters
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": memory_pages
                      "type": 63
                      "typeName": u16
                      "docs": []
                    }
                    {
                      "name": table_size
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": br_table_size
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": subject_len
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": call_depth
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": payload_len
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": code_len
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": data_segments_amount
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 619
            "type": {
              "path": [
                pallet_gear
                schedule
                InstructionWeights
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": version
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64const
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64load
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32load
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64store
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32store
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": select
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": r#if
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": br
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": br_if
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": br_table
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": br_table_per_entry
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": call
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": call_indirect
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": call_indirect_per_param
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": call_per_local
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": local_get
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": local_set
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": local_tee
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": global_get
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": global_set
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": memory_current
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64clz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32clz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64ctz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32ctz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64popcnt
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32popcnt
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64eqz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32eqz
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32extend8s
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32extend16s
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64extend8s
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64extend16s
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64extend32s
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64extendsi32
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64extendui32
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32wrapi64
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64eq
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32eq
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64ne
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32ne
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64lts
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32lts
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64ltu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32ltu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64gts
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32gts
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64gtu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32gtu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64les
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32les
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64leu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32leu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64ges
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32ges
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64geu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32geu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64add
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32add
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64sub
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32sub
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64mul
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32mul
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64divs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32divs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64divu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32divu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64rems
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32rems
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64remu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32remu
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64and
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32and
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64or
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32or
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64xor
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32xor
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64shl
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32shl
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64shrs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32shrs
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64shru
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32shru
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64rotl
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32rotl
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i64rotr
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                    {
                      "name": i32rotr
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 620
            "type": {
              "path": [
                pallet_gear
                schedule
                SyscallWeights
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": alloc
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": free
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": free_range
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": free_range_per_page
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reserve_gas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_unreserve_gas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_system_reserve_gas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_gas_available
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_message_id
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_program_id
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_source
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_value
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_value_available
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_size
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_read
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_read_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_env_vars
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_block_height
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_block_timestamp
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_random
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_deposit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_wgas_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_init
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_push
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_push_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_commit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_commit_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_send
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_send_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_send_commit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_commit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_commit_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_reply
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_reply_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reservation_reply_commit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_push
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_wgas_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_push_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_to
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_signal_code
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_signal_from
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_input
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_input_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_push_input
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_push_input_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_input
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_input_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_push_input
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_send_push_input_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_debug
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_debug_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_reply_code
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_exit
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_leave
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_wait
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_wait_for
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_wait_up_to
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_wake
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program_payload_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program_salt_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program_wgas
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program_wgas_payload_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": gr_create_program_wgas_salt_per_byte
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 621
            "type": {
              "path": [
                pallet_gear
                schedule
                MemoryWeights
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": lazy_pages_signal_read
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": lazy_pages_signal_write
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": lazy_pages_signal_write_after_read
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": lazy_pages_host_func_read
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": lazy_pages_host_func_write
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": lazy_pages_host_func_write_after_read
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": load_page_data
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": upload_page_data
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": static_page
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": mem_grow
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": mem_grow_per_page
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                    {
                      "name": parachain_read_heuristic
                      "type": 9
                      "typeName": Weight
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 622
            "type": {
              "path": [
                gear_core
                percent
                Percent
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 4
                      "typeName": u32
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 623
            "type": {
              "path": [
                pallet_gear
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": MessageNotFound
                      "fields": []
                      "index": 0
                      "docs": [
                        Message wasn't found in the mailbox.
                      ]
                    }
                    {
                      "name": InsufficientBalance
                      "fields": []
                      "index": 1
                      "docs": [
                        Not enough balance to execute an action.
                        
                        Usually occurs when the gas_limit specified is such that the origin account can't afford the message.
                      ]
                    }
                    {
                      "name": GasLimitTooHigh
                      "fields": []
                      "index": 2
                      "docs": [
                        Gas limit too high.
                        
                        Occurs when an extrinsic's declared `gas_limit` is greater than a block's maximum gas limit.
                      ]
                    }
                    {
                      "name": ProgramAlreadyExists
                      "fields": []
                      "index": 3
                      "docs": [
                        Program already exists.
                        
                        Occurs if a program with some specific program id already exists in program storage.
                      ]
                    }
                    {
                      "name": InactiveProgram
                      "fields": []
                      "index": 4
                      "docs": [
                        Program is terminated.
                        
                        Program init failed, so such message destination is no longer unavailable.
                      ]
                    }
                    {
                      "name": NoMessageTree
                      "fields": []
                      "index": 5
                      "docs": [
                        Message gas tree is not found.
                        
                        When a message claimed from the mailbox has a corrupted or non-extant gas tree associated.
                      ]
                    }
                    {
                      "name": CodeAlreadyExists
                      "fields": []
                      "index": 6
                      "docs": [
                        Code already exists.
                        
                        Occurs when trying to save to storage a program code that has been saved there.
                      ]
                    }
                    {
                      "name": CodeDoesntExist
                      "fields": []
                      "index": 7
                      "docs": [
                        Code does not exist.
                        
                        Occurs when trying to get a program code from storage, that doesn't exist.
                      ]
                    }
                    {
                      "name": CodeTooLarge
                      "fields": []
                      "index": 8
                      "docs": [
                        The code supplied to `upload_code` or `upload_program` exceeds the limit specified in the
                        current schedule.
                      ]
                    }
                    {
                      "name": ProgramConstructionFailed
                      "fields": []
                      "index": 9
                      "docs": [
                        Failed to create a program.
                      ]
                    }
                    {
                      "name": MessageQueueProcessingDisabled
                      "fields": []
                      "index": 10
                      "docs": [
                        Message queue processing is disabled.
                      ]
                    }
                    {
                      "name": ResumePeriodLessThanMinimal
                      "fields": []
                      "index": 11
                      "docs": [
                        Block count doesn't cover MinimalResumePeriod.
                      ]
                    }
                    {
                      "name": ProgramNotFound
                      "fields": []
                      "index": 12
                      "docs": [
                        Program with the specified id is not found.
                      ]
                    }
                    {
                      "name": GearRunAlreadyInBlock
                      "fields": []
                      "index": 13
                      "docs": [
                        "Gear"::run() already included in current block.
                      ]
                    }
                    {
                      "name": ProgramRentDisabled
                      "fields": []
                      "index": 14
                      "docs": [
                        The program rent logic is disabled.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 624
            "type": {
              "path": [
                sp_arithmetic
                per_things
                Perquintill
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 11
                      "typeName": u64
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 625
            "type": {
              "path": [
                BTreeSet
              ]
              "params": [
                {
                  "name": T
                  "type": 0
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 97
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 626
            "type": {
              "path": [
                pallet_gear_staking_rewards
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": FailureToRefillPool
                      "fields": []
                      "index": 0
                      "docs": [
                        Pool not replenished due to error.
                      ]
                    }
                    {
                      "name": FailureToWithdrawFromPool
                      "fields": []
                      "index": 1
                      "docs": [
                        Failure to withdraw funds from the rewards pool.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                Error for the staking rewards pallet.
              ]
            }
          }
          {
            "id": 627
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  0
                  272
                ]
              }
              "docs": []
            }
          }
          {
            "id": 628
            "type": {
              "path": [
                pallet_gear_voucher
                internal
                VoucherInfo
              ]
              "params": [
                {
                  "name": AccountId
                  "type": 0
                }
                {
                  "name": BlockNumber
                  "type": 4
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": owner
                      "type": 0
                      "typeName": AccountId
                      "docs": []
                    }
                    {
                      "name": programs
                      "type": 269
                      "typeName": Option<BTreeSet<ProgramId>>
                      "docs": []
                    }
                    {
                      "name": code_uploading
                      "type": 54
                      "typeName": bool
                      "docs": []
                    }
                    {
                      "name": expiry
                      "type": 4
                      "typeName": BlockNumber
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 629
            "type": {
              "path": [
                pallet_gear_voucher
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": BadOrigin
                      "fields": []
                      "index": 0
                      "docs": [
                        The origin is not eligible to execute call.
                      ]
                    }
                    {
                      "name": BalanceTransfer
                      "fields": []
                      "index": 1
                      "docs": [
                        Error trying transfer balance to/from voucher account.
                      ]
                    }
                    {
                      "name": InappropriateDestination
                      "fields": []
                      "index": 2
                      "docs": [
                        Destination program is not in whitelisted set for voucher.
                      ]
                    }
                    {
                      "name": InexistentVoucher
                      "fields": []
                      "index": 3
                      "docs": [
                        Voucher with given identifier doesn't exist for given spender id.
                      ]
                    }
                    {
                      "name": IrrevocableYet
                      "fields": []
                      "index": 4
                      "docs": [
                        Voucher still valid and couldn't be revoked.
                      ]
                    }
                    {
                      "name": MaxProgramsLimitExceeded
                      "fields": []
                      "index": 5
                      "docs": [
                        Try to whitelist more programs than allowed.
                      ]
                    }
                    {
                      "name": UnknownDestination
                      "fields": []
                      "index": 6
                      "docs": [
                        Failed to query destination of the prepaid call.
                      ]
                    }
                    {
                      "name": VoucherExpired
                      "fields": []
                      "index": 7
                      "docs": [
                        Voucher has expired and couldn't be used.
                      ]
                    }
                    {
                      "name": DurationOutOfBounds
                      "fields": []
                      "index": 8
                      "docs": [
                        Voucher issue/prolongation duration out of [min; max] constants.
                      ]
                    }
                    {
                      "name": CodeUploadingEnabled
                      "fields": []
                      "index": 9
                      "docs": [
                        Voucher update function tries to cut voucher ability of code upload.
                      ]
                    }
                    {
                      "name": CodeUploadingDisabled
                      "fields": []
                      "index": 10
                      "docs": [
                        Voucher is disabled for code uploading, but requested.
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 630
            "type": {
              "path": [
                pallet_gear_bank
                pallet
                BankAccount
              ]
              "params": [
                {
                  "name": Balance
                  "type": 6
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": gas
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                    {
                      "name": value
                      "type": 6
                      "typeName": Balance
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 631
            "type": {
              "path": [
                pallet_gear_bank
                pallet
                Error
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": InsufficientBalance
                      "fields": []
                      "index": 0
                      "docs": [
                        Insufficient user balance.
                      ]
                    }
                    {
                      "name": InsufficientGasBalance
                      "fields": []
                      "index": 1
                      "docs": [
                        Insufficient user's bank account gas balance.
                      ]
                    }
                    {
                      "name": InsufficientValueBalance
                      "fields": []
                      "index": 2
                      "docs": [
                        Insufficient user's bank account gas balance.
                      ]
                    }
                    {
                      "name": InsufficientBankBalance
                      "fields": []
                      "index": 3
                      "docs": [
                        Insufficient bank account balance.
                        **Must be unreachable in Gear main protocol.**
                      ]
                    }
                    {
                      "name": InsufficientDeposit
                      "fields": []
                      "index": 4
                      "docs": [
                        Deposit of funds that will not keep bank account alive.
                        **Must be unreachable in Gear main protocol.**
                      ]
                    }
                    {
                      "name": Overflow
                      "fields": []
                      "index": 5
                      "docs": [
                        Overflow during funds transfer.
                        **Must be unreachable in Gear main protocol.**
                      ]
                    }
                  ]
                }
              }
              "docs": [
                The `Error` enum of this pallet.
              ]
            }
          }
          {
            "id": 632
            "type": {
              "path": [
                sp_runtime
                generic
                unchecked_extrinsic
                UncheckedExtrinsic
              ]
              "params": [
                {
                  "name": Address
                  "type": 94
                }
                {
                  "name": Call
                  "type": 65
                }
                {
                  "name": Signature
                  "type": 633
                }
                {
                  "name": Extra
                  "type": 636
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 13
                      "typeName": null
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 633
            "type": {
              "path": [
                sp_runtime
                MultiSignature
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Ed25519
                      "fields": [
                        {
                          "name": null
                          "type": 87
                          "typeName": "ed25519"::Signature
                          "docs": []
                        }
                      ]
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Sr25519
                      "fields": [
                        {
                          "name": null
                          "type": 104
                          "typeName": "sr25519"::Signature
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Ecdsa
                      "fields": [
                        {
                          "name": null
                          "type": 634
                          "typeName": "ecdsa"::Signature
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 634
            "type": {
              "path": [
                sp_core
                ecdsa
                Signature
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 635
                      "typeName": [u8; SIGNATURE_SERIALIZED_SIZE]
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 635
            "type": {
              "path": []
              "params": []
              "def": {
                "Array": {
                  "len": 65
                  "type": 2
                }
              }
              "docs": []
            }
          }
          {
            "id": 636
            "type": {
              "path": []
              "params": []
              "def": {
                "Tuple": [
                  637
                  638
                  639
                  640
                  641
                  642
                  644
                  645
                  646
                ]
              }
              "docs": []
            }
          }
          {
            "id": 637
            "type": {
              "path": [
                pallet_gear_staking_rewards
                extension
                StakingBlackList
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 638
            "type": {
              "path": [
                frame_system
                extensions
                check_non_zero_sender
                CheckNonZeroSender
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 639
            "type": {
              "path": [
                frame_system
                extensions
                check_spec_version
                CheckSpecVersion
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 640
            "type": {
              "path": [
                frame_system
                extensions
                check_tx_version
                CheckTxVersion
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 641
            "type": {
              "path": [
                frame_system
                extensions
                check_genesis
                CheckGenesis
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 642
            "type": {
              "path": [
                frame_system
                extensions
                check_mortality
                CheckMortality
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 643
                      "typeName": Era
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 643
            "type": {
              "path": [
                sp_runtime
                generic
                era
                Era
              ]
              "params": []
              "def": {
                "Variant": {
                  "variants": [
                    {
                      "name": Immortal
                      "fields": []
                      "index": 0
                      "docs": []
                    }
                    {
                      "name": Mortal1
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 1
                      "docs": []
                    }
                    {
                      "name": Mortal2
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 2
                      "docs": []
                    }
                    {
                      "name": Mortal3
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 3
                      "docs": []
                    }
                    {
                      "name": Mortal4
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 4
                      "docs": []
                    }
                    {
                      "name": Mortal5
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 5
                      "docs": []
                    }
                    {
                      "name": Mortal6
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 6
                      "docs": []
                    }
                    {
                      "name": Mortal7
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 7
                      "docs": []
                    }
                    {
                      "name": Mortal8
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 8
                      "docs": []
                    }
                    {
                      "name": Mortal9
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 9
                      "docs": []
                    }
                    {
                      "name": Mortal10
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 10
                      "docs": []
                    }
                    {
                      "name": Mortal11
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 11
                      "docs": []
                    }
                    {
                      "name": Mortal12
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 12
                      "docs": []
                    }
                    {
                      "name": Mortal13
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 13
                      "docs": []
                    }
                    {
                      "name": Mortal14
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 14
                      "docs": []
                    }
                    {
                      "name": Mortal15
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 15
                      "docs": []
                    }
                    {
                      "name": Mortal16
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 16
                      "docs": []
                    }
                    {
                      "name": Mortal17
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 17
                      "docs": []
                    }
                    {
                      "name": Mortal18
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 18
                      "docs": []
                    }
                    {
                      "name": Mortal19
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 19
                      "docs": []
                    }
                    {
                      "name": Mortal20
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 20
                      "docs": []
                    }
                    {
                      "name": Mortal21
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 21
                      "docs": []
                    }
                    {
                      "name": Mortal22
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 22
                      "docs": []
                    }
                    {
                      "name": Mortal23
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 23
                      "docs": []
                    }
                    {
                      "name": Mortal24
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 24
                      "docs": []
                    }
                    {
                      "name": Mortal25
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 25
                      "docs": []
                    }
                    {
                      "name": Mortal26
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 26
                      "docs": []
                    }
                    {
                      "name": Mortal27
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 27
                      "docs": []
                    }
                    {
                      "name": Mortal28
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 28
                      "docs": []
                    }
                    {
                      "name": Mortal29
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 29
                      "docs": []
                    }
                    {
                      "name": Mortal30
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 30
                      "docs": []
                    }
                    {
                      "name": Mortal31
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 31
                      "docs": []
                    }
                    {
                      "name": Mortal32
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 32
                      "docs": []
                    }
                    {
                      "name": Mortal33
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 33
                      "docs": []
                    }
                    {
                      "name": Mortal34
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 34
                      "docs": []
                    }
                    {
                      "name": Mortal35
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 35
                      "docs": []
                    }
                    {
                      "name": Mortal36
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 36
                      "docs": []
                    }
                    {
                      "name": Mortal37
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 37
                      "docs": []
                    }
                    {
                      "name": Mortal38
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 38
                      "docs": []
                    }
                    {
                      "name": Mortal39
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 39
                      "docs": []
                    }
                    {
                      "name": Mortal40
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 40
                      "docs": []
                    }
                    {
                      "name": Mortal41
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 41
                      "docs": []
                    }
                    {
                      "name": Mortal42
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 42
                      "docs": []
                    }
                    {
                      "name": Mortal43
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 43
                      "docs": []
                    }
                    {
                      "name": Mortal44
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 44
                      "docs": []
                    }
                    {
                      "name": Mortal45
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 45
                      "docs": []
                    }
                    {
                      "name": Mortal46
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 46
                      "docs": []
                    }
                    {
                      "name": Mortal47
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 47
                      "docs": []
                    }
                    {
                      "name": Mortal48
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 48
                      "docs": []
                    }
                    {
                      "name": Mortal49
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 49
                      "docs": []
                    }
                    {
                      "name": Mortal50
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 50
                      "docs": []
                    }
                    {
                      "name": Mortal51
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 51
                      "docs": []
                    }
                    {
                      "name": Mortal52
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 52
                      "docs": []
                    }
                    {
                      "name": Mortal53
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 53
                      "docs": []
                    }
                    {
                      "name": Mortal54
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 54
                      "docs": []
                    }
                    {
                      "name": Mortal55
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 55
                      "docs": []
                    }
                    {
                      "name": Mortal56
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 56
                      "docs": []
                    }
                    {
                      "name": Mortal57
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 57
                      "docs": []
                    }
                    {
                      "name": Mortal58
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 58
                      "docs": []
                    }
                    {
                      "name": Mortal59
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 59
                      "docs": []
                    }
                    {
                      "name": Mortal60
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 60
                      "docs": []
                    }
                    {
                      "name": Mortal61
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 61
                      "docs": []
                    }
                    {
                      "name": Mortal62
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 62
                      "docs": []
                    }
                    {
                      "name": Mortal63
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 63
                      "docs": []
                    }
                    {
                      "name": Mortal64
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 64
                      "docs": []
                    }
                    {
                      "name": Mortal65
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 65
                      "docs": []
                    }
                    {
                      "name": Mortal66
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 66
                      "docs": []
                    }
                    {
                      "name": Mortal67
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 67
                      "docs": []
                    }
                    {
                      "name": Mortal68
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 68
                      "docs": []
                    }
                    {
                      "name": Mortal69
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 69
                      "docs": []
                    }
                    {
                      "name": Mortal70
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 70
                      "docs": []
                    }
                    {
                      "name": Mortal71
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 71
                      "docs": []
                    }
                    {
                      "name": Mortal72
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 72
                      "docs": []
                    }
                    {
                      "name": Mortal73
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 73
                      "docs": []
                    }
                    {
                      "name": Mortal74
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 74
                      "docs": []
                    }
                    {
                      "name": Mortal75
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 75
                      "docs": []
                    }
                    {
                      "name": Mortal76
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 76
                      "docs": []
                    }
                    {
                      "name": Mortal77
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 77
                      "docs": []
                    }
                    {
                      "name": Mortal78
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 78
                      "docs": []
                    }
                    {
                      "name": Mortal79
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 79
                      "docs": []
                    }
                    {
                      "name": Mortal80
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 80
                      "docs": []
                    }
                    {
                      "name": Mortal81
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 81
                      "docs": []
                    }
                    {
                      "name": Mortal82
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 82
                      "docs": []
                    }
                    {
                      "name": Mortal83
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 83
                      "docs": []
                    }
                    {
                      "name": Mortal84
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 84
                      "docs": []
                    }
                    {
                      "name": Mortal85
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 85
                      "docs": []
                    }
                    {
                      "name": Mortal86
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 86
                      "docs": []
                    }
                    {
                      "name": Mortal87
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 87
                      "docs": []
                    }
                    {
                      "name": Mortal88
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 88
                      "docs": []
                    }
                    {
                      "name": Mortal89
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 89
                      "docs": []
                    }
                    {
                      "name": Mortal90
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 90
                      "docs": []
                    }
                    {
                      "name": Mortal91
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 91
                      "docs": []
                    }
                    {
                      "name": Mortal92
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 92
                      "docs": []
                    }
                    {
                      "name": Mortal93
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 93
                      "docs": []
                    }
                    {
                      "name": Mortal94
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 94
                      "docs": []
                    }
                    {
                      "name": Mortal95
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 95
                      "docs": []
                    }
                    {
                      "name": Mortal96
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 96
                      "docs": []
                    }
                    {
                      "name": Mortal97
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 97
                      "docs": []
                    }
                    {
                      "name": Mortal98
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 98
                      "docs": []
                    }
                    {
                      "name": Mortal99
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 99
                      "docs": []
                    }
                    {
                      "name": Mortal100
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 100
                      "docs": []
                    }
                    {
                      "name": Mortal101
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 101
                      "docs": []
                    }
                    {
                      "name": Mortal102
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 102
                      "docs": []
                    }
                    {
                      "name": Mortal103
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 103
                      "docs": []
                    }
                    {
                      "name": Mortal104
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 104
                      "docs": []
                    }
                    {
                      "name": Mortal105
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 105
                      "docs": []
                    }
                    {
                      "name": Mortal106
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 106
                      "docs": []
                    }
                    {
                      "name": Mortal107
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 107
                      "docs": []
                    }
                    {
                      "name": Mortal108
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 108
                      "docs": []
                    }
                    {
                      "name": Mortal109
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 109
                      "docs": []
                    }
                    {
                      "name": Mortal110
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 110
                      "docs": []
                    }
                    {
                      "name": Mortal111
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 111
                      "docs": []
                    }
                    {
                      "name": Mortal112
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 112
                      "docs": []
                    }
                    {
                      "name": Mortal113
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 113
                      "docs": []
                    }
                    {
                      "name": Mortal114
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 114
                      "docs": []
                    }
                    {
                      "name": Mortal115
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 115
                      "docs": []
                    }
                    {
                      "name": Mortal116
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 116
                      "docs": []
                    }
                    {
                      "name": Mortal117
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 117
                      "docs": []
                    }
                    {
                      "name": Mortal118
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 118
                      "docs": []
                    }
                    {
                      "name": Mortal119
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 119
                      "docs": []
                    }
                    {
                      "name": Mortal120
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 120
                      "docs": []
                    }
                    {
                      "name": Mortal121
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 121
                      "docs": []
                    }
                    {
                      "name": Mortal122
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 122
                      "docs": []
                    }
                    {
                      "name": Mortal123
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 123
                      "docs": []
                    }
                    {
                      "name": Mortal124
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 124
                      "docs": []
                    }
                    {
                      "name": Mortal125
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 125
                      "docs": []
                    }
                    {
                      "name": Mortal126
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 126
                      "docs": []
                    }
                    {
                      "name": Mortal127
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 127
                      "docs": []
                    }
                    {
                      "name": Mortal128
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 128
                      "docs": []
                    }
                    {
                      "name": Mortal129
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 129
                      "docs": []
                    }
                    {
                      "name": Mortal130
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 130
                      "docs": []
                    }
                    {
                      "name": Mortal131
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 131
                      "docs": []
                    }
                    {
                      "name": Mortal132
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 132
                      "docs": []
                    }
                    {
                      "name": Mortal133
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 133
                      "docs": []
                    }
                    {
                      "name": Mortal134
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 134
                      "docs": []
                    }
                    {
                      "name": Mortal135
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 135
                      "docs": []
                    }
                    {
                      "name": Mortal136
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 136
                      "docs": []
                    }
                    {
                      "name": Mortal137
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 137
                      "docs": []
                    }
                    {
                      "name": Mortal138
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 138
                      "docs": []
                    }
                    {
                      "name": Mortal139
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 139
                      "docs": []
                    }
                    {
                      "name": Mortal140
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 140
                      "docs": []
                    }
                    {
                      "name": Mortal141
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 141
                      "docs": []
                    }
                    {
                      "name": Mortal142
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 142
                      "docs": []
                    }
                    {
                      "name": Mortal143
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 143
                      "docs": []
                    }
                    {
                      "name": Mortal144
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 144
                      "docs": []
                    }
                    {
                      "name": Mortal145
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 145
                      "docs": []
                    }
                    {
                      "name": Mortal146
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 146
                      "docs": []
                    }
                    {
                      "name": Mortal147
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 147
                      "docs": []
                    }
                    {
                      "name": Mortal148
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 148
                      "docs": []
                    }
                    {
                      "name": Mortal149
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 149
                      "docs": []
                    }
                    {
                      "name": Mortal150
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 150
                      "docs": []
                    }
                    {
                      "name": Mortal151
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 151
                      "docs": []
                    }
                    {
                      "name": Mortal152
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 152
                      "docs": []
                    }
                    {
                      "name": Mortal153
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 153
                      "docs": []
                    }
                    {
                      "name": Mortal154
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 154
                      "docs": []
                    }
                    {
                      "name": Mortal155
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 155
                      "docs": []
                    }
                    {
                      "name": Mortal156
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 156
                      "docs": []
                    }
                    {
                      "name": Mortal157
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 157
                      "docs": []
                    }
                    {
                      "name": Mortal158
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 158
                      "docs": []
                    }
                    {
                      "name": Mortal159
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 159
                      "docs": []
                    }
                    {
                      "name": Mortal160
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 160
                      "docs": []
                    }
                    {
                      "name": Mortal161
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 161
                      "docs": []
                    }
                    {
                      "name": Mortal162
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 162
                      "docs": []
                    }
                    {
                      "name": Mortal163
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 163
                      "docs": []
                    }
                    {
                      "name": Mortal164
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 164
                      "docs": []
                    }
                    {
                      "name": Mortal165
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 165
                      "docs": []
                    }
                    {
                      "name": Mortal166
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 166
                      "docs": []
                    }
                    {
                      "name": Mortal167
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 167
                      "docs": []
                    }
                    {
                      "name": Mortal168
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 168
                      "docs": []
                    }
                    {
                      "name": Mortal169
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 169
                      "docs": []
                    }
                    {
                      "name": Mortal170
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 170
                      "docs": []
                    }
                    {
                      "name": Mortal171
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 171
                      "docs": []
                    }
                    {
                      "name": Mortal172
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 172
                      "docs": []
                    }
                    {
                      "name": Mortal173
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 173
                      "docs": []
                    }
                    {
                      "name": Mortal174
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 174
                      "docs": []
                    }
                    {
                      "name": Mortal175
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 175
                      "docs": []
                    }
                    {
                      "name": Mortal176
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 176
                      "docs": []
                    }
                    {
                      "name": Mortal177
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 177
                      "docs": []
                    }
                    {
                      "name": Mortal178
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 178
                      "docs": []
                    }
                    {
                      "name": Mortal179
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 179
                      "docs": []
                    }
                    {
                      "name": Mortal180
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 180
                      "docs": []
                    }
                    {
                      "name": Mortal181
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 181
                      "docs": []
                    }
                    {
                      "name": Mortal182
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 182
                      "docs": []
                    }
                    {
                      "name": Mortal183
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 183
                      "docs": []
                    }
                    {
                      "name": Mortal184
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 184
                      "docs": []
                    }
                    {
                      "name": Mortal185
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 185
                      "docs": []
                    }
                    {
                      "name": Mortal186
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 186
                      "docs": []
                    }
                    {
                      "name": Mortal187
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 187
                      "docs": []
                    }
                    {
                      "name": Mortal188
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 188
                      "docs": []
                    }
                    {
                      "name": Mortal189
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 189
                      "docs": []
                    }
                    {
                      "name": Mortal190
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 190
                      "docs": []
                    }
                    {
                      "name": Mortal191
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 191
                      "docs": []
                    }
                    {
                      "name": Mortal192
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 192
                      "docs": []
                    }
                    {
                      "name": Mortal193
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 193
                      "docs": []
                    }
                    {
                      "name": Mortal194
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 194
                      "docs": []
                    }
                    {
                      "name": Mortal195
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 195
                      "docs": []
                    }
                    {
                      "name": Mortal196
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 196
                      "docs": []
                    }
                    {
                      "name": Mortal197
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 197
                      "docs": []
                    }
                    {
                      "name": Mortal198
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 198
                      "docs": []
                    }
                    {
                      "name": Mortal199
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 199
                      "docs": []
                    }
                    {
                      "name": Mortal200
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 200
                      "docs": []
                    }
                    {
                      "name": Mortal201
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 201
                      "docs": []
                    }
                    {
                      "name": Mortal202
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 202
                      "docs": []
                    }
                    {
                      "name": Mortal203
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 203
                      "docs": []
                    }
                    {
                      "name": Mortal204
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 204
                      "docs": []
                    }
                    {
                      "name": Mortal205
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 205
                      "docs": []
                    }
                    {
                      "name": Mortal206
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 206
                      "docs": []
                    }
                    {
                      "name": Mortal207
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 207
                      "docs": []
                    }
                    {
                      "name": Mortal208
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 208
                      "docs": []
                    }
                    {
                      "name": Mortal209
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 209
                      "docs": []
                    }
                    {
                      "name": Mortal210
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 210
                      "docs": []
                    }
                    {
                      "name": Mortal211
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 211
                      "docs": []
                    }
                    {
                      "name": Mortal212
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 212
                      "docs": []
                    }
                    {
                      "name": Mortal213
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 213
                      "docs": []
                    }
                    {
                      "name": Mortal214
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 214
                      "docs": []
                    }
                    {
                      "name": Mortal215
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 215
                      "docs": []
                    }
                    {
                      "name": Mortal216
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 216
                      "docs": []
                    }
                    {
                      "name": Mortal217
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 217
                      "docs": []
                    }
                    {
                      "name": Mortal218
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 218
                      "docs": []
                    }
                    {
                      "name": Mortal219
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 219
                      "docs": []
                    }
                    {
                      "name": Mortal220
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 220
                      "docs": []
                    }
                    {
                      "name": Mortal221
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 221
                      "docs": []
                    }
                    {
                      "name": Mortal222
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 222
                      "docs": []
                    }
                    {
                      "name": Mortal223
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 223
                      "docs": []
                    }
                    {
                      "name": Mortal224
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 224
                      "docs": []
                    }
                    {
                      "name": Mortal225
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 225
                      "docs": []
                    }
                    {
                      "name": Mortal226
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 226
                      "docs": []
                    }
                    {
                      "name": Mortal227
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 227
                      "docs": []
                    }
                    {
                      "name": Mortal228
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 228
                      "docs": []
                    }
                    {
                      "name": Mortal229
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 229
                      "docs": []
                    }
                    {
                      "name": Mortal230
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 230
                      "docs": []
                    }
                    {
                      "name": Mortal231
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 231
                      "docs": []
                    }
                    {
                      "name": Mortal232
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 232
                      "docs": []
                    }
                    {
                      "name": Mortal233
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 233
                      "docs": []
                    }
                    {
                      "name": Mortal234
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 234
                      "docs": []
                    }
                    {
                      "name": Mortal235
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 235
                      "docs": []
                    }
                    {
                      "name": Mortal236
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 236
                      "docs": []
                    }
                    {
                      "name": Mortal237
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 237
                      "docs": []
                    }
                    {
                      "name": Mortal238
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 238
                      "docs": []
                    }
                    {
                      "name": Mortal239
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 239
                      "docs": []
                    }
                    {
                      "name": Mortal240
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 240
                      "docs": []
                    }
                    {
                      "name": Mortal241
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 241
                      "docs": []
                    }
                    {
                      "name": Mortal242
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 242
                      "docs": []
                    }
                    {
                      "name": Mortal243
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 243
                      "docs": []
                    }
                    {
                      "name": Mortal244
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 244
                      "docs": []
                    }
                    {
                      "name": Mortal245
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 245
                      "docs": []
                    }
                    {
                      "name": Mortal246
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 246
                      "docs": []
                    }
                    {
                      "name": Mortal247
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 247
                      "docs": []
                    }
                    {
                      "name": Mortal248
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 248
                      "docs": []
                    }
                    {
                      "name": Mortal249
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 249
                      "docs": []
                    }
                    {
                      "name": Mortal250
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 250
                      "docs": []
                    }
                    {
                      "name": Mortal251
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 251
                      "docs": []
                    }
                    {
                      "name": Mortal252
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 252
                      "docs": []
                    }
                    {
                      "name": Mortal253
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 253
                      "docs": []
                    }
                    {
                      "name": Mortal254
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 254
                      "docs": []
                    }
                    {
                      "name": Mortal255
                      "fields": [
                        {
                          "name": null
                          "type": 2
                          "typeName": null
                          "docs": []
                        }
                      ]
                      "index": 255
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 644
            "type": {
              "path": [
                vara_runtime
                CustomCheckNonce
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 74
                      "typeName": "T"::Nonce
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 645
            "type": {
              "path": [
                frame_system
                extensions
                check_weight
                CheckWeight
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 646
            "type": {
              "path": [
                pallet_gear_payment
                CustomChargeTransactionPayment
              ]
              "params": [
                {
                  "name": T
                  "type": 647
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 648
                      "typeName": ChargeTransactionPayment<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
          {
            "id": 647
            "type": {
              "path": [
                vara_runtime
                Runtime
              ]
              "params": []
              "def": {
                "Composite": {
                  "fields": []
                }
              }
              "docs": []
            }
          }
          {
            "id": 648
            "type": {
              "path": [
                pallet_transaction_payment
                ChargeTransactionPayment
              ]
              "params": [
                {
                  "name": T
                  "type": null
                }
              ]
              "def": {
                "Composite": {
                  "fields": [
                    {
                      "name": null
                      "type": 46
                      "typeName": BalanceOf<T>
                      "docs": []
                    }
                  ]
                }
              }
              "docs": []
            }
          }
        ]
      }
      "pallets": [
        {
          "name": System
          "storage": {
            "prefix": System
            "items": [
              {
                "name": Account
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 3
                  }
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080
                "docs": [
                   The full account information for a particular account ID.
                ]
              }
              {
                "name": ExtrinsicCount
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Total extrinsics count for the current block.
                ]
              }
              {
                "name": BlockWeight
                "modifier": Default
                "type": {
                  "Plain": 8
                }
                "fallback": 0x000000000000
                "docs": [
                   The current weight for the block.
                ]
              }
              {
                "name": AllExtrinsicsLen
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Total length (in bytes) for all extrinsics put together, for the current block.
                ]
              }
              {
                "name": BlockHash
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 12
                  }
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   Map of block numbers to block hashes.
                ]
              }
              {
                "name": ExtrinsicData
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 13
                  }
                }
                "fallback": 0x00
                "docs": [
                   Extrinsics data for the current block (maps an extrinsic's index to its data).
                ]
              }
              {
                "name": Number
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The current block number being processed. Set by `execute_block`.
                ]
              }
              {
                "name": ParentHash
                "modifier": Default
                "type": {
                  "Plain": 12
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   Hash of the previous block.
                ]
              }
              {
                "name": Digest
                "modifier": Default
                "type": {
                  "Plain": 14
                }
                "fallback": 0x00
                "docs": [
                   Digest of the current block, also part of the block header.
                ]
              }
              {
                "name": Events
                "modifier": Default
                "type": {
                  "Plain": 18
                }
                "fallback": 0x00
                "docs": [
                   Events deposited for the current block.
                  
                   "NOTE": The item is unbound and should therefore never be read on chain.
                   It could otherwise inflate the PoV size of a block.
                  
                   Events have a large in-memory size. Box the events to not go out-of-memory
                   just in case someone still reads them from within the runtime.
                ]
              }
              {
                "name": EventCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The number of events in the `Events<T>` list.
                ]
              }
              {
                "name": EventTopics
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 12
                    "value": 337
                  }
                }
                "fallback": 0x00
                "docs": [
                   Mapping between a topic (represented by "T"::Hash) and a vector of indexes
                   of events in the `<Events<T>>` list.
                  
                   All topic vectors have deterministic storage locations depending on the topic. This
                   allows light-clients to leverage the changes trie storage tracking mechanism and
                   in case of changes fetch the list of events of interest.
                  
                   The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just
                   the `EventIndex` then in case if the topic has the same contents on the next block
                   no notification will be triggered thus the event might be lost.
                ]
              }
              {
                "name": LastRuntimeUpgrade
                "modifier": Optional
                "type": {
                  "Plain": 338
                }
                "fallback": 0x00
                "docs": [
                   Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.
                ]
              }
              {
                "name": UpgradedToU32RefCount
                "modifier": Default
                "type": {
                  "Plain": 54
                }
                "fallback": 0x00
                "docs": [
                   True if we have upgraded so that `type RefCount` is `u32`. False (default) if not.
                ]
              }
              {
                "name": UpgradedToTripleRefCount
                "modifier": Default
                "type": {
                  "Plain": 54
                }
                "fallback": 0x00
                "docs": [
                   True if we have upgraded so that AccountInfo contains three types of `RefCount`. False
                   (default) if not.
                ]
              }
              {
                "name": ExecutionPhase
                "modifier": Optional
                "type": {
                  "Plain": 336
                }
                "fallback": 0x00
                "docs": [
                   The execution phase of the block.
                ]
              }
            ]
          }
          "calls": {
            "type": 66
          }
          "events": {
            "type": 21
          }
          "constants": [
            {
              "name": BlockWeights
              "type": 340
              "value": 0x025b1f5d00070010a5d4e813ffffffffffffffffc2a0a91d000107d02f9b313313ec51b81e85eb51380107004429353a130000000000000040010000c2a0a91d000107d0fb16d1e113eb51b81e85eb51f801070010a5d4e813ffffffffffffffff010700cc7b9fae13ffffffffffffffbfc2a0a91d00000000
              "docs": [
                 Block & extrinsics "weights": base values and limits.
              ]
            }
            {
              "name": BlockLength
              "type": 343
              "value": 0x000014000000500000005000
              "docs": [
                 The maximum length of a block (in bytes).
              ]
            }
            {
              "name": BlockHashCount
              "type": 4
              "value": 0x60090000
              "docs": [
                 Maximum number of block number to block hash mappings to keep (oldest pruned first).
              ]
            }
            {
              "name": DbWeight
              "type": 345
              "value": 0x40787d010000000000e1f50500000000
              "docs": [
                 The weight of runtime database operations the runtime can invoke.
              ]
            }
            {
              "name": Version
              "type": 346
              "value": 0x10766172611076617261010000008c0500000100000040cbca25e39f14238702000000f3ff14d5ab5270590300000017a6bc0d0062aeb30100000018ef58a3b67ba7700100000029ca33476f4108aa01000000f757f704c8ea14fe01000000df6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000ed99c5acb25eedf503000000bc9d89904f5b923f0100000037c8bb1350a9a2a804000000ff8dc88037f26223020000000100000001
              "docs": [
                 Get the chain's current version.
              ]
            }
            {
              "name": SS58Prefix
              "type": 63
              "value": 0x8900
              "docs": [
                 The designated SS58 prefix of this chain.
                
                 This replaces the ss58Format property declared in the chain spec. Reason is
                 that the runtime should know about the prefix in order to make use of it as
                 an identifier of the chain.
              ]
            }
          ]
          "errors": {
            "type": 350
          }
          "index": 0
        }
        {
          "name": Timestamp
          "storage": {
            "prefix": Timestamp
            "items": [
              {
                "name": Now
                "modifier": Default
                "type": {
                  "Plain": 11
                }
                "fallback": 0x0000000000000000
                "docs": [
                   The current time for the current block.
                ]
              }
              {
                "name": DidUpdate
                "modifier": Default
                "type": {
                  "Plain": 54
                }
                "fallback": 0x00
                "docs": [
                   Whether the timestamp has been updated in this block.
                  
                   This value is updated to `true` upon successful submission of a timestamp by a node.
                   It is then checked at the end of each block execution in the `on_finalize` hook.
                ]
              }
            ]
          }
          "calls": {
            "type": 70
          }
          "events": null
          "constants": [
            {
              "name": MinimumPeriod
              "type": 11
              "value": 0xdc05000000000000
              "docs": [
                 The minimum period between blocks.
                
                 Be aware that this is different to the *expected* period that the block production
                 apparatus provides. Your chosen consensus system will generally work with this to
                 determine a sensible block time. For example, in the Aura pallet it will be double this
                 period on default settings.
              ]
            }
          ]
          "errors": null
          "index": 1
        }
        {
          "name": Authorship
          "storage": {
            "prefix": Authorship
            "items": [
              {
                "name": Author
                "modifier": Optional
                "type": {
                  "Plain": 0
                }
                "fallback": 0x00
                "docs": [
                   Author of current block.
                ]
              }
            ]
          }
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 2
        }
        {
          "name": AuthorityDiscovery
          "storage": {
            "prefix": AuthorityDiscovery
            "items": [
              {
                "name": Keys
                "modifier": Default
                "type": {
                  "Plain": 351
                }
                "fallback": 0x00
                "docs": [
                   Keys of the current authority set.
                ]
              }
              {
                "name": NextKeys
                "modifier": Default
                "type": {
                  "Plain": 351
                }
                "fallback": 0x00
                "docs": [
                   Keys of the next authority set.
                ]
              }
            ]
          }
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 9
        }
        {
          "name": Babe
          "storage": {
            "prefix": Babe
            "items": [
              {
                "name": EpochIndex
                "modifier": Default
                "type": {
                  "Plain": 11
                }
                "fallback": 0x0000000000000000
                "docs": [
                   Current epoch index.
                ]
              }
              {
                "name": Authorities
                "modifier": Default
                "type": {
                  "Plain": 353
                }
                "fallback": 0x00
                "docs": [
                   Current epoch authorities.
                ]
              }
              {
                "name": GenesisSlot
                "modifier": Default
                "type": {
                  "Plain": 76
                }
                "fallback": 0x0000000000000000
                "docs": [
                   The slot at which the first epoch actually started. This is 0
                   until the first block of the chain.
                ]
              }
              {
                "name": CurrentSlot
                "modifier": Default
                "type": {
                  "Plain": 76
                }
                "fallback": 0x0000000000000000
                "docs": [
                   Current slot number.
                ]
              }
              {
                "name": Randomness
                "modifier": Default
                "type": {
                  "Plain": 1
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   The epoch randomness for the *current* epoch.
                  
                   # Security
                  
                   This MUST NOT be used for gambling, as it can be influenced by a
                   malicious validator in the short term. It MAY be used in many
                   cryptographic protocols, however, so long as one remembers that this
                   (like everything else on-chain) it is public. For example, it can be
                   used where a number is needed that cannot have been chosen by an
                   adversary, for purposes such as public-coin zero-knowledge proofs.
                ]
              }
              {
                "name": PendingEpochConfigChange
                "modifier": Optional
                "type": {
                  "Plain": 78
                }
                "fallback": 0x00
                "docs": [
                   Pending epoch configuration change that will be applied when the next epoch is enacted.
                ]
              }
              {
                "name": NextRandomness
                "modifier": Default
                "type": {
                  "Plain": 1
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   Next epoch randomness.
                ]
              }
              {
                "name": NextAuthorities
                "modifier": Default
                "type": {
                  "Plain": 353
                }
                "fallback": 0x00
                "docs": [
                   Next epoch authorities.
                ]
              }
              {
                "name": SegmentIndex
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Randomness under construction.
                  
                   We make a trade-off between storage accesses and list length.
                   We store the under-construction randomness in segments of up to
                   `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.
                  
                   Once a segment reaches this length, we begin the next one.
                   We reset all segments and return to `0` at the beginning of every
                   epoch.
                ]
              }
              {
                "name": UnderConstruction
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 356
                  }
                }
                "fallback": 0x00
                "docs": [
                   TWOX-"NOTE": `SegmentIndex` is an increasing integer, so this is okay.
                ]
              }
              {
                "name": Initialized
                "modifier": Optional
                "type": {
                  "Plain": 358
                }
                "fallback": 0x00
                "docs": [
                   Temporary value (cleared at block finalization) which is `Some`
                   if per-block initialization has already been called for current block.
                ]
              }
              {
                "name": AuthorVrfRandomness
                "modifier": Default
                "type": {
                  "Plain": 291
                }
                "fallback": 0x00
                "docs": [
                   This field should always be populated during block processing unless
                   secondary plain slots are enabled (which don't contain a VRF output).
                  
                   It is set in `on_finalize`, before it will contain the value from the last block.
                ]
              }
              {
                "name": EpochStart
                "modifier": Default
                "type": {
                  "Plain": 137
                }
                "fallback": 0x0000000000000000
                "docs": [
                   The block numbers when the last and current epoch have started, respectively `N-1` and
                   `N`.
                   "NOTE": We track this is in order to annotate the block number when a given pool of
                   entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in
                   slots, which may be skipped, the block numbers may not line up with the slot numbers.
                ]
              }
              {
                "name": Lateness
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   How late the current block is compared to its parent.
                  
                   This entry is populated as part of block execution and is cleaned up
                   on block finalization. Querying this storage entry outside of block
                   execution context should always yield zero.
                ]
              }
              {
                "name": EpochConfig
                "modifier": Optional
                "type": {
                  "Plain": 364
                }
                "fallback": 0x00
                "docs": [
                   The configuration for the current epoch. Should never be `None` as it is initialized in
                   genesis.
                ]
              }
              {
                "name": NextEpochConfig
                "modifier": Optional
                "type": {
                  "Plain": 364
                }
                "fallback": 0x00
                "docs": [
                   The configuration for the next epoch, `None` if the config will not change
                   (you can fallback to `EpochConfig` instead in that case).
                ]
              }
              {
                "name": SkippedEpochs
                "modifier": Default
                "type": {
                  "Plain": 365
                }
                "fallback": 0x00
                "docs": [
                   A list of the last 100 skipped epochs and the corresponding session index
                   when the epoch was skipped.
                  
                   This is only used for validating equivocation proofs. An equivocation proof
                   must contains a key-ownership proof for a given session, therefore we need a
                   way to tie together sessions and epoch indices, i.e. we need to validate that
                   a validator was the owner of a given key on a given session, and what the
                   active epoch index was during that session.
                ]
              }
            ]
          }
          "calls": {
            "type": 71
          }
          "events": null
          "constants": [
            {
              "name": EpochDuration
              "type": 11
              "value": 0x6009000000000000
              "docs": [
                 The amount of time, in slots, that each epoch should last.
                 "NOTE": Currently it is not possible to change the epoch duration after
                 the chain has started. Attempting to do so will brick block production.
              ]
            }
            {
              "name": ExpectedBlockTime
              "type": 11
              "value": 0xb80b000000000000
              "docs": [
                 The expected average block time at which BABE should be creating
                 blocks. Since BABE is probabilistic it is not trivial to figure out
                 what the expected average block time should be based on the slot
                 duration and the security parameter `c` (where `1 - c` represents
                 the probability of a slot being empty).
              ]
            }
            {
              "name": MaxAuthorities
              "type": 4
              "value": 0xa0860100
              "docs": [
                 Max number of authorities allowed
              ]
            }
            {
              "name": MaxNominators
              "type": 4
              "value": 0x00010000
              "docs": [
                 The maximum number of nominators for each validator.
              ]
            }
          ]
          "errors": {
            "type": 368
          }
          "index": 3
        }
        {
          "name": Grandpa
          "storage": {
            "prefix": Grandpa
            "items": [
              {
                "name": State
                "modifier": Default
                "type": {
                  "Plain": 369
                }
                "fallback": 0x00
                "docs": [
                   State of the current authority set.
                ]
              }
              {
                "name": PendingChange
                "modifier": Optional
                "type": {
                  "Plain": 370
                }
                "fallback": 0x00
                "docs": [
                   Pending "change": (signaled at, scheduled change).
                ]
              }
              {
                "name": NextForced
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   next block number where we can force a change.
                ]
              }
              {
                "name": Stalled
                "modifier": Optional
                "type": {
                  "Plain": 137
                }
                "fallback": 0x00
                "docs": [
                   `true` if we are currently stalled.
                ]
              }
              {
                "name": CurrentSetId
                "modifier": Default
                "type": {
                  "Plain": 11
                }
                "fallback": 0x0000000000000000
                "docs": [
                   The number of changes (both in terms of keys and underlying economic responsibilities)
                   in the set of Grandpa validators from genesis.
                ]
              }
              {
                "name": SetIdSession
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 11
                    "value": 4
                  }
                }
                "fallback": 0x00
                "docs": [
                   A mapping from grandpa set ID to the index of the *most recent* session for which its
                   members were responsible.
                  
                   This is only used for validating equivocation proofs. An equivocation proof must
                   contains a key-ownership proof for a given session, therefore we need a way to tie
                   together sessions and GRANDPA set ids, i.e. we need to validate that a validator
                   was the owner of a given key on a given session, and what the active set ID was
                   during that session.
                  
                   TWOX-"NOTE": `SetId` is not under user control.
                ]
              }
            ]
          }
          "calls": {
            "type": 81
          }
          "events": {
            "type": 30
          }
          "constants": [
            {
              "name": MaxAuthorities
              "type": 4
              "value": 0xa0860100
              "docs": [
                 Max Authorities in use
              ]
            }
            {
              "name": MaxNominators
              "type": 4
              "value": 0x00010000
              "docs": [
                 The maximum number of nominators for each validator.
              ]
            }
            {
              "name": MaxSetIdSessionEntries
              "type": 11
              "value": 0x5400000000000000
              "docs": [
                 The maximum number of entries to keep in the set id to session index mapping.
                
                 Since the `SetIdSession` map is only used for validating equivocations this
                 value should relate to the bonding duration of whatever staking system is
                 being used (if any). If equivocation handling is not enabled then this value
                 can be zero.
              ]
            }
          ]
          "errors": {
            "type": 372
          }
          "index": 4
        }
        {
          "name": Balances
          "storage": {
            "prefix": Balances
            "items": [
              {
                "name": TotalIssuance
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The total units issued in the system.
                ]
              }
              {
                "name": InactiveIssuance
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The total units of outstanding deactivated balance in the system.
                ]
              }
              {
                "name": Account
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 5
                  }
                }
                "fallback": 0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080
                "docs": [
                   The Balances pallet example of storing the balance of an account.
                  
                   # Example
                  
                   ```nocompile
                    impl "pallet_balances"::Config for Runtime {
                      type AccountStore = StorageMapShim<"Self"::Account<Runtime>, "frame_system"::Provider<Runtime>, AccountId, "Self"::AccountData<Balance>>
                    }
                   ```
                  
                   You can also store the balance of an account in the `System` pallet.
                  
                   # Example
                  
                   ```nocompile
                    impl "pallet_balances"::Config for Runtime {
                     type AccountStore = System
                    }
                   ```
                  
                   But this comes with tradeoffs, storing account balances in the system pallet stores
                   `frame_system` data alongside the account data contrary to storing account balances in the
                   `Balances` pallet, which uses a `StorageMap` to store balances data only.
                   "NOTE": This is only used in the case that this pallet is used to store balances.
                ]
              }
              {
                "name": Locks
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 373
                  }
                }
                "fallback": 0x00
                "docs": [
                   Any liquidity locks on some account balances.
                   "NOTE": Should only be accessed when setting, changing and freeing a lock.
                ]
              }
              {
                "name": Reserves
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 377
                  }
                }
                "fallback": 0x00
                "docs": [
                   Named reserves on some account balances.
                ]
              }
              {
                "name": Holds
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 380
                  }
                }
                "fallback": 0x00
                "docs": [
                   Holds on account balances.
                ]
              }
              {
                "name": Freezes
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 385
                  }
                }
                "fallback": 0x00
                "docs": [
                   Freeze locks on account balances.
                ]
              }
            ]
          }
          "calls": {
            "type": 93
          }
          "events": {
            "type": 35
          }
          "constants": [
            {
              "name": ExistentialDeposit
              "type": 6
              "value": 0x0010a5d4e80000000000000000000000
              "docs": [
                 The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!
                
                 If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for
                 this pallet. However, you do so at your own "risk": this will open up a major DoS vector.
                 In case you have multiple sources of provider references, you may also get unexpected
                 behaviour if you set this to zero.
                
                 Bottom "line": Do yourself a favour and make it at least one!
              ]
            }
            {
              "name": MaxLocks
              "type": 4
              "value": 0x32000000
              "docs": [
                 The maximum number of locks that should exist on an account.
                 Not strictly enforced, but used for weight estimation.
              ]
            }
            {
              "name": MaxReserves
              "type": 4
              "value": 0x32000000
              "docs": [
                 The maximum number of named reserves that can exist on an account.
              ]
            }
            {
              "name": MaxHolds
              "type": 4
              "value": 0x02000000
              "docs": [
                 The maximum number of holds that can exist on an account at any time.
              ]
            }
            {
              "name": MaxFreezes
              "type": 4
              "value": 0x08000000
              "docs": [
                 The maximum number of individual freeze locks that can exist on an account at any time.
              ]
            }
          ]
          "errors": {
            "type": 390
          }
          "index": 5
        }
        {
          "name": Vesting
          "storage": {
            "prefix": Vesting
            "items": [
              {
                "name": Vesting
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 391
                  }
                }
                "fallback": 0x00
                "docs": [
                   Information regarding the vesting of a given account.
                ]
              }
              {
                "name": StorageVersion
                "modifier": Default
                "type": {
                  "Plain": 393
                }
                "fallback": 0x00
                "docs": [
                   Storage version of the pallet.
                  
                   New networks start with latest version, as determined by the genesis build.
                ]
              }
            ]
          }
          "calls": {
            "type": 98
          }
          "events": {
            "type": 37
          }
          "constants": [
            {
              "name": MinVestedTransfer
              "type": 6
              "value": 0x00a0724e180900000000000000000000
              "docs": [
                 The minimum amount transferred to call `vested_transfer`.
              ]
            }
            {
              "name": MaxVestingSchedules
              "type": 4
              "value": 0x1c000000
              "docs": []
            }
          ]
          "errors": {
            "type": 394
          }
          "index": 10
        }
        {
          "name": TransactionPayment
          "storage": {
            "prefix": TransactionPayment
            "items": [
              {
                "name": NextFeeMultiplier
                "modifier": Default
                "type": {
                  "Plain": 395
                }
                "fallback": 0x000064a7b3b6e00d0000000000000000
                "docs": []
              }
              {
                "name": StorageVersion
                "modifier": Default
                "type": {
                  "Plain": 396
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": null
          "events": {
            "type": 38
          }
          "constants": [
            {
              "name": OperationalFeeMultiplier
              "type": 2
              "value": 0x05
              "docs": [
                 A fee mulitplier for `Operational` extrinsics to compute virtual tip to boost their
                 `priority`
                
                 This value is multipled by the `final_fee` to obtain a virtual tip that is later
                 added to a tip component in regular `priority` calculations.
                 It means that a `Normal` transaction can front-run a similarly-sized `Operational`
                 extrinsic (with no tip), by including a tip value greater than the virtual tip.
                
                 ```rust,ignore
                 // For `Normal`
                 let priority = priority_calc(tip);
                
                 // For `Operational`
                 let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;
                 let priority = priority_calc(tip + virtual_tip);
                 ```
                
                 Note that since we use `final_fee` the multiplier applies also to the regular `tip`
                 sent with the transaction. So, not only does the transaction get a priority bump based
                 on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`
                 transactions.
              ]
            }
          ]
          "errors": null
          "index": 6
        }
        {
          "name": BagsList
          "storage": {
            "prefix": BagsList
            "items": [
              {
                "name": ListNodes
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 397
                  }
                }
                "fallback": 0x00
                "docs": [
                   A single node, within some bag.
                  
                   Nodes store links forward and back within their respective bags.
                ]
              }
              {
                "name": CounterForListNodes
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": ListBags
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 11
                    "value": 398
                  }
                }
                "fallback": 0x00
                "docs": [
                   A bag stored in storage.
                  
                   Stores a `Bag` struct, which stores head and tail pointers to itself.
                ]
              }
            ]
          }
          "calls": {
            "type": 100
          }
          "events": {
            "type": 39
          }
          "constants": [
            {
              "name": BagThresholds
              "type": 399
              "value": 0x210300a0724e1809000007a1dc61c70900007005739f830a00000df0a0044e0b00008cc4dfa1270c0000d3f8259c110d0000877b712e0d0e0000b6c26fab1b0f00007fbd457f3e100000940e7a317711000083230467c712000067ee82e430140000ef3c9e90b51500000fe1957657170000601d02c9181900008109c9e4fb1a000017ea4c54031d0000c7c4d7d2311f0000daca48508a210000f98d08f50f240000ab514926c6260000b332998ab0290000ae4bcc0ed32c0000a87445eb31300000d4baa4a9d13300007736e32ab73700005578e4ade73b00003e6686d668400000940839b540450000988128cf754a0000232c04270f500000f7b26e461456000053d523488d5c0000fb81e1e282630000fff82275fe6a000025bfbd110a730000f65d718db07b000044327c8dfd84000070ea4897fd8e000099cf4921be990000258b18a54da50000eecef2b2bbb100000a1cae0619bf000028dd3e9e77cd00007628f1d1eadc0000cdc4736e87ed0000a481d8d063ff00001b94af04981201002d8166e43d2701004729163c713d010060d0eeee4f550100ad83741ffa6e0100d907c25a928a0100598d0cc73da801008fc9a65524c80100edc8c6f870ea010041de56dd510f0200f1841fa9f836020024e69dbd9a610200e2fbe07f718f02004111cea5bac0020019a53489b8f5020015872181b22e0300f06fe941f56b030088606c44d3ad030055cc1c35a5f40300e507606bca4004004cb1e869a992040013deb768b0ea040087d87ee955490500922e295719af0500bad965b1831c0600366e1645289206007b9c9c72a510070035fc1083a5980700a62a828ddf2a0800d3db706d18c80800dcb2d4cb2371090072a90e3ce5260a006aa2486e51ea0a00bc9bde786fbc0b00faf78c3a5a9e0c00e7af40d741910d007d178a516d960e00736ed9423caf0f0026e7d5b428dd10008d5f4c1ec921120074f26286d27e1300360cf2d01af61400ec121b379b891600074170ef723b1800d55a4109ea0d1a00b8c1e57e74031c005f6f2683b51e1e0010fc390e8362200002681aafe9d12200f06358a630702500ecc4f24fde402800682f23e2bc472b0056658387df882e00ce9c69dba7083200567ddecfcbcb3500f88b1d055cd73900f2a8299bca303e00c89aa386f2dd42003c57c1721fe54700f8b8023b164d4d0038980c081e1d5300a8e0ee1b0a5d5900b866065b441560007c28a99fd84e6700d4a7dce780136f00b0947b6db26d7700a0996bbaab6880000074d7cb83108a00c05bce583a729400b8093252c99b9f00207582b3379cab0040e2dbbdad83b800987763b88a63c60088d46a537c4ed500c8d5c6cd9758e50010c933fe7497f600b0f82c654b220901801f5a6e11121d01a0ada60b9e81320120c240d7cc8d490140a424eda4556201f0e681b082fa7c01902d36b544a09901f006d4097c6db80140393823a08bd901904393af4627fd01605c0e9c5f70230220e5d99d759a4c02a0c38695f3dc78022080142a6f73a80200392400f99ddb02e0e44df972a11203e024b4efecc74d03e002ae6a08618d03e022c1d263c2d10340cd3eb50d481b044063b0b200556a0480e0eabea853bf0440b82c6672b61a05409026d864f87c05c02b5088c79de605c0e58242d4345806404b97a37656d2060059caf719a7550700de109486d7e207009656d4cfa57a0800d30eff53de1d0900249466cf5ccd0980c0bb3a840d8a0a8087db9878ee540b807c7386cc102f0c8046dea2299a190d809e0a7f4ec6150e805878afb7e8240f000db9d4686e48100013bc01d8df8111007a7115fee2d21200630ecf8e3d3d14002cb9995bd7c21500c6e545e4bc651700367f24192228190051763a52650c1b007fc88a7f12151d00f6ebc196e6441f001631e042d39e21004681d9da02262400d66a80a4dcdd26005c1f796909ca29002a795f6478ee2c007ed9c18c644f30008a5b12495af13300f01c398e3dd9370094f20575500c3c006c905e4e3a90400044c9b03f0f6b4500e0fde77158a34a001011eadd1c4050000c4974c2ea485600b48b14d0e1c55c00b48df018bebf6300c42614d3e33f6b0034691bfd6b5073004cd73df631fc7b00d8b6071ce24e8500d0cc6e8109558f00a8916ad4261c9a00e830cf88bcb2a500b888e0606428b200582ce96de48dbf0030a31ba545f5cd0068632427ec71dd00883b1c5bb118eeffffffffffffffff
              "docs": [
                 The list of thresholds separating the various bags.
                
                 Ids are separated into unsorted bags according to their score. This specifies the
                 thresholds separating the bags. An id's bag is the largest bag for which the id's score
                 is less than or equal to its upper threshold.
                
                 When ids are iterated, higher bags are iterated completely before lower bags. This means
                 that iteration is _semi-"sorted_": ids of higher score tend to come before ids of lower
                 score, but peer ids within a particular bag are sorted in insertion order.
                
                 # Expressing the constant
                
                 This constant must be sorted in strictly increasing order. Duplicate items are not
                 permitted.
                
                 There is an implied upper limit of `"Score"::MAX`; that value does not need to be
                 specified within the bag. For any two threshold lists, if one ends with
                 `"Score"::MAX`, the other one does not, and they are otherwise equal, the two
                 lists will behave identically.
                
                 # Calculation
                
                 It is recommended to generate the set of thresholds in a geometric series, such that
                 there exists some constant ratio such that `threshold[k + 1] == (threshold[k] *
                 constant_ratio).max(threshold[k] + 1)` for all `k`.
                
                 The helpers in the `/utils/frame/generate-bags` module can simplify this calculation.
                
                 # Examples
                
                 - If `"BagThresholds"::get().is_empty()`, then all ids are put into the same bag, and
                   iteration is strictly in insertion order.
                 - If `"BagThresholds"::get().len() == 64`, and the thresholds are determined according to
                   the procedure given above, then the constant ratio is equal to 2.
                 - If `"BagThresholds"::get().len() == 200`, and the thresholds are determined according to
                   the procedure given above, then the constant ratio is approximately equal to 1.248.
                 - If the threshold list begins `[1, 2, 3, ...]`, then an id with score 0 or 1 will fall
                   into bag 0, an id with score 2 will fall into bag 1, etc.
                
                 # Migration
                
                 In the event that this list ever changes, a copy of the old bags list must be retained.
                 With that `"List"::migrate` can be called, which will perform the appropriate migration.
              ]
            }
          ]
          "errors": {
            "type": 400
          }
          "index": 11
        }
        {
          "name": ImOnline
          "storage": {
            "prefix": ImOnline
            "items": [
              {
                "name": HeartbeatAfter
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The block number after which it's ok to send heartbeats in the current
                   session.
                  
                   At the beginning of each session we set this to a value that should fall
                   roughly in the middle of the session duration. The idea is to first wait for
                   the validators to produce a block in the current session, so that the
                   heartbeat later on will not be necessary.
                  
                   This value will only be used as a fallback if we fail to get a proper session
                   progress estimate from `NextSessionRotation`, as those estimates should be
                   more accurate then the value we calculate for `HeartbeatAfter`.
                ]
              }
              {
                "name": Keys
                "modifier": Default
                "type": {
                  "Plain": 402
                }
                "fallback": 0x00
                "docs": [
                   The current set of keys that may issue a heartbeat.
                ]
              }
              {
                "name": ReceivedHeartbeats
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 137
                    "value": 54
                  }
                }
                "fallback": 0x00
                "docs": [
                   For each session index, we keep a mapping of `SessionIndex` and `AuthIndex`.
                ]
              }
              {
                "name": AuthoredBlocks
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 4
                  }
                }
                "fallback": 0x00000000
                "docs": [
                   For each session index, we keep a mapping of `ValidatorId<T>` to the
                   number of blocks authored by the given authority.
                ]
              }
            ]
          }
          "calls": {
            "type": 101
          }
          "events": {
            "type": 40
          }
          "constants": [
            {
              "name": UnsignedPriority
              "type": 11
              "value": 0xffffffffffffffff
              "docs": [
                 A configuration for base priority of unsigned transactions.
                
                 This is exposed so that it can be tuned for particular runtime, when
                 multiple pallets send unsigned transactions.
              ]
            }
          ]
          "errors": {
            "type": 405
          }
          "index": 12
        }
        {
          "name": Staking
          "storage": {
            "prefix": Staking
            "items": [
              {
                "name": ValidatorCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The ideal number of active validators.
                ]
              }
              {
                "name": MinimumValidatorCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Minimum number of staking participants before emergency conditions are imposed.
                ]
              }
              {
                "name": Invulnerables
                "modifier": Default
                "type": {
                  "Plain": 97
                }
                "fallback": 0x00
                "docs": [
                   Any validators that may never be slashed or forcibly kicked. It's a Vec since they're
                   easy to initialize and the performance hit is minimal (we expect no more than four
                   invulnerables) and restricted to testnets.
                ]
              }
              {
                "name": Bonded
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 0
                  }
                }
                "fallback": 0x00
                "docs": [
                   Map from all locked stash accounts to the controller account.
                  
                   TWOX-"NOTE": SAFE since `AccountId` is a secure hash.
                ]
              }
              {
                "name": MinNominatorBond
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The minimum active bond to become and maintain the role of a nominator.
                ]
              }
              {
                "name": MinValidatorBond
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The minimum active bond to become and maintain the role of a validator.
                ]
              }
              {
                "name": MinimumActiveStake
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The minimum active nominator stake of the last successful election.
                ]
              }
              {
                "name": MinCommission
                "modifier": Default
                "type": {
                  "Plain": 51
                }
                "fallback": 0x00000000
                "docs": [
                   The minimum amount of commission that validators can set.
                  
                   If set to `0`, no limit exists.
                ]
              }
              {
                "name": Ledger
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 406
                  }
                }
                "fallback": 0x00
                "docs": [
                   Map from all (unlocked) controller accounts to the info regarding the staking.
                  
                   "Note": All the reads and mutations to this storage *MUST* be done through the methods exposed
                   by [`StakingLedger`] to ensure data and lock consistency.
                ]
              }
              {
                "name": Payee
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 50
                  }
                }
                "fallback": 0x00
                "docs": [
                   Where the reward payment should be made. Keyed by stash.
                  
                   TWOX-"NOTE": SAFE since `AccountId` is a secure hash.
                ]
              }
              {
                "name": Validators
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 52
                  }
                }
                "fallback": 0x0000
                "docs": [
                   The map from (wannabe) validator stash key to the preferences of that validator.
                  
                   TWOX-"NOTE": SAFE since `AccountId` is a secure hash.
                ]
              }
              {
                "name": CounterForValidators
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": MaxValidatorsCount
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   The maximum validator count before we stop allowing new validators to join.
                  
                   When this value is not set, no limits are enforced.
                ]
              }
              {
                "name": Nominators
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 411
                  }
                }
                "fallback": 0x00
                "docs": [
                   The map from nominator stash key to their nomination preferences, namely the validators that
                   they wish to support.
                  
                   Note that the keys of this storage map might become non-decodable in case the
                   account's [`"NominationsQuota"::MaxNominations`] configuration is decreased.
                   In this rare case, these nominators
                   are still existent in storage, their key is correct and retrievable (i.e. `contains_key`
                   indicates that they exist), but their value cannot be decoded. Therefore, the non-decodable
                   nominators will effectively not-exist, until they re-submit their preferences such that it
                   is within the bounds of the newly set `"Config"::MaxNominations`.
                  
                   This implies that `::iter_keys().count()` and `::iter().count()` might return different
                   values for this map. Moreover, the main `::count()` is aligned with the former, namely the
                   number of keys that exist.
                  
                   Lastly, if any of the nominators become non-decodable, they can be chilled immediately via
                   [`"Call"::chill_other`] dispatchable by anyone.
                  
                   TWOX-"NOTE": SAFE since `AccountId` is a secure hash.
                ]
              }
              {
                "name": CounterForNominators
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": MaxNominatorsCount
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   The maximum nominator count before we stop allowing new validators to join.
                  
                   When this value is not set, no limits are enforced.
                ]
              }
              {
                "name": CurrentEra
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   The current era index.
                  
                   This is the latest planned era, depending on how the Session pallet queues the validator
                   set, it might be active or not.
                ]
              }
              {
                "name": ActiveEra
                "modifier": Optional
                "type": {
                  "Plain": 413
                }
                "fallback": 0x00
                "docs": [
                   The active era information, it holds index and start.
                  
                   The active era is the era being currently rewarded. Validator set of this era must be
                   equal to [`"SessionInterface"::validators`].
                ]
              }
              {
                "name": ErasStartSessionIndex
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 4
                  }
                }
                "fallback": 0x00
                "docs": [
                   The session index at which the era start for the last `HISTORY_DEPTH` eras.
                  
                   "Note": This tracks the starting session (i.e. session index when era start being active)
                   for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`.
                ]
              }
              {
                "name": ErasStakers
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 45
                  }
                }
                "fallback": 0x000000
                "docs": [
                   Exposure of validator at era.
                  
                   This is keyed first by the era index to allow bulk deletion and then the stash account.
                  
                   Is it removed after `HISTORY_DEPTH` eras.
                   If stakers hasn't been set or has been removed then empty exposure is returned.
                ]
              }
              {
                "name": ErasStakersClipped
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 45
                  }
                }
                "fallback": 0x000000
                "docs": [
                   Clipped Exposure of validator at era.
                  
                   This is similar to [`ErasStakers`] but number of nominators exposed is reduced to the
                   `"T"::MaxNominatorRewardedPerValidator` biggest stakers.
                   ("Note": the field `total` and `own` of the exposure remains unchanged).
                   This is used to limit the i/o cost for the nominator payout.
                  
                   This is keyed fist by the era index to allow bulk deletion and then the stash account.
                  
                   Is it removed after `HISTORY_DEPTH` eras.
                   If stakers hasn't been set or has been removed then empty exposure is returned.
                ]
              }
              {
                "name": ErasValidatorPrefs
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 52
                  }
                }
                "fallback": 0x0000
                "docs": [
                   Similar to `ErasStakers`, this holds the preferences of validators.
                  
                   This is keyed first by the era index to allow bulk deletion and then the stash account.
                  
                   Is it removed after `HISTORY_DEPTH` eras.
                ]
              }
              {
                "name": ErasValidatorReward
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 6
                  }
                }
                "fallback": 0x00
                "docs": [
                   The total validator era payout for the last `HISTORY_DEPTH` eras.
                  
                   Eras that haven't finished yet or has been removed doesn't have reward.
                ]
              }
              {
                "name": ErasRewardPoints
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 414
                  }
                }
                "fallback": 0x0000000000
                "docs": [
                   Rewards for the last `HISTORY_DEPTH` eras.
                   If reward hasn't been set or has been removed then 0 reward is returned.
                ]
              }
              {
                "name": ErasTotalStake
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 6
                  }
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The total amount staked for the last `HISTORY_DEPTH` eras.
                   If total hasn't been set or has been removed then 0 stake is returned.
                ]
              }
              {
                "name": ForceEra
                "modifier": Default
                "type": {
                  "Plain": 55
                }
                "fallback": 0x00
                "docs": [
                   Mode of era forcing.
                ]
              }
              {
                "name": SlashRewardFraction
                "modifier": Default
                "type": {
                  "Plain": 51
                }
                "fallback": 0x00000000
                "docs": [
                   The percentage of the slash that is distributed to reporters.
                  
                   The rest of the slashed value is handled by the `Slash`.
                ]
              }
              {
                "name": CanceledSlashPayout
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The amount of currency given to reporters of a slash event which was
                   canceled by extraordinary circumstances (e.g. governance).
                ]
              }
              {
                "name": UnappliedSlashes
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 418
                  }
                }
                "fallback": 0x00
                "docs": [
                   All unapplied slashes that are queued for later.
                ]
              }
              {
                "name": BondedEras
                "modifier": Default
                "type": {
                  "Plain": 337
                }
                "fallback": 0x00
                "docs": [
                   A mapping from still-bonded eras to the first session index of that era.
                  
                   Must contains information for eras for the "range":
                   `[active_era - bounding_duration; active_era]`
                ]
              }
              {
                "name": ValidatorSlashInEra
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 420
                  }
                }
                "fallback": 0x00
                "docs": [
                   All slashing events on validators, mapped by era to the highest slash proportion
                   and slash value of the era.
                ]
              }
              {
                "name": NominatorSlashInEra
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 6
                  }
                }
                "fallback": 0x00
                "docs": [
                   All slashing events on nominators, mapped by era to the highest slash value of the era.
                ]
              }
              {
                "name": SlashingSpans
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 421
                  }
                }
                "fallback": 0x00
                "docs": [
                   Slashing spans for stash accounts.
                ]
              }
              {
                "name": SpanSlash
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 417
                    "value": 422
                  }
                }
                "fallback": 0x0000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   Records information about the maximum slash of a stash within a slashing span,
                   as well as how much reward has been paid out.
                ]
              }
              {
                "name": CurrentPlannedSession
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The last planned session scheduled by the session pallet.
                  
                   This is basically in sync with the call to [`"pallet_session"::"SessionManager"::new_session`].
                ]
              }
              {
                "name": OffendingValidators
                "modifier": Default
                "type": {
                  "Plain": 423
                }
                "fallback": 0x00
                "docs": [
                   Indices of validators that have offended in the active era and whether they are currently
                   disabled.
                  
                   This value should be a superset of disabled validators since not all offences lead to the
                   validator being disabled (if there was no slash). This is needed to track the percentage of
                   validators that have offended in the current era, ensuring a new era is forced if
                   `OffendingValidatorsThreshold` is reached. The vec is always kept sorted so that we can find
                   whether a given validator has previously offended using binary search. It gets cleared when
                   the era ends.
                ]
              }
              {
                "name": ChillThreshold
                "modifier": Optional
                "type": {
                  "Plain": 107
                }
                "fallback": 0x00
                "docs": [
                   The threshold for when users can start calling `chill_other` for other validators /
                   nominators. The threshold is compared to the actual number of validators / nominators
                   (`CountFor*`) in the system compared to the configured max (`Max*Count`).
                ]
              }
            ]
          }
          "calls": {
            "type": 105
          }
          "events": {
            "type": 49
          }
          "constants": [
            {
              "name": HistoryDepth
              "type": 4
              "value": 0x54000000
              "docs": [
                 Number of eras to keep in history.
                
                 Following information is kept for eras in `[current_era -
                 HistoryDepth, current_era]`: `ErasStakers`, `ErasStakersClipped`,
                 `ErasValidatorPrefs`, `ErasValidatorReward`, `ErasRewardPoints`,
                 `ErasTotalStake`, `ErasStartSessionIndex`,
                 `StakingLedger.claimed_rewards`.
                
                 Must be more than the number of eras delayed by session.
                 I.e. active era must always be in history. I.e. `active_era >
                 current_era - history_depth` must be guaranteed.
                
                 If migrating an existing pallet from storage value to config value,
                 this should be set to same value or greater as in storage.
                
                 "Note": `HistoryDepth` is used as the upper bound for the `BoundedVec`
                 item `StakingLedger.claimed_rewards`. Setting this value lower than
                 the existing value can lead to inconsistencies in the
                 `StakingLedger` and will need to be handled properly in a migration.
                 The test `reducing_history_depth_abrupt` shows this effect.
              ]
            }
            {
              "name": SessionsPerEra
              "type": 4
              "value": 0x06000000
              "docs": [
                 Number of sessions per era.
              ]
            }
            {
              "name": BondingDuration
              "type": 4
              "value": 0x0e000000
              "docs": [
                 Number of eras that staked funds must remain bonded for.
              ]
            }
            {
              "name": SlashDeferDuration
              "type": 4
              "value": 0x0d000000
              "docs": [
                 Number of eras that slashes are deferred by, after computation.
                
                 This should be less than the bonding duration. Set to 0 if slashes
                 should be applied immediately, without opportunity for intervention.
              ]
            }
            {
              "name": MaxNominatorRewardedPerValidator
              "type": 4
              "value": 0x00010000
              "docs": [
                 The maximum number of nominators rewarded for each validator.
                
                 For each validator only the `$MaxNominatorRewardedPerValidator` biggest stakers can
                 claim their reward. This used to limit the i/o cost for the nominator payout.
              ]
            }
            {
              "name": MaxUnlockingChunks
              "type": 4
              "value": 0x20000000
              "docs": [
                 The maximum number of `unlocking` chunks a [`StakingLedger`] can
                 have. Effectively determines how many unique eras a staker may be
                 unbonding in.
                
                 "Note": `MaxUnlockingChunks` is used as the upper bound for the
                 `BoundedVec` item `StakingLedger.unlocking`. Setting this value
                 lower than the existing value can lead to inconsistencies in the
                 `StakingLedger` and will need to be handled properly in a runtime
                 migration. The test `reducing_max_unlocking_chunks_abrupt` shows
                 this effect.
              ]
            }
          ]
          "errors": {
            "type": 425
          }
          "index": 13
        }
        {
          "name": Session
          "storage": {
            "prefix": Session
            "items": [
              {
                "name": Validators
                "modifier": Default
                "type": {
                  "Plain": 97
                }
                "fallback": 0x00
                "docs": [
                   The current set of validators.
                ]
              }
              {
                "name": CurrentIndex
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Current index of the session.
                ]
              }
              {
                "name": QueuedChanged
                "modifier": Default
                "type": {
                  "Plain": 54
                }
                "fallback": 0x00
                "docs": [
                   True if the underlying economic identities or weighting behind the validators
                   has changed in the queued validator set.
                ]
              }
              {
                "name": QueuedKeys
                "modifier": Default
                "type": {
                  "Plain": 426
                }
                "fallback": 0x00
                "docs": [
                   The queued keys for the next session. When the next session begins, these keys
                   will be used to determine the validator's session keys.
                ]
              }
              {
                "name": DisabledValidators
                "modifier": Default
                "type": {
                  "Plain": 108
                }
                "fallback": 0x00
                "docs": [
                   Indices of disabled validators.
                  
                   The vec is always kept sorted so that we can find whether a given validator is
                   disabled using binary search. It gets cleared when `on_session_ending` returns
                   a new set of identities.
                ]
              }
              {
                "name": NextKeys
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 114
                  }
                }
                "fallback": 0x00
                "docs": [
                   The next session keys for a validator.
                ]
              }
              {
                "name": KeyOwner
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 428
                    "value": 0
                  }
                }
                "fallback": 0x00
                "docs": [
                   The owner of a key. The key is the `KeyTypeId` + the encoded key.
                ]
              }
            ]
          }
          "calls": {
            "type": 113
          }
          "events": {
            "type": 56
          }
          "constants": []
          "errors": {
            "type": 430
          }
          "index": 7
        }
        {
          "name": Treasury
          "storage": {
            "prefix": Treasury
            "items": [
              {
                "name": ProposalCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Number of proposals that have been made.
                ]
              }
              {
                "name": Proposals
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 431
                  }
                }
                "fallback": 0x00
                "docs": [
                   Proposals that have been made.
                ]
              }
              {
                "name": Deactivated
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The amount which has been reported as inactive to Currency.
                ]
              }
              {
                "name": Approvals
                "modifier": Default
                "type": {
                  "Plain": 432
                }
                "fallback": 0x00
                "docs": [
                   Proposal indices that have been approved but not yet awarded.
                ]
              }
              {
                "name": SpendCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The count of spends that have been made.
                ]
              }
              {
                "name": Spends
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 433
                  }
                }
                "fallback": 0x00
                "docs": [
                   Spends that have been approved and being processed.
                ]
              }
            ]
          }
          "calls": {
            "type": 116
          }
          "events": {
            "type": 57
          }
          "constants": [
            {
              "name": ProposalBond
              "type": 435
              "value": 0x50c30000
              "docs": [
                 Fraction of a proposal's value that should be bonded in order to place the proposal.
                 An accepted proposal gets these back. A rejected proposal does not.
              ]
            }
            {
              "name": ProposalBondMinimum
              "type": 6
              "value": 0x00a0724e180900000000000000000000
              "docs": [
                 Minimum amount of funds that should be placed in a deposit for making a proposal.
              ]
            }
            {
              "name": ProposalBondMaximum
              "type": 275
              "value": 0x00
              "docs": [
                 Maximum amount of funds that should be placed in a deposit for making a proposal.
              ]
            }
            {
              "name": SpendPeriod
              "type": 4
              "value": 0x80700000
              "docs": [
                 Period between successive spends.
              ]
            }
            {
              "name": Burn
              "type": 435
              "value": 0x00000000
              "docs": [
                 Percentage of spare funds (if any) that are burnt per spend period.
              ]
            }
            {
              "name": PalletId
              "type": 436
              "value": py/trsry
              "docs": [
                 The treasury's pallet id, used for deriving its sovereign account ID.
              ]
            }
            {
              "name": MaxApprovals
              "type": 4
              "value": 0x64000000
              "docs": [
                 The maximum number of approvals that can wait in the spending queue.
                
                 "NOTE": This parameter is also used within the Bounties Pallet extension if enabled.
              ]
            }
            {
              "name": PayoutPeriod
              "type": 4
              "value": 0x002f0d00
              "docs": [
                 The period during which an approved treasury spend has to be claimed.
              ]
            }
          ]
          "errors": {
            "type": 437
          }
          "index": 14
        }
        {
          "name": Historical
          "storage": {
            "prefix": Historical
            "items": [
              {
                "name": HistoricalSessions
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 438
                  }
                }
                "fallback": 0x00
                "docs": [
                   Mapping from historical session indices to session-data root hash and validator count.
                ]
              }
              {
                "name": StoredRange
                "modifier": Optional
                "type": {
                  "Plain": 137
                }
                "fallback": 0x00
                "docs": [
                   The range of historical sessions we store. [first, last)
                ]
              }
            ]
          }
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 15
        }
        {
          "name": Utility
          "storage": null
          "calls": {
            "type": 118
          }
          "events": {
            "type": 59
          }
          "constants": [
            {
              "name": batched_calls_limit
              "type": 4
              "value": 0xaa2a0000
              "docs": [
                 The limit on the number of batched calls.
              ]
            }
          ]
          "errors": {
            "type": 439
          }
          "index": 8
        }
        {
          "name": ConvictionVoting
          "storage": {
            "prefix": ConvictionVoting
            "items": [
              {
                "name": VotingFor
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 440
                    "value": 441
                  }
                }
                "fallback": 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                "docs": [
                   All voting for a particular voter in a particular voting class. We store the balance for the
                   number of votes that we have recorded.
                ]
              }
              {
                "name": ClassLocksFor
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 449
                  }
                }
                "fallback": 0x00
                "docs": [
                   The voting classes which have a non-zero lock requirement and the lock amounts which they
                   require. The actual amount locked on behalf of this pallet should always be the maximum of
                   this list.
                ]
              }
            ]
          }
          "calls": {
            "type": 124
          }
          "events": {
            "type": 61
          }
          "constants": [
            {
              "name": MaxVotes
              "type": 4
              "value": 0x00020000
              "docs": [
                 The maximum number of concurrent votes an account may have.
                
                 Also used to compute weight, an overly large value can lead to extrinsics with large
                 weight "estimation": see `delegate` for instance.
              ]
            }
            {
              "name": VoteLockingPeriod
              "type": 4
              "value": 0x80130300
              "docs": [
                 The minimum period of vote locking.
                
                 It should be no shorter than enactment period to ensure that in the case of an approval,
                 those successful voters are locked into the consequences that their votes entail.
              ]
            }
          ]
          "errors": {
            "type": 452
          }
          "index": 16
        }
        {
          "name": Referenda
          "storage": {
            "prefix": Referenda
            "items": [
              {
                "name": ReferendumCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The next free referendum index, aka the number of referenda started so far.
                ]
              }
              {
                "name": ReferendumInfoFor
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 4
                    "value": 453
                  }
                }
                "fallback": 0x00
                "docs": [
                   Information concerning any given referendum.
                ]
              }
              {
                "name": TrackQueue
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 63
                    "value": 461
                  }
                }
                "fallback": 0x00
                "docs": [
                   The sorted list of referenda ready to be decided but not yet being decided, ordered by
                   conviction-weighted approvals.
                  
                   This should be empty if `DecidingCount` is less than `"TrackInfo"::max_deciding`.
                ]
              }
              {
                "name": DecidingCount
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 63
                    "value": 4
                  }
                }
                "fallback": 0x00000000
                "docs": [
                   The number of referenda being decided currently.
                ]
              }
              {
                "name": MetadataOf
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 4
                    "value": 12
                  }
                }
                "fallback": 0x00
                "docs": [
                   The metadata is a general information concerning the referendum.
                   The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON
                   dump or IPFS hash of a JSON file.
                  
                   Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)
                   large preimages.
                ]
              }
            ]
          }
          "calls": {
            "type": 129
          }
          "events": {
            "type": 62
          }
          "constants": [
            {
              "name": SubmissionDeposit
              "type": 6
              "value": 0x00407a10f35a00000000000000000000
              "docs": [
                 The minimum amount to be used as a deposit for a public referendum proposal.
              ]
            }
            {
              "name": MaxQueued
              "type": 4
              "value": 0x64000000
              "docs": [
                 Maximum size of the referendum queue for a single track.
              ]
            }
            {
              "name": UndecidingTimeout
              "type": 4
              "value": 0x00270600
              "docs": [
                 The number of blocks after submission that a referendum must begin being decided by.
                 Once this passes, then anyone may cancel the referendum.
              ]
            }
            {
              "name": AlarmInterval
              "type": 4
              "value": 0x01000000
              "docs": [
                 Quantization level for the referendum wakeup scheduler. A higher number will result in
                 fewer storage reads/writes needed for smaller voters, but also result in delays to the
                 automatic referendum status changes. Explicit servicing instructions are unaffected.
              ]
            }
            {
              "name": Tracks
              "type": 464
              "value": 0x34000010726f6f7401000000000064a7b3b6e00d0000000000000000600900000027060080700000807000000290d73e0d000000005743de13000000005443de13000000000000ca9a3b000000000065cd1d01004877686974656c69737465645f63616c6c65726400000000008a5d7845630100000000000000005802000000270600c8000000c800000002ec972510000000007b573c170000000042392f1200000000020e00840000000000d6e61f010000000039627902000000000a00347374616b696e675f61646d696e0a0000000000c52ebca2b10000000000000000006009000000270600100e0000c800000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff0b00247472656173757265720a0000000000c16ff286230000000000000000006009000000270600100e0000807000000290d73e0d000000005743de13000000005443de13000000000000ca9a3b000000000065cd1d0c004066656c6c6f77736869705f61646d696e0a0000000000c52ebca2b10000000000000000006009000000270600100e0000c800000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff0d003467656e6572616c5f61646d696e0a0000000000c52ebca2b10000000000000000006009000000270600100e0000c80000000290d73e0d000000005743de13000000005443de13000000000259a2f40200000000a3296b05000000002e6b4afdffffffff1400507265666572656e64756d5f63616e63656c6c6572e803000000008a5d7845630100000000000000006009000080130300100e0000c800000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff1500447265666572656e64756d5f6b696c6c6572e80300000000b2d3595bf00600000000000000006009000000270600100e0000c800000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff1e0030736d616c6c5f746970706572c800000000a0724e1809000000000000000000001400000080130300c80000001400000000499149150065cd1d00ca9a3b02f9ba1800000000002a4d3100000000006b59e7ffffffffff1f00286269675f7469707065726400000000407a10f35a00000000000000000000c800000080130300b0040000c800000000499149150065cd1d00ca9a3b02694f3f000000000035967d0000000000e534c1ffffffffff200034736d616c6c5f7370656e646572320000000080c6a47e8d03000000000000000000c012000000270600403800008070000000c94330240065cd1d00ca9a3b025d6f780000000000e82eed00000000008c6889ffffffffff2100386d656469756d5f7370656e6465723200000000008d49fd1a07000000000000000000c0120000002706008070000080700000005b01f6300065cd1d00ca9a3b021161db0000000000bfd1aa010000000020972affffffffff22002c6269675f7370656e6465723200000000001a93fa350e000000000000000000c01200000027060000e10000807000000000ca9a3b0065cd1d00ca9a3b02413cb00100000000755d34030000000045d165feffffffff
              "docs": [
                 Information concerning the different referendum tracks.
              ]
            }
          ]
          "errors": {
            "type": 470
          }
          "index": 17
        }
        {
          "name": FellowshipCollective
          "storage": {
            "prefix": FellowshipCollective
            "items": [
              {
                "name": MemberCount
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 63
                    "value": 4
                  }
                }
                "fallback": 0x00000000
                "docs": [
                   The number of members in the collective who have at least the rank according to the index
                   of the vec.
                ]
              }
              {
                "name": Members
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 471
                  }
                }
                "fallback": 0x00
                "docs": [
                   The current members of the collective.
                ]
              }
              {
                "name": IdToIndex
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 472
                    "value": 4
                  }
                }
                "fallback": 0x00
                "docs": [
                   The index of each ranks's member into the group of members who have at least that rank.
                ]
              }
              {
                "name": IndexToId
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 473
                    "value": 0
                  }
                }
                "fallback": 0x00
                "docs": [
                   The members in the collective by index. All indices in the range `0..MemberCount` will
                   return `Some`, however a member's index is not guaranteed to remain unchanged over time.
                ]
              }
              {
                "name": Voting
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                      Twox64Concat
                    ]
                    "key": 404
                    "value": 282
                  }
                }
                "fallback": 0x00
                "docs": [
                   Votes on a given proposal, if it is ongoing.
                ]
              }
              {
                "name": VotingCleanup
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 4
                    "value": 474
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": {
            "type": 132
          }
          "events": {
            "type": 281
          }
          "constants": []
          "errors": {
            "type": 475
          }
          "index": 18
        }
        {
          "name": FellowshipReferenda
          "storage": {
            "prefix": FellowshipReferenda
            "items": [
              {
                "name": ReferendumCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The next free referendum index, aka the number of referenda started so far.
                ]
              }
              {
                "name": ReferendumInfoFor
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 4
                    "value": 476
                  }
                }
                "fallback": 0x00
                "docs": [
                   Information concerning any given referendum.
                ]
              }
              {
                "name": TrackQueue
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 63
                    "value": 478
                  }
                }
                "fallback": 0x00
                "docs": [
                   The sorted list of referenda ready to be decided but not yet being decided, ordered by
                   conviction-weighted approvals.
                  
                   This should be empty if `DecidingCount` is less than `"TrackInfo"::max_deciding`.
                ]
              }
              {
                "name": DecidingCount
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 63
                    "value": 4
                  }
                }
                "fallback": 0x00000000
                "docs": [
                   The number of referenda being decided currently.
                ]
              }
              {
                "name": MetadataOf
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 4
                    "value": 12
                  }
                }
                "fallback": 0x00
                "docs": [
                   The metadata is a general information concerning the referendum.
                   The `Hash` refers to the preimage of the `Preimages` provider which can be a JSON
                   dump or IPFS hash of a JSON file.
                  
                   Consider a garbage collection for a metadata of finished referendums to `unrequest` (remove)
                   large preimages.
                ]
              }
            ]
          }
          "calls": {
            "type": 133
          }
          "events": {
            "type": 284
          }
          "constants": [
            {
              "name": SubmissionDeposit
              "type": 6
              "value": 0x00000000000000000000000000000000
              "docs": [
                 The minimum amount to be used as a deposit for a public referendum proposal.
              ]
            }
            {
              "name": MaxQueued
              "type": 4
              "value": 0x64000000
              "docs": [
                 Maximum size of the referendum queue for a single track.
              ]
            }
            {
              "name": UndecidingTimeout
              "type": 4
              "value": 0x80130300
              "docs": [
                 The number of blocks after submission that a referendum must begin being decided by.
                 Once this passes, then anyone may cancel the referendum.
              ]
            }
            {
              "name": AlarmInterval
              "type": 4
              "value": 0x01000000
              "docs": [
                 Quantization level for the referendum wakeup scheduler. A higher number will result in
                 fewer storage reads/writes needed for smaller voters, but also result in delays to the
                 automatic referendum status changes. Explicit servicing instructions are unaffected.
              ]
            }
            {
              "name": Tracks
              "type": 464
              "value": 0x2800002863616e646964617465730a0000000080c6a47e8d03000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d01001c6d656d626572730a00000000407a10f35a00000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d02002c70726f66696369656e74730a00000000407a10f35a00000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d03001c66656c6c6f77730a00000000407a10f35a00000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d04003873656e696f722066656c6c6f77730a00000000407a10f35a00000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d05001c657870657274730a00000000a0724e180900000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d06003873656e696f7220657870657274730a00000000a0724e180900000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d07001c6d6173746572730a00000000a0724e180900000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d08003873656e696f72206d6173746572730a00000000a0724e180900000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d0900346772616e64206d6173746572730a00000000a0724e180900000000000000000000580200008013030058020000140000000000ca9a3b0065cd1d00ca9a3b0000ca9a3b000000000065cd1d
              "docs": [
                 Information concerning the different referendum tracks.
              ]
            }
          ]
          "errors": {
            "type": 479
          }
          "index": 19
        }
        {
          "name": Origins
          "storage": null
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 20
        }
        {
          "name": Whitelist
          "storage": {
            "prefix": Whitelist
            "items": [
              {
                "name": WhitelistedCall
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 12
                    "value": 58
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": {
            "type": 134
          }
          "events": {
            "type": 285
          }
          "constants": []
          "errors": {
            "type": 480
          }
          "index": 21
        }
        {
          "name": Scheduler
          "storage": {
            "prefix": Scheduler
            "items": [
              {
                "name": IncompleteSince
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Agenda
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 481
                  }
                }
                "fallback": 0x00
                "docs": [
                   Items to be executed, indexed by the block number that they should be executed on.
                ]
              }
              {
                "name": Lookup
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 1
                    "value": 137
                  }
                }
                "fallback": 0x00
                "docs": [
                   Lookup from a name to the block number and index of the task.
                  
                   For v3 -> v4 the previously unbounded identities are Blake2-256 hashed to form the v4
                   identities.
                ]
              }
            ]
          }
          "calls": {
            "type": 135
          }
          "events": {
            "type": 290
          }
          "constants": [
            {
              "name": MaximumWeight
              "type": 9
              "value": 0x070040b743ba13cccccccccccccccc
              "docs": [
                 The maximum weight that may be scheduled per block for any dispatchables.
              ]
            }
            {
              "name": MaxScheduledPerBlock
              "type": 4
              "value": 0x00020000
              "docs": [
                 The maximum number of scheduled calls in the queue for a single block.
                
                 "NOTE":
                 + Dependent pallets' benchmarks might require a higher limit for the setting. Set a
                 higher limit under `runtime-benchmarks` feature.
              ]
            }
          ]
          "errors": {
            "type": 485
          }
          "index": 22
        }
        {
          "name": Preimage
          "storage": {
            "prefix": Preimage
            "items": [
              {
                "name": StatusFor
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 12
                    "value": 486
                  }
                }
                "fallback": 0x00
                "docs": [
                   The request status of a given hash.
                ]
              }
              {
                "name": RequestStatusFor
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 12
                    "value": 488
                  }
                }
                "fallback": 0x00
                "docs": [
                   The request status of a given hash.
                ]
              }
              {
                "name": PreimageFor
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 438
                    "value": 492
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": {
            "type": 138
          }
          "events": {
            "type": 292
          }
          "constants": []
          "errors": {
            "type": 493
          }
          "index": 23
        }
        {
          "name": Identity
          "storage": {
            "prefix": Identity
            "items": [
              {
                "name": IdentityOf
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 494
                  }
                }
                "fallback": 0x00
                "docs": [
                   Information that is pertinent to identify the entity behind an account.
                  
                   TWOX-"NOTE": OK ― `AccountId` is a secure hash.
                ]
              }
              {
                "name": SuperOf
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Blake2_128Concat
                    ]
                    "key": 0
                    "value": 178
                  }
                }
                "fallback": 0x00
                "docs": [
                   The super-identity of an alternative sub identity together with its name, within that
                   context. If the account is not some other account's sub-identity, then just `None`.
                ]
              }
              {
                "name": SubsOf
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 498
                  }
                }
                "fallback": 0x0000000000000000000000000000000000
                "docs": [
                   Alternative sub identities of this account.
                  
                   The first item is the deposit, the second is a vector of the accounts.
                  
                   TWOX-"NOTE": OK ― `AccountId` is a secure hash.
                ]
              }
              {
                "name": Registrars
                "modifier": Default
                "type": {
                  "Plain": 500
                }
                "fallback": 0x00
                "docs": [
                   The set of registrars. Not expected to get very big as can only be added through a
                   special origin (likely a council motion).
                  
                   The index into this can be cast to `RegistrarIndex` to get a valid value.
                ]
              }
            ]
          }
          "calls": {
            "type": 140
          }
          "events": {
            "type": 293
          }
          "constants": [
            {
              "name": BasicDeposit
              "type": 6
              "value": 0x00407a10f35a00000000000000000000
              "docs": [
                 The amount held on deposit for a registered identity
              ]
            }
            {
              "name": FieldDeposit
              "type": 6
              "value": 0x00901ec4bc1600000000000000000000
              "docs": [
                 The amount held on deposit per additional field for a registered identity.
              ]
            }
            {
              "name": SubAccountDeposit
              "type": 6
              "value": 0x0040e59c301200000000000000000000
              "docs": [
                 The amount held on deposit for a registered subaccount. This should account for the fact
                 that one storage item's value will increase by the size of an account ID, and there will
                 be another trie item whose value is the size of an account ID plus 32 bytes.
              ]
            }
            {
              "name": MaxSubAccounts
              "type": 4
              "value": 0x64000000
              "docs": [
                 The maximum number of sub-accounts allowed per identified account.
              ]
            }
            {
              "name": MaxAdditionalFields
              "type": 4
              "value": 0x64000000
              "docs": [
                 Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O
                 required to access an identity, but can be pretty high.
              ]
            }
            {
              "name": MaxRegistrars
              "type": 4
              "value": 0x14000000
              "docs": [
                 Maxmimum number of registrars allowed in the system. Needed to bound the complexity
                 of, e.g., updating judgements.
              ]
            }
          ]
          "errors": {
            "type": 504
          }
          "index": 24
        }
        {
          "name": Proxy
          "storage": {
            "prefix": Proxy
            "items": [
              {
                "name": Proxies
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 505
                  }
                }
                "fallback": 0x0000000000000000000000000000000000
                "docs": [
                   The set of account proxies. Maps the account which has delegated to the accounts
                   which are being delegated to, together with the amount held on deposit.
                ]
              }
              {
                "name": Announcements
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 509
                  }
                }
                "fallback": 0x0000000000000000000000000000000000
                "docs": [
                   The announcements made by the proxy (key).
                ]
              }
            ]
          }
          "calls": {
            "type": 182
          }
          "events": {
            "type": 294
          }
          "constants": [
            {
              "name": ProxyDepositBase
              "type": 6
              "value": 0x001843d5ba0500000000000000000000
              "docs": [
                 The base amount of currency needed to reserve for creating a proxy.
                
                 This is held for an additional storage item whose value size is
                 `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes.
              ]
            }
            {
              "name": ProxyDepositFactor
              "type": 6
              "value": 0x0070f70b021200000000000000000000
              "docs": [
                 The amount of currency needed per proxy added.
                
                 This is held for adding 32 bytes plus an instance of `ProxyType` more into a
                 pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take
                 into account `32 + proxy_type.encode().len()` bytes of data.
              ]
            }
            {
              "name": MaxProxies
              "type": 4
              "value": 0x20000000
              "docs": [
                 The maximum amount of proxies allowed for a single account.
              ]
            }
            {
              "name": MaxPending
              "type": 4
              "value": 0x20000000
              "docs": [
                 The maximum amount of time-delayed announcements that are allowed to be pending.
              ]
            }
            {
              "name": AnnouncementDepositBase
              "type": 6
              "value": 0x001843d5ba0500000000000000000000
              "docs": [
                 The base amount of currency needed to reserve for creating an announcement.
                
                 This is held when a new storage item holding a `Balance` is created (typically 16
                 bytes).
              ]
            }
            {
              "name": AnnouncementDepositFactor
              "type": 6
              "value": 0x00e0ee17042400000000000000000000
              "docs": [
                 The amount of currency needed per announcement made.
                
                 This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)
                 into a pre-existing storage value.
              ]
            }
          ]
          "errors": {
            "type": 513
          }
          "index": 25
        }
        {
          "name": Multisig
          "storage": {
            "prefix": Multisig
            "items": [
              {
                "name": Multisigs
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Blake2_128Concat
                    ]
                    "key": 514
                    "value": 515
                  }
                }
                "fallback": 0x00
                "docs": [
                   The set of open multisig operations.
                ]
              }
            ]
          }
          "calls": {
            "type": 185
          }
          "events": {
            "type": 295
          }
          "constants": [
            {
              "name": DepositBase
              "type": 6
              "value": 0x001836b4623100000000000000000000
              "docs": [
                 The base amount of currency needed to reserve for creating a multisig execution or to
                 store a dispatch call for later.
                
                 This is held for an additional storage item whose value size is
                 `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is
                 `32 + sizeof(AccountId)` bytes.
              ]
            }
            {
              "name": DepositFactor
              "type": 6
              "value": 0x00002e59761100000000000000000000
              "docs": [
                 The amount of currency needed per unit threshold when creating a multisig execution.
                
                 This is held for adding 32 bytes more into a pre-existing storage value.
              ]
            }
            {
              "name": MaxSignatories
              "type": 4
              "value": 0x64000000
              "docs": [
                 The maximum amount of signatories allowed in the multisig.
              ]
            }
          ]
          "errors": {
            "type": 517
          }
          "index": 26
        }
        {
          "name": ElectionProviderMultiPhase
          "storage": {
            "prefix": ElectionProviderMultiPhase
            "items": [
              {
                "name": Round
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x01000000
                "docs": [
                   Internal counter for the number of rounds.
                  
                   This is useful for de-duplication of transactions submitted to the pool, and general
                   diagnostics of the pallet.
                  
                   This is merely incremented once per every time that an upstream `elect` is called.
                ]
              }
              {
                "name": CurrentPhase
                "modifier": Default
                "type": {
                  "Plain": 298
                }
                "fallback": 0x00
                "docs": [
                   Current phase.
                ]
              }
              {
                "name": QueuedSolution
                "modifier": Optional
                "type": {
                  "Plain": 518
                }
                "fallback": 0x00
                "docs": [
                   Current best solution, signed or unsigned, queued to be returned upon `elect`.
                  
                   Always sorted by score.
                ]
              }
              {
                "name": Snapshot
                "modifier": Optional
                "type": {
                  "Plain": 520
                }
                "fallback": 0x00
                "docs": [
                   Snapshot data of the round.
                  
                   This is created at the beginning of the signed phase and cleared upon calling `elect`.
                ]
              }
              {
                "name": DesiredTargets
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Desired number of targets to elect for this round.
                  
                   Only exists when [`Snapshot`] is present.
                ]
              }
              {
                "name": SnapshotMetadata
                "modifier": Optional
                "type": {
                  "Plain": 242
                }
                "fallback": 0x00
                "docs": [
                   The metadata of the [`RoundSnapshot`]
                  
                   Only exists when [`Snapshot`] is present.
                ]
              }
              {
                "name": SignedSubmissionNextIndex
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The next index to be assigned to an incoming signed submission.
                  
                   Every accepted submission is assigned a unique index; that index is bound to that particular
                   submission for the duration of the election. On election finalization, the next index is
                   reset to 0.
                  
                   We can't just use `SignedSubmissionIndices.len()`, because that's a bounded set; past its
                   capacity, it will simply saturate. We can't just iterate over `SignedSubmissionsMap`,
                   because iteration is slow. Instead, we store the value here.
                ]
              }
              {
                "name": SignedSubmissionIndices
                "modifier": Default
                "type": {
                  "Plain": 523
                }
                "fallback": 0x00
                "docs": [
                   A sorted, bounded vector of `(score, block_number, index)`, where each `index` points to a
                   value in `SignedSubmissions`.
                  
                   We never need to process more than a single signed submission at a time. Signed submissions
                   can be quite large, so we're willing to pay the cost of multiple database accesses to access
                   them one at a time instead of reading and decoding all of them at once.
                ]
              }
              {
                "name": SignedSubmissionsMap
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 526
                  }
                }
                "fallback": 0x00
                "docs": [
                   Unchecked, signed solutions.
                  
                   Together with `SubmissionIndices`, this stores a bounded set of `SignedSubmissions` while
                   allowing us to keep only a single one in memory at a time.
                  
                   Twox "note": the key of the map is an auto-incrementing index which users cannot inspect or
                   affect; we shouldn't need a cryptographically secure hasher.
                ]
              }
              {
                "name": MinimumUntrustedScore
                "modifier": Optional
                "type": {
                  "Plain": 241
                }
                "fallback": 0x00
                "docs": [
                   The minimum score that each 'untrusted' solution must attain in order to be considered
                   feasible.
                  
                   Can be set via `set_minimum_untrusted_score`.
                ]
              }
            ]
          }
          "calls": {
            "type": 188
          }
          "events": {
            "type": 296
          }
          "constants": [
            {
              "name": UnsignedPhase
              "type": 4
              "value": 0x58020000
              "docs": [
                 Duration of the unsigned phase.
              ]
            }
            {
              "name": SignedPhase
              "type": 4
              "value": 0x58020000
              "docs": [
                 Duration of the signed phase.
              ]
            }
            {
              "name": BetterSignedThreshold
              "type": 51
              "value": 0x00000000
              "docs": [
                 The minimum amount of improvement to the solution score that defines a solution as
                 better in the Signed phase.
              ]
            }
            {
              "name": BetterUnsignedThreshold
              "type": 51
              "value": 0xa0860100
              "docs": [
                 The minimum amount of improvement to the solution score that defines a solution as
                 better in the Unsigned phase.
              ]
            }
            {
              "name": OffchainRepeat
              "type": 4
              "value": 0x25000000
              "docs": [
                 The repeat threshold of the offchain worker.
                
                 For example, if it is 5, that means that at least 5 blocks will elapse between attempts
                 to submit the worker's solution.
              ]
            }
            {
              "name": MinerTxPriority
              "type": 11
              "value": 0xfeffffffffffff7f
              "docs": [
                 The priority of the unsigned transaction submitted in the unsigned-phase
              ]
            }
            {
              "name": SignedMaxSubmissions
              "type": 4
              "value": 0x0a000000
              "docs": [
                 Maximum number of signed submissions that can be queued.
                
                 It is best to avoid adjusting this during an election, as it impacts downstream data
                 structures. In particular, `SignedSubmissionIndices<T>` is bounded on this value. If you
                 update this value during an election, you _must_ ensure that
                 `SignedSubmissionIndices.len()` is less than or equal to the new value. Otherwise,
                 attempts to submit new solutions may cause a runtime panic.
              ]
            }
            {
              "name": SignedMaxWeight
              "type": 9
              "value": 0x071059531a3313ec51b81e85eb5138
              "docs": [
                 Maximum weight of a signed solution.
                
                 If [`"Config"::MinerConfig`] is being implemented to submit signed solutions (outside of
                 this pallet), then [`"MinerConfig"::solution_weight`] is used to compare against
                 this value.
              ]
            }
            {
              "name": SignedMaxRefunds
              "type": 4
              "value": 0x03000000
              "docs": [
                 The maximum amount of unchecked solutions to refund the call fee for.
              ]
            }
            {
              "name": SignedRewardBase
              "type": 6
              "value": 0x00a0724e180900000000000000000000
              "docs": [
                 Base reward for a signed solution
              ]
            }
            {
              "name": SignedDepositByte
              "type": 6
              "value": 0x00e87648170000000000000000000000
              "docs": [
                 Per-byte deposit for a signed solution.
              ]
            }
            {
              "name": SignedDepositWeight
              "type": 6
              "value": 0x00000000000000000000000000000000
              "docs": [
                 Per-weight deposit for a signed solution.
              ]
            }
            {
              "name": MaxWinners
              "type": 4
              "value": 0xe8030000
              "docs": [
                 The maximum number of winners that can be elected by this `ElectionProvider`
                 implementation.
                
                 "Note": This must always be greater or equal to `"T"::"DataProvider"::desired_targets()`.
              ]
            }
            {
              "name": MinerMaxLength
              "type": 4
              "value": 0x00001200
              "docs": []
            }
            {
              "name": MinerMaxWeight
              "type": 9
              "value": 0x071059531a3313ec51b81e85eb5138
              "docs": []
            }
            {
              "name": MinerMaxVotesPerVoter
              "type": 4
              "value": 0x10000000
              "docs": []
            }
            {
              "name": MinerMaxWinners
              "type": 4
              "value": 0xe8030000
              "docs": []
            }
          ]
          "errors": {
            "type": 527
          }
          "index": 27
        }
        {
          "name": Offences
          "storage": {
            "prefix": Offences
            "items": [
              {
                "name": Reports
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 12
                    "value": 528
                  }
                }
                "fallback": 0x00
                "docs": [
                   The primary structure that holds all offence records keyed by report identifiers.
                ]
              }
              {
                "name": ConcurrentReportsIndex
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 529
                    "value": 139
                  }
                }
                "fallback": 0x00
                "docs": [
                   A vector of reports of the same kind that happened at the same time slot.
                ]
              }
            ]
          }
          "calls": null
          "events": {
            "type": 300
          }
          "constants": []
          "errors": null
          "index": 28
        }
        {
          "name": Bounties
          "storage": {
            "prefix": Bounties
            "items": [
              {
                "name": BountyCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Number of bounty proposals that have been made.
                ]
              }
              {
                "name": Bounties
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 530
                  }
                }
                "fallback": 0x00
                "docs": [
                   Bounties that have been made.
                ]
              }
              {
                "name": BountyDescriptions
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 532
                  }
                }
                "fallback": 0x00
                "docs": [
                   The description of each bounty.
                ]
              }
              {
                "name": BountyApprovals
                "modifier": Default
                "type": {
                  "Plain": 432
                }
                "fallback": 0x00
                "docs": [
                   Bounty indices that have been approved but not yet funded.
                ]
              }
            ]
          }
          "calls": {
            "type": 249
          }
          "events": {
            "type": 301
          }
          "constants": [
            {
              "name": BountyDepositBase
              "type": 6
              "value": 0x00a0724e180900000000000000000000
              "docs": [
                 The amount held on deposit for placing a bounty proposal.
              ]
            }
            {
              "name": BountyDepositPayoutDelay
              "type": 4
              "value": 0x80700000
              "docs": [
                 The delay period for which a bounty beneficiary need to wait before claim the payout.
              ]
            }
            {
              "name": BountyUpdatePeriod
              "type": 4
              "value": 0x00270600
              "docs": [
                 Bounty duration in blocks.
              ]
            }
            {
              "name": CuratorDepositMultiplier
              "type": 435
              "value": 0x20a10700
              "docs": [
                 The curator deposit is calculated as a percentage of the curator fee.
                
                 This deposit has optional upper and lower bounds with `CuratorDepositMax` and
                 `CuratorDepositMin`.
              ]
            }
            {
              "name": CuratorDepositMax
              "type": 275
              "value": 0x010080c6a47e8d03000000000000000000
              "docs": [
                 Maximum amount of funds that should be placed in a deposit for making a proposal.
              ]
            }
            {
              "name": CuratorDepositMin
              "type": 275
              "value": 0x0100a0724e180900000000000000000000
              "docs": [
                 Minimum amount of funds that should be placed in a deposit for making a proposal.
              ]
            }
            {
              "name": BountyValueMinimum
              "type": 6
              "value": 0x00203d88792d00000000000000000000
              "docs": [
                 Minimum value for a bounty.
              ]
            }
            {
              "name": DataDepositPerByte
              "type": 6
              "value": 0x00e87648170000000000000000000000
              "docs": [
                 The amount held on deposit per byte within the tip report reason or bounty description.
              ]
            }
            {
              "name": MaximumReasonLength
              "type": 4
              "value": 0x2c010000
              "docs": [
                 Maximum acceptable reason length.
                
                 Benchmarks depend on this value, be sure to update weights file when changing this value
              ]
            }
          ]
          "errors": {
            "type": 533
          }
          "index": 29
        }
        {
          "name": ChildBounties
          "storage": {
            "prefix": ChildBounties
            "items": [
              {
                "name": ChildBountyCount
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Number of total child bounties.
                ]
              }
              {
                "name": ParentChildBounties
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 4
                  }
                }
                "fallback": 0x00000000
                "docs": [
                   Number of child bounties per parent bounty.
                   Map of parent bounty index to number of child bounties.
                ]
              }
              {
                "name": ChildBounties
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                      Twox64Concat
                    ]
                    "key": 137
                    "value": 534
                  }
                }
                "fallback": 0x00
                "docs": [
                   Child bounties that have been added.
                ]
              }
              {
                "name": ChildBountyDescriptions
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 532
                  }
                }
                "fallback": 0x00
                "docs": [
                   The description of each child-bounty.
                ]
              }
              {
                "name": ChildrenCuratorFees
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 6
                  }
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The cumulative child-bounty curator fee for each parent bounty.
                ]
              }
            ]
          }
          "calls": {
            "type": 250
          }
          "events": {
            "type": 302
          }
          "constants": [
            {
              "name": MaxActiveChildBountyCount
              "type": 4
              "value": 0x05000000
              "docs": [
                 Maximum number of child bounties that can be added to a parent bounty.
              ]
            }
            {
              "name": ChildBountyValueMinimum
              "type": 6
              "value": 0x00a0724e180900000000000000000000
              "docs": [
                 Minimum value for a child-bounty.
              ]
            }
          ]
          "errors": {
            "type": 536
          }
          "index": 30
        }
        {
          "name": NominationPools
          "storage": {
            "prefix": NominationPools
            "items": [
              {
                "name": TotalValueLocked
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   The sum of funds across all pools.
                  
                   This might be lower but never higher than the sum of `total_balance` of all [`PoolMembers`]
                   because calling `pool_withdraw_unbonded` might decrease the total stake of the pool's
                   `bonded_account` without adjusting the pallet-internal `UnbondingPool`'s.
                ]
              }
              {
                "name": MinJoinBond
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   Minimum amount to bond to join a pool.
                ]
              }
              {
                "name": MinCreateBond
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": [
                   Minimum bond required to create a pool.
                  
                   This is the amount that the depositor must put as their initial stake in the pool, as an
                   indication of skin in the game.
                  
                   This is the value that will always exist in the staking ledger of the pool bonded account
                   while all other accounts leave.
                ]
              }
              {
                "name": MaxPools
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Maximum number of nomination pools that can exist. If `None`, then an unbounded number of
                   pools can exist.
                ]
              }
              {
                "name": MaxPoolMembers
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Maximum number of members that can exist in the system. If `None`, then the count
                   members are not bound on a system wide basis.
                ]
              }
              {
                "name": MaxPoolMembersPerPool
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": [
                   Maximum number of members that may belong to pool. If `None`, then the count of
                   members is not bound on a per pool basis.
                ]
              }
              {
                "name": GlobalMaxCommission
                "modifier": Optional
                "type": {
                  "Plain": 51
                }
                "fallback": 0x00
                "docs": [
                   The maximum commission that can be charged by a pool. Used on commission payouts to bound
                   pool commissions that are > `GlobalMaxCommission`, necessary if a future
                   `GlobalMaxCommission` is lower than some current pool commissions.
                ]
              }
              {
                "name": PoolMembers
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 537
                  }
                }
                "fallback": 0x00
                "docs": [
                   Active members.
                  
                   TWOX-"NOTE": SAFE since `AccountId` is a secure hash.
                ]
              }
              {
                "name": CounterForPoolMembers
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": BondedPools
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 540
                  }
                }
                "fallback": 0x00
                "docs": [
                   Storage for bonded pools.
                ]
              }
              {
                "name": CounterForBondedPools
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": RewardPools
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 545
                  }
                }
                "fallback": 0x00
                "docs": [
                   Reward pools. This is where there rewards for each pool accumulate. When a members payout is
                   claimed, the balance comes out fo the reward pool. Keyed by the bonded pools account.
                ]
              }
              {
                "name": CounterForRewardPools
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": SubPoolsStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 546
                  }
                }
                "fallback": 0x00
                "docs": [
                   Groups of unbonding pools. Each group of unbonding pools belongs to a
                   bonded pool, hence the name sub-pools. Keyed by the bonded pools account.
                ]
              }
              {
                "name": CounterForSubPoolsStorage
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": Metadata
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 4
                    "value": 552
                  }
                }
                "fallback": 0x00
                "docs": [
                   Metadata for the pool.
                ]
              }
              {
                "name": CounterForMetadata
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": LastPoolId
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   Ever increasing number of all pools created so far.
                ]
              }
              {
                "name": ReversePoolIdLookup
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 4
                  }
                }
                "fallback": 0x00
                "docs": [
                   A reverse lookup from the pool's account id to its id.
                  
                   This is only used for slashing. In all other instances, the pool id is used, and the
                   accounts are deterministically derived from it.
                ]
              }
              {
                "name": CounterForReversePoolIdLookup
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": ClaimPermissions
                "modifier": Default
                "type": {
                  "Map": {
                    "hashers": [
                      Twox64Concat
                    ]
                    "key": 0
                    "value": 258
                  }
                }
                "fallback": 0x00
                "docs": [
                   Map from a pool member account to their opted claim permission.
                ]
              }
            ]
          }
          "calls": {
            "type": 251
          }
          "events": {
            "type": 303
          }
          "constants": [
            {
              "name": PalletId
              "type": 436
              "value": py/nopls
              "docs": [
                 The nomination pool's pallet id.
              ]
            }
            {
              "name": MaxPointsToBalance
              "type": 2
              "value": 0x0a
              "docs": [
                 The maximum pool points-to-balance ratio that an `open` pool can have.
                
                 This is important in the event slashing takes place and the pool's points-to-balance
                 ratio becomes disproportional.
                
                 Moreover, this relates to the `RewardCounter` type as well, as the arithmetic operations
                 are a function of number of points, and by setting this value to e.g. 10, you ensure
                 that the total number of points in the system are at most 10 times the total_issuance of
                 the chain, in the absolute worse case.
                
                 For a value of 10, the threshold would be a pool points-to-balance ratio of "10":1.
                 Such a scenario would also be the equivalent of the pool being 90% slashed.
              ]
            }
          ]
          "errors": {
            "type": 553
          }
          "index": 31
        }
        {
          "name": GearProgram
          "storage": {
            "prefix": GearProgram
            "items": [
              {
                "name": CodeStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 263
                    "value": 555
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": CodeLenStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 263
                    "value": 4
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": OriginalCodeStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 263
                    "value": 13
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": MetadataStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 263
                    "value": 562
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": ProgramStorage
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 264
                    "value": 563
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": MemoryPages
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                      Identity
                      Identity
                    ]
                    "key": 580
                    "value": 581
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": null
          "events": null
          "constants": []
          "errors": {
            "type": 583
          }
          "index": 100
        }
        {
          "name": GearMessenger
          "storage": {
            "prefix": GearMessenger
            "items": [
              {
                "name": Dequeued
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Dispatches
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 265
                    "value": 584
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": CounterForDispatches
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                  Counter for the related counted storage map
                ]
              }
              {
                "name": Head
                "modifier": Optional
                "type": {
                  "Plain": 265
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Mailbox
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                      Identity
                    ]
                    "key": 599
                    "value": 600
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": QueueProcessing
                "modifier": Optional
                "type": {
                  "Plain": 54
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Sent
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Tail
                "modifier": Optional
                "type": {
                  "Plain": 265
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Waitlist
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                      Identity
                    ]
                    "key": 603
                    "value": 604
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": DispatchStash
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 265
                    "value": 605
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": null
          "events": null
          "constants": []
          "errors": {
            "type": 607
          }
          "index": 101
        }
        {
          "name": GearScheduler
          "storage": {
            "prefix": GearScheduler
            "items": [
              {
                "name": FirstIncompleteTasksBlock
                "modifier": Optional
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": TaskPool
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                      Identity
                    ]
                    "key": 608
                    "value": 58
                  }
                }
                "fallback": 0x00
                "docs": []
              }
            ]
          }
          "calls": null
          "events": null
          "constants": [
            {
              "name": ReserveThreshold
              "type": 4
              "value": 0x01000000
              "docs": [
                 Amount of blocks for extra delay used to secure from outdated tasks.
              ]
            }
            {
              "name": WaitlistCost
              "type": 11
              "value": 0x6400000000000000
              "docs": [
                 Cost for storing in waitlist per block.
              ]
            }
            {
              "name": MailboxCost
              "type": 11
              "value": 0x6400000000000000
              "docs": [
                 Cost for storing in mailbox per block.
              ]
            }
            {
              "name": ReservationCost
              "type": 11
              "value": 0x6400000000000000
              "docs": [
                 Cost for reservation holding.
              ]
            }
            {
              "name": DispatchHoldCost
              "type": 11
              "value": 0x6400000000000000
              "docs": [
                 Cost for reservation holding.
              ]
            }
          ]
          "errors": {
            "type": 610
          }
          "index": 102
        }
        {
          "name": GearGas
          "storage": {
            "prefix": GearGas
            "items": [
              {
                "name": TotalIssuance
                "modifier": Optional
                "type": {
                  "Plain": 11
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": GasNodes
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 324
                    "value": 611
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": Allowance
                "modifier": Default
                "type": {
                  "Plain": 11
                }
                "fallback": 0x00cc7b9fae000000
                "docs": []
              }
            ]
          }
          "calls": null
          "events": null
          "constants": [
            {
              "name": BlockGasLimit
              "type": 11
              "value": 0x00cc7b9fae000000
              "docs": [
                 The maximum amount of gas that can be used within a single block.
              ]
            }
          ]
          "errors": {
            "type": 616
          }
          "index": 103
        }
        {
          "name": Gear
          "storage": {
            "prefix": Gear
            "items": [
              {
                "name": ExecuteInherent
                "modifier": Default
                "type": {
                  "Plain": 54
                }
                "fallback": 0x01
                "docs": [
                   A flag indicating whether the message queue should be processed at the end of a block
                  
                   If not set, the inherent extrinsic that processes the queue will keep throwing an error
                   thereby making the block builder exclude it from the block.
                ]
              }
              {
                "name": BlockNumber
                "modifier": Default
                "type": {
                  "Plain": 4
                }
                "fallback": 0x00000000
                "docs": [
                   The current block number being processed.
                  
                   It shows block number in which queue is processed.
                   May be less than system pallet block number if panic occurred previously.
                ]
              }
              {
                "name": GearRunInBlock
                "modifier": Optional
                "type": {
                  "Plain": 58
                }
                "fallback": 0x00
                "docs": [
                   A guard to prohibit all but the first execution of `"pallet_gear"::run()` call in a block.
                  
                   Set to `Some(())` if the extrinsic is executed for the first time in a block.
                   All subsequent attempts would fail with `"Error"::<T>::GearRunAlreadyInBlock` error.
                   Set back to `None` in the `on_finalize()` hook at the end of the block.
                ]
              }
            ]
          }
          "calls": {
            "type": 262
          }
          "events": {
            "type": 304
          }
          "constants": [
            {
              "name": Schedule
              "type": 617
              "value": 0x01878f00000001000000040000800000000002001000000001000020000000200000000000800000000800000400008c05000099000000270c0000f21200004847000035480000ef0f000097100000400d0000c80e0000591d00005d000000aa120000013f00009f030000000000000f030000bd0500006d0500000a0300000a040000152f0000c810000038100000131000007f0f000040020000ac010000bd050000d003000063020000160200001502000004020000e001000024020000360100008e00000000050000640300002d050000800300003a0500006803000030050000680300001105000028030000030500002e030000040500009a0300003f0500002f030000330500001803000020050000770300007f030000dc0100007b030000db010000b00400004c030000aa0b0000a1080000190c000051080000c92600005f1b0000f30b0000360800009c0300008101000053030000a601000077030000b20100000a03000056010000dc020000a8010000e502000063010000150300006b010000be020000b101000092d15c000032903300001e5c350000ca480200003a397f0000ca7276000066793d0000a2a23c000062da3800005adf360000d6433700008e2a380000de773c00004e4a3600004239620000250300c2053f00007215370000f2c3360000fecb6e0000f6567a0100d6fbb30000d907008235b60000d50700560843000026697b0000dd070006c79500000e2f980000c6f4c00000dd07007a77a20000ea7dd50400ba59ce04000a7cde01007a362900000240a6010002fe69000012a81d0500450a009293fe04004d0a00410a00726e3800006679360000d6f7380000aa6b9f0400dabdf005000e3f4700003d0200ae07ad0000d600af0000c2ae5800008d02004afc490000050700ea5a380000d24d93050042e3dc020042b69e0200a260bc02008addc30200ae84e30000c29fe40000d901000d1600ee25e70000d901001916008285c4060016bb0b0800fecb100200825f70070062bff00800860dae0200dedb88020002dec418009101009e7531000000000000010300b503002109009a2cf8433d3bfa12260000
              "docs": [
                 Cost schedule and limits.
              ]
            }
            {
              "name": OutgoingLimit
              "type": 4
              "value": 0x00040000
              "docs": [
                 The maximum amount of messages that can be produced in during all message executions.
              ]
            }
            {
              "name": OutgoingBytesLimit
              "type": 4
              "value": 0x00000004
              "docs": [
                 The maximum amount of bytes in outgoing messages during message execution.
              ]
            }
            {
              "name": PerformanceMultiplier
              "type": 622
              "value": 0x64000000
              "docs": [
                 Performance multiplier.
              ]
            }
            {
              "name": MailboxThreshold
              "type": 11
              "value": 0xb80b000000000000
              "docs": [
                 The minimal gas amount for message to be inserted in mailbox.
                
                 This gas will be consuming as rent for storing and message will be available
                 for reply or claim, once gas ends, message removes.
                
                 Messages with gas limit less than that minimum will not be added in mailbox,
                 but will be seen in events.
              ]
            }
            {
              "name": ReservationsLimit
              "type": 11
              "value": 0x0001000000000000
              "docs": [
                 Amount of reservations can exist for 1 program.
              ]
            }
            {
              "name": ProgramRentFreePeriod
              "type": 4
              "value": 0x00d44900
              "docs": [
                 The free of charge period of rent.
              ]
            }
            {
              "name": ProgramResumeMinimalRentPeriod
              "type": 4
              "value": 0x004e0c00
              "docs": [
                 The minimal amount of blocks to resume.
              ]
            }
            {
              "name": ProgramRentCostPerBlock
              "type": 6
              "value": 0x40597307000000000000000000000000
              "docs": [
                 The program rent cost per block.
              ]
            }
            {
              "name": ProgramResumeSessionDuration
              "type": 4
              "value": 0xb0040000
              "docs": [
                 The amount of blocks for processing resume session.
              ]
            }
            {
              "name": ProgramRentEnabled
              "type": 54
              "value": 0x00
              "docs": [
                 The flag determines if program rent mechanism enabled.
              ]
            }
            {
              "name": ProgramRentDisabledDelta
              "type": 4
              "value": 0x80130300
              "docs": [
                 The constant defines value that is added if the program
                 rent is disabled.
              ]
            }
            {
              "name": RentPoolId
              "type": 274
              "value": 0x01e68325a26f5e8ea5c6c93bbdcfa596ac3ec8b69301c0cc54029dc7bc891bc515
              "docs": [
                 The account id of the rent pool if any.
              ]
            }
          ]
          "errors": {
            "type": 623
          }
          "index": 104
        }
        {
          "name": GearPayment
          "storage": null
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 105
        }
        {
          "name": StakingRewards
          "storage": {
            "prefix": StakingRewards
            "items": [
              {
                "name": TargetInflation
                "modifier": Default
                "type": {
                  "Plain": 624
                }
                "fallback": 0x0000000000000000
                "docs": [
                   Target inflation (at ideal stake)
                ]
              }
              {
                "name": IdealStakingRatio
                "modifier": Default
                "type": {
                  "Plain": 624
                }
                "fallback": 0x0000000000000000
                "docs": [
                   Ideal staking ratio
                ]
              }
              {
                "name": NonStakeableShare
                "modifier": Default
                "type": {
                  "Plain": 624
                }
                "fallback": 0x0000000000000000
                "docs": [
                   The current share of issued tokens that cannot be staked (e.g. being vested)
                   This value is guaranteed to remain unchanged for the first year until vesting kicks in.
                   Subsequently, the non-stakeable share should be calculated based on the vesting balances.
                ]
              }
              {
                "name": FilteredAccounts
                "modifier": Default
                "type": {
                  "Plain": 625
                }
                "fallback": 0x00
                "docs": [
                   List of accounts whose locked balance (due to incomplete vesting) should be excluded from
                   the total stakeable quantity.
                   During the 1st year the non-stakeable amount is accounted for as a fixed fraction of TTS.
                ]
              }
            ]
          }
          "calls": {
            "type": 267
          }
          "events": {
            "type": 334
          }
          "constants": [
            {
              "name": PalletId
              "type": 436
              "value": py/strwd
              "docs": [
                 The staking rewards' pallet id, used for deriving its sovereign account ID.
              ]
            }
            {
              "name": MillisecondsPerYear
              "type": 11
              "value": 0x00c3fa5807000000
              "docs": [
                 Milliseconds per year to calculate inflation.
              ]
            }
            {
              "name": MinInflation
              "type": 624
              "value": 0x0000c16ff2862300
              "docs": [
                 Minimum annual inflation.
              ]
            }
            {
              "name": MaxROI
              "type": 624
              "value": 0x00009e1869d02904
              "docs": [
                 ROI cap.
              ]
            }
            {
              "name": Falloff
              "type": 624
              "value": 0x000082dfe40d4700
              "docs": [
                 Exponential decay (fall-off) parameter.
              ]
            }
          ]
          "errors": {
            "type": 626
          }
          "index": 106
        }
        {
          "name": GearVoucher
          "storage": {
            "prefix": GearVoucher
            "items": [
              {
                "name": Issued
                "modifier": Optional
                "type": {
                  "Plain": 11
                }
                "fallback": 0x00
                "docs": [
                   Storage containing amount of the total vouchers issued.
                  
                   Used as nonce in voucher creation.
                ]
              }
              {
                "name": Vouchers
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                      Identity
                    ]
                    "key": 627
                    "value": 628
                  }
                }
                "fallback": 0x00
                "docs": [
                   Double map storage containing data of the voucher,
                   associated with some spender and voucher ids.
                ]
              }
            ]
          }
          "calls": {
            "type": 268
          }
          "events": {
            "type": 335
          }
          "constants": [
            {
              "name": PalletId
              "type": 436
              "value": py/vouch
              "docs": [
                 The pallet id, used for deriving its sovereign account ID.
              ]
            }
            {
              "name": MaxProgramsAmount
              "type": 2
              "value":  
              "docs": [
                 Maximal amount of programs to be specified to interact with.
              ]
            }
            {
              "name": MinDuration
              "type": 4
              "value": 0x14000000
              "docs": [
                 Minimal duration in blocks voucher could be issued/prolonged for.
              ]
            }
            {
              "name": MaxDuration
              "type": 4
              "value": 0x00ea2400
              "docs": [
                 Maximal duration in blocks voucher could be issued/prolonged for.
              ]
            }
          ]
          "errors": {
            "type": 629
          }
          "index": 107
        }
        {
          "name": GearBank
          "storage": {
            "prefix": GearBank
            "items": [
              {
                "name": Bank
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 0
                    "value": 630
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": UnusedValue
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": []
              }
              {
                "name": OnFinalizeTransfers
                "modifier": Optional
                "type": {
                  "Map": {
                    "hashers": [
                      Identity
                    ]
                    "key": 0
                    "value": 6
                  }
                }
                "fallback": 0x00
                "docs": []
              }
              {
                "name": OnFinalizeValue
                "modifier": Default
                "type": {
                  "Plain": 6
                }
                "fallback": 0x00000000000000000000000000000000
                "docs": []
              }
            ]
          }
          "calls": null
          "events": null
          "constants": [
            {
              "name": BankAddress
              "type": 0
              "value": gearbankgearbankgearbankgearbank
              "docs": [
                 Bank account address, that will keep all reserved funds.
              ]
            }
            {
              "name": GasMultiplier
              "type": 612
              "value": 0x0006000000000000000000000000000000
              "docs": [
                 Gas price converter.
              ]
            }
          ]
          "errors": {
            "type": 631
          }
          "index": 108
        }
        {
          "name": GearBuiltin
          "storage": null
          "calls": null
          "events": null
          "constants": []
          "errors": null
          "index": 109
        }
      ]
      "extrinsic": {
        "type": 632
        "version": 4
        "signedExtensions": [
          {
            "identifier": StakingBlackList
            "type": 637
            "additionalSigned": 58
          }
          {
            "identifier": CheckNonZeroSender
            "type": 638
            "additionalSigned": 58
          }
          {
            "identifier": CheckSpecVersion
            "type": 639
            "additionalSigned": 4
          }
          {
            "identifier": CheckTxVersion
            "type": 640
            "additionalSigned": 4
          }
          {
            "identifier": CheckGenesis
            "type": 641
            "additionalSigned": 12
          }
          {
            "identifier": CheckMortality
            "type": 642
            "additionalSigned": 12
          }
          {
            "identifier": CheckNonce
            "type": 644
            "additionalSigned": 58
          }
          {
            "identifier": CheckWeight
            "type": 645
            "additionalSigned": 58
          }
          {
            "identifier": ChargeTransactionPayment
            "type": 646
            "additionalSigned": 58
          }
        ]
      }
      "type": 647
    }
  }